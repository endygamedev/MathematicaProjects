(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1716987,      33502]
NotebookOptionsPosition[   1697424,      33110]
NotebookOutlinePosition[   1705764,      33298]
CellTagsIndexPosition[   1705618,      33292]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"982cb8d0-e30a-4511-88ca-6ef11be3fb3c"],

Cell["\<\

\:041c\:043e\:0434\:0435\:043b\:0438\:0440\:043e\:0432\:0430\:043d\:0438\:0435\
 \:0437\:0430\:0431\:043b\:043e\:043a\:0438\:0440\:043e\:0432\:0430\:043d\
\:043d\:043e\:0439 \:043f\:043e\:043b\:043e\:0441\:044b \:043d\:0430 \:0430\
\:0432\:0442\:043e\:0441\:0442\:0440\:0430\:0434\:0435\
\>", "Title",
 CellChangeTimes->{{3.799427457646391*^9, 3.7994274687495327`*^9}, {
  3.799427897391428*^9, 3.79942791052222*^9}, {3.7994284673226776`*^9, 
  3.7994285658831234`*^9}},ExpressionUUID->"d3477319-66e7-4716-a08c-\
038b8ae61f84"],

Cell[TextData[StyleBox["\:041a\:0443\:0440\:0441\:043e\:0432\:0443\:044e \
\:0440\:0430\:0431\:043e\:0442\:0443 \:0432\:044b\:043f\:043e\:043b\:043d\
\:0438\:043b\n\:0441\:0442\:0443\:0434\:0435\:043d\:0442 \:0433\:0440\:0443\
\:043f\:043f\:044b \:041f\:041c-1901\n\:0411\:0440\:043e\:043d\:043d\:0438\
\:043a\:043e\:0432 \:0415\:0433\:043e\:0440",
 FontSize:>Dynamic[
  0.0264 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]], "Title",
 CellChangeTimes->{3.799428550647114*^9},
 TextAlignment->Right,ExpressionUUID->"7857bd94-c60f-4f41-b86e-d965aac597a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b8146cd2-dcdf-483c-8d10-1a6d0c30904d"],

Cell[CellGroupData[{

Cell["\:0417\:0430\:0434\:0430\:0447\:0430", "Section",
 CellChangeTimes->{{3.8000326140697794`*^9, 3.8000326169661674`*^9}},
 FontSize:>Dynamic[
  0.038 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"e210ba14-65eb-465e-b025-a3ffac59d11c"],

Cell[CellGroupData[{

Cell["\<\
\:0421\:043e\:0437\:0434\:0430\:0442\:044c \:043c\:043e\:0434\:0435\:043b\
\:044c, \:043a\:043e\:0442\:043e\:0440\:0430\:044f \:0431\:0443\:0434\:0435\
\:043c \:0438\:043c\:0438\:0442\:0438\:0440\:043e\:0432\:0430\:0442\:044c \
\:0434\:0432\:0438\:0436\:0435\:043d\:0438\:0435 \:0430\:0432\:0442\:043e\
\:043c\:043e\:0431\:0438\:043b\:0435\:0439 \:043d\:0430 \:0434\:0432\:0443\
\:0445\:043f\:043e\:043b\:043e\:0441\:043d\:043e\:0439 \:0430\:0432\:0442\
\:043e\:0441\:0442\:0440\:0430\:0434\:0435 \:0441 \:0437\:0430\:0431\:043b\
\:043e\:043a\:0438\:0440\:043e\:0432\:0430\:043d\:043d\:043e\:0439 \:043f\
\:043e\:043b\:043e\:0441\:043e\:0439 \:0434\:0432\:0438\:0436\:0435\:043d\
\:0438\:044f \:0438 \:0441\:043e\:0437\:0434\:0430\:0442\:044c \:043f\:043b\
\:0430\:0442\:0444\:043e\:0440\:043c\:0443 \:0434\:043b\:044f \:0430\:043d\
\:0430\:043b\:0438\:0437\:0430 \:043c\:043e\:0434\:0435\:043b\:0438 \:043f\
\:0440\:0438 \:0440\:0430\:0437\:043b\:0438\:0447\:043d\:044b\:0445 \:043f\
\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:0430\:0445.\
\>", "Subsection",
 ShowGroupOpener->None,
 CellChangeTimes->{{3.8000331558501225`*^9, 3.8000331743465486`*^9}, {
  3.8000341778351808`*^9, 3.800034197229328*^9}},
 FontSize:>Dynamic[
  0.029999999999999995` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
 FontWeight->"Plain",ExpressionUUID->"f582ff7d-eb2f-4fb6-835a-0f08e71ad5bc"],

Cell["", "Text",
 CellChangeTimes->{{3.8000341335783825`*^9, 3.8000341352116756`*^9}},
 FontSize:>Dynamic[
  0.0412 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"317eb84d-6d55-482c-9362-009c03c1b21f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJyMvHd0JNl15tka2q4qeKT33nvvvfcOiQQS3nufcAmbCSSARML7qurqrjbs
bpKi14jikuKQFD1F0xpKGkkcUUtxxJnR7Ix2z+5fe3ZvVrRwekRxz/a5HedF
5IsXEYnu3/fd+14krXcqPvhvXnrppbmPwybes2ibne1ZTtTDTmpybmRocqDf
Nzk/MDQwq+39EBxM/h5soH+1zZcQcNRanpzCUVJRnBqcuI5pxMoCTHML098j
CPXyfVmmr4OemVS7smx/r5itR8nsVJmVITHScawajoos0DN4BgbDgBPaySwD
hqVr5pjQDGMz24YWuAlCL4XrJNOMBKqOyLEy5AGRKiKU+9myAJtjIyqjXFmI
KQ5Q1DGm0I2TuLHaFE8To2siBHmgWREmqANUpYWiN3PsNmPIa4967G6DBiLi
tqRi3ljYFbRZkl5vyhdI+PypgD/udUc91lTQEQ05/TZ9zG1NBexhlzngNHan
43sry6MdqaTb0er3dQQ8fSH7eMrT4Tf0J125Ft9QyNgfti5kwoXO4FKLYSDu
DLlD0Y6WsemRr33l8z/45teXZucH+0Z7ugcH+keH+seGBsfHx2ZmpnPTM7nx
qfnJmdzswsrC0tp9LK5srKxt5zeK61u7mzv7m4U9iK3tUjU2d5HYWC9CbG7s
rG8U19YLy/mt3PL6/PJabnlzZa0Isbq+s1k42NjeX9ssQSO/sQvbYuloZ++4
dHB8UDmDgMbpxS3E2eXdxeXd+dnN6cnV8dHFUfnsYP/osHyyX6gcrO2+c3Py
l9/77Le//NbV4cHb77z29+/9yTc/+9rpUal8frW7U66UTw5Pzo8q5yfHlzDC
xfktxNnpNYxTOTyDg9UBK+fQPiyflg9ODvaPIeARtrdKO8WDvVIFBoE2slva
PYTd/b0j6A8nwumXF3dPHr/2/PW333jz3Tff+uQbn/jU8zfffeW1t+6ePr9+
8urtk9eu755d3jxF7h+uC3F+cg0nwuXgQsgWRi5s78HIhcJxsXi0u3PwxS99
5r//919/7Wt/kF9Z21jeWZvNbczNlVZmjwuLR9vzR1tLle38web6SWlzb2Np
e3kWtvuby2f720c76zv5hdL64vlBAT6FXdie7m0hu5Xd9aPSBrSvKruwLW+v
Qufi6vzG4vxZuVDaminkR/ILvWu5wdW54bXZ8YHeRDrhDXocXrvdZTA61aqg
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
n4EGshzoydPnkHcgF0X4j8wFIPy/F52Do+Pq/PjOaaFQKR+enJ6e/vjHP/rl
L3/5xpvvrK6uLebmN1aqVaBCfn5rZXZvaxEYjizvAf5DgBaU1he3l2cB9YBx
4D+kANAorS/sby6Wt5cPN5b31hYLS7PrC5Ng9cH5H+5tVPY3K7ub5eI6oizg
/z/5/Pb6uLi9NHlYnDouTp8XZ6525k43xg6WeitrfcebfcW1nsmJWFuXbWA8
NJ5LLO62j22HF85a83ed63ddpWcDxZuO3ZvOwmX77k22eNW2c9O9d9u3e9Gz
cdi5cza4dzmyWu6cL6Znt1O5UvtsIQMSAJAHS6YMkLw9mmivVu4hyrxERYga
GtK2zJjdPfzIsCQ2JoQI9nOH1iwzO+6lcmBxz7l9Htq8iMQG2CAQsSFteFAd
7JW1zZiSwyp9kK720u0JmTetFxloNAlaamQypVgcrRFFagTD34hpasKga5vq
8BRcM66xjvgQx22iyrFcE5mpw5LkDQRpA1mGoikIfB1doKPy1ESFnWGI8qR+
gtCPVYYpAitGZqYyZRidTyx1MHztqu4p50ypFe4E8hd3VuzMiHVhltbHUjjp
XAOFY8Aq/FRthAGJgNpLdqa4gzlXbss3PKcbmFT1jytmluxtfeLWXmn7kCo7
ougcU/tbuIEWYe+EY3jON7+RnF2P9sw4WwY1XVPmWJ8s2ivtmLGO5MOeNhHf
/LB10uTvlgT6ZPAlQCM1pIEIJDneCKO1S9E3ak53q4JpUaJLE+/RR7q0/ow8
3KEenPVHu9QaN8kQpIutaI6mnqNp0vu47qTU4KeZwzSNm6B2keWWJqGuBuTD
5KeY/XSZCSc1kzxJdaBNR1fW0tQ1pgTL0yHUhIgqH5arfyCSYencWgavRqxF
8ZSP2NKHQjkaTD6TW4U5V1THl9Sx+A/o7IfAf8A+SAACf6mCzBNioE1h1kKI
1ASOFAXjsAR1oCBCFZopqcOyP0IX1Eq1VOA/ML8BUwMSQOMQyEw0iv1hNPtl
PK+ZwMNi2SgSpBJKFFvdQFA0CF1kTZxjbOVaMjxHhg/mX2HHaSM0S0bItDQz
rVi2nUjVYygaFEOHouia2VYSXUeiacl0HYWowhI1aJIBA86faSGzrCSWBc+2
4sD2cx14UBaqoZFjxwk8ZL6bJIZEwE8TOIkKH13vx+mcRK2BqpAxFQqBSi2W
yjkaFU+nlgH8DVqZHrCvlVs1UuC/UcLz6uRevSxsVcXtqpBBFNILo0ZZWC9r
0UvazNJOh3gorhlO6nqCmpGAdcJrH/MbJuzy3aC2YmJXxI03SvxjI/dYy7kz
CXLMun07+ywm2AtI5ty2hMuV6m69vDn+2c++/9qTq2rdZ3C8u7vK/qmJyQ/y
f2Jy7p7/EL9d/9kA4JfK4P+rM7Y7B5ACIJ4fqZwg/FwDmXhR/4FTlte3Af7I
mp97/iOJALILEvAiHbgG5gP5T86rU7eQAsAuwn9EAq4vHl9VV4TewonnZ9c3
Z7vf+8Zbf/Xe1z7x9PHjm/M//cqn//Hn37q7hsygdHF2eQESs3967/+R+g9S
/wcaI3WY3+Y/YvghEBUDRYM2WPTfxX+4vdu7Z4+fvAZWHyQAsgDg/yc+9VnY
QgpQXQ70gv9I3gH6BRdF5gIQ/iPXfVH/P4IvpLB7DKnNQblydHT0zjvv/NM/
/R/f/v6Ptgs7S7nFxbnp/MIUcHt1fnRzeQqx8QdbK8iaH2Q6GJICcPvg+YH/
EEc74PZzSJwU1sqbK6V8bnNxenl2dGlmZGN1tgw9d7YPCmswLAwCSgHSADqy
PjexsTh+tpc/2V682V16ZW/lZHX4fGPobnfiuDy5kEtPzCbzhf7ZfGZxLzu5
n5y7bss/7lp/0l18pWf7Ort12Qrw373rKFy37tx2rp9mNk87wPmvHXQVTgby
5e7lvY71o67Vg661o/7p7dbIgFoVIuljrNCgxRBn29qkgUGDo1tpaOXau4W6
Vkpn3rp4GGsZk+vCqMFV+9JhbOs0fvW8++7N7rltT7CTmRyR9q1apkq+sYJv
YNndNmExBSUPsC81Uj9G4NXXkz+sdLDbRt0KBxmA0Eh52ECqI3MpRDa5FlXT
gKutQX0cQ0QJlSy+mspRYxjKepEFB06Yr0eTZU10OYqnxUlMRLWTao4CPYTu
XrmjS2iMsbUunlDLZCqoDBVB7WG1jdjD/SqJq9mcZKgCeEOMYYkJTGGx2Myg
KbFKL8uaFqXGrb4uWbUsM6AcX3ZGMqRMH6djgN87Kkl3MbMD4o4heduQvGtc
ObxgGV/yTiyFBue8XeO2lj5N37S9dVQf6BAEOngJ6DNnnislw/0KT4fYkaIN
5309S87wgEwTxuuDeGeSYQ2TTA6U00+MtrD9UXqsVdjarekYcvZNBuP9Ssgg
Bha8A7PucIc80CZTuSEvaGIoP85U1igcFEdCLDahIZjyOoOXr3HRICMweuk6
F0ViwAg1KL6iWaIlSE00qqSeJq9V+qi6KJ2he8jWPRJZm+QyIon2gCtuVlmr
8wVSI9rgZLH4zWx+nUpPNFipUnUzW/iAI6zlCBoZ7AYmu4HFaRRJSQIxgc5p
oLHrKZx6AuOhQI0lcx5gaR9mCh4B/LnyehL3o2jm79H4NWI1mcHHogh19ehH
IAFYciOO0sBSUprodR9r/lA96VEzo5aqwHDNeKGLxDJjFH6iyFmr8NbrYySp
FytwoaVBIseDlYVYdAOBosGQVE3g/AmqerSsFivHcKwMogLD1BLZBiJdjxd7
WXQTnm0jc+wUyBQ4NqLQTeE7SQwzCsw/6AVJV89zY0V+vCRIlAWB/ySJk6Ez
Uiwmtl3HNSv5egVPqxLq1CKtUmDUSnQqod2g8lj1Nm21/mNWCQ1ynsckc+uF
QbMM+B83K1I2bZvDkLZqe426EY2wGFR9dWf0m6cr5/3JXMwyEtHOJLyDDlOY
jJ8V027MjMeapida9Jkc90kz5RU9FZKCMTFuwinuC2l7Uq6OTOizX3j3Zz/9
4d3FxWDPQF/v0MDwRO/A6MDgGPB/anwOYn5maXpifmF2GWI59y/r/2D+17d2
gf/VmV8g/24ZCWhDLgDHq28EFPerArFzAFvgP6IXL2o756WDahwe3wDtweqf
XFxXTi4hEM9/X/OBQOB/dfvK9d0ziIvrJ3Ckmhdc3YLxPzq9O6lcXZSL3/zD
579474+/9O4blf3d737l8//4Vz/60ht3J+U9GHz/6KJydI4s17xfBfoibiF+
m//vV4H2T6qrjHarc827hQMIaFTbyGKng+O98gnkKXDD93d48/jVJ5AC3MP/
3c9AvPvpz8P2tTfeuXv6HPogkxrVLTxjNYW5rs5rV2tZZ+XD04PySenwpHRw
enrxdH8fEpgj0Jrry7v/8Bd/9Zvf/Obu7mZ9bTU3O5NfnN/KLxdWlzYW50tr
cwebub31BXD1xeW53dUFoP3u2vzR1jISp8X85d7m1f7WRWnjbGftvLh2ur1a
Xs+BBADq13KTIAEruQlw/tVXA15MClffIFiZX5oYggFBMkACNhZG9temjrdn
zramnpTmr7fGT4qT26tdi/OJla10rpiY3U/MHKYWr9rnjuNbj7Pbj9s2r1K7
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
RG7slrcNSMN1uOpWRn03r6FP5K2jOWvIKi/cEEL5a2nuSEllE8fsxUj0xcCi
A1nJjBtVILl6OEORJzOhrV66PybwV4pcFQJ3tcjkp5qC9FirurbPXNGtD7ep
VAGy1J2Z0sPVwZyVXFuUxVLmEPgPMxQ54E5jkG0IsKQWjCPCNgdoRg/JGaJZ
gTSY0Hoj2hcodTjoLnepzcmWqLEiJbpUfN3kJatcJXInXBfAyu0Ie4hh9zM9
1XyAUKUX7ahjacoIMg+Goc1namFMYwnfgqPL8gUaBEdWhKNfuxjakItg5lGE
KDoPmZkCx4JRmIUYyg0iuxBOuoah5XKEOODzUdQcOOUasTSXIy4mc4rhhCuA
/2gKDI7Lw5KLCSQEBlNIwiLIxGICuRBLulFCuo4kXC9CXsvJf/Ra3vVibC5d
XKJ0sIiCouslD+eiLxcTM8MDpW4a+H0RpI+KnEWqYIm6LFP8cTeXWmtYDCMM
ryxgmnA0PZaoKCarEGxzCVlbABw+QD1eg6IZCGwbsdSGIWjyKAYYzVQMgmEp
ppuLSh0oeZjKcaCkQbyugmqIMuwxMU9GYLBLeByCXMHWSpl6PtHEJ+o5GLuE
ZhdS7BySVUK2SWlBvdAhY/o0Aqec5VFxfFpu2CSpcuqDCqHPy6/y4+4Pqf4w
E/lDr+vfa+X/5hb+n5D0J834dw50P7pd80SDYMslnygzdUfM8bBpJqReb3DP
tcSaqzyJpliyPbjZ6FyutfaFTBUeW01NTU9f78uvfOnXv/7p/cfvtl/U/Fta
O1taM4u/nR0D0OTnocHxwaHxvv4REMMjE/EL2w+Zf4j/gO0AhpDzf9D8Z1UA
/Aiy/dB0OGizQKZkNLeWmfO5kWnLX9ncW0vuZ6bALScBZrMszc78zFZ+sv0/
0CowuGdtK726ltxY315f39zY2EhuLH73a8//5oM3bt48O06uv/Pqs7//6bef
u5NaXVza2tzd2Ulu7WZWmUGikan/XCQU0GtCDflQogHeDmpDAh8Dcv4P2v5s
/SdbC4I2rG1ugw98DL0mAHt2C8C9J569/9Tzjz/5HAhw/eeNYBcSsLN/vpG6
mTp8bH/vcH/3aGP7ZHUzs5dtczO9tL2zure/upwJ8Fc0Nb+6uphaWlzfTqY+
+uij//b7f3jm2fuLS7PT09NjY/HR0d6RkZ6JscGF6YnZxEhiuHt+oi+5HN9Y
HQN2fW02vjw1vjwzsrGQKfucry7c3hg9Xp1Nzs9vzs3szI+lF8fXxgc2JjNp
AjD/G3PjK1PDCxMDe2uz+xcrAgfJRZBP7a7OnOws7y4m9pYmz5JLydmx2fGu
xamu2YnG+qi2zM4Nuzl19bKaVuHQsm98N9azE+jbC3SuWIeS7r6ko+/A071j
69u3D+47hlPesXTZ1En59Fl08tQ/cx4BKjB5mMkI5k+ql0/rF4/rl0+bFtON
k5tVIOZ36qY2ymd3q0bXgn0LjkinsHPKNrIQGJsNzq5WLG1VTy2FhiedHaOu
7jFPYja2sFQzv1jd2KbrGXb1jHsbuo0gX6js1tQPWRsGrZVtynAdo61P3DXG
r2vn2wM0k4/urmI3DhuAH+bpcQIDReMtrRuwW6s4nkahIco0xQRSJx38B6ea
CuQRkqqcqqxgikN0vA7JcbNYVgJJWwwSf2+HzNrAE3lwpRasMsi1VDE0AVys
Q7p63DS1GWkZVLUMKWraeeWdgqpuqSGIs4QpzYP6rlFdXQenvY/T3sFv7OKE
m8iOaoIhgpPaizQuuK+KEqihuWIEmSFH78CoLIRAlTLWZnJUiqz1Uls5z+Si
ODwMq5smN2KBNKiddI2LpXUz/bVyb63EXs4B5h+E3EliaoslNqwpwuAbionC
Kwo3XuYtYRgue5pK5W4ERfyo2oGVGhBmD8kbLfVWlBrMKL0JrjchbU683UNh
C6/yFEVcJdxgx4NPonEh7eVkji6HIrvGkBcR+QUCHcYUZJtCNIUDKbXB5HaQ
BOXyNCi1ncAHFlpWoPQQJA44U5lD5mb6doCUCDVYPD+XIimmiIoQlEsw0ufp
cjhZgMSx89C0SzR+LgiQVhC5hTQxGsvJRzHzMMxiBKkAQchB4nMA5+GofCQy
F4HIKcEUIJD5xcg8OKowH3YjryinGFNUgLlewsijiBEkCQrHLcKUFiJpNzD8
HImDovIzgYjjxI8ydbksQ47Ug1JFsYoyvNRPBMAnqYow0jyqHqGv5INkofRi
J5fAS2I7yAwTgaAuohsRVGMRID/HiaEYCojaXJ4bk+n59+FFPrwsRLDUse11
fF+tUqanSuRUpYqp1nDMGo5Xy/VrSg1cLMC+R8n2yFhlZknAILaIWSA8arFd
xqlyGao9+qhFVWXWN1q1fjftbN3x71/s+tdO2d+HWX/wMf9fM+tfvIx/SMr+
zwdDf3xz+u0uxf2gaCmqGYgaJ2r8M3WumXrLaK2tu84DkoJkX+Vai3ehztkb
slT7nQ0NDb39Pa+8+sWf/eyDk+PD1pbO1rbu1rau1raOzq7+rs7B7q6B/r6R
TMPnyASQABBj41OJybkH/T/k7SH+f6bzJ7sKkC37Qy2gf178Xc6MfdvYSW/u
Hm7tHW3vnyR3jzY396HiT2ZQc+rPxXlwnV0RhnTh0+af7f1M8+f69sbGVpb/
3379md988Nrj924fba+/9dJTv//pW1955nxzdQVgM5ncBPBP7h1A/IeaS7P8
h94oqziQBGRtP/TVssyHSljQ+iw0sw7wH5h/QH5AdcD2bP8PVPl54ukXQEBC
ADUCQVnA2fljqdTpydHpaWo3mUyuHxxvHh4D9bu5s3WYWt3eWQfqBmRlbn1l
dXt1awt8jC3wjl9785u//9d/fuv735mZm56cnurrHxzt7x/u7Z0eGV2anFqZ
mlyMj80MZzpC5+Jj06PDC/Hx1dnppdmJpZmh5NzA4dLAWWb9dyYzDnp+bmtq
Kjk1OjvYsZgY3F6cTi5Mbc4lUqvA809vL8+A24PNpfT2EtCC452Vs73Vw/W5
2aHOzemRrZnRlZnh8YGGga7IaG+st9FVH1NVxAT94/aOSWv7onMgFW3fcHet
Ooa2PH1J19BhsGfXPnTgHDl0j6Y/5f/MeWz6LLRwpwJcgOxgdMc/c1w5d1yz
eNa4drMFSMDqSevUdtXsTt1CqnFmp3p8IwzEpX/JM7kdS2xG4svBuY3YwlbF
wlbV6l79dDLTRzo6ExqdDEwtRPrGHH3jzun1yvHlss6EvWfO0xJ3tE14moft
sWZ+uI5W1caoahF6YtyKVnXjoLFhxKAJUcraTJZyaaBFZ63iupuEgXaJp1ki
cRM4Vpy6nB3s1VVP2MKDOn1NqbGWZ21QKCNcWYitjHA8bar6Sbe9QQiyfn0F
x14vM0VJzhpm/ZBmcita0SX01VDDjQxnDFs/qAg0lJrLyMYg0VVOC9WxovXU
7hFJXRO9pU9Q0cF21FC1YaLQCnNUUMpbSzvHtY19ckcIp7aXCDXFAPJyO5ml
LmJoETIbSapFiVRwnqpYbiWxFXAU/RK+NJclR5QqETRpHleLcFaIZDaCPshS
eegqD9lRwWWr85nK/ECTTBXCm6pIMh8aMBBgWWhASoFXVxcpbRi9hxSq4CsN
CIUWrrdgzQ6iyojiyXLFuuJAlO2Psg1OtD1ClVoRMjuGqSiiSYqYMrjYiCML
L5OEj8psJVoPha8tEehwejdN62ZwNEiRBS2xl4iMCK4MyZcQNSa6RE/C8fIy
wcnFc24Qebk0WTGBW1xMvgrkAJCfJSnGsXPQzDxwJ5JxHUXPR9GK4MT8ixJQ
LhKTC/hfWHglP/9SUXFOIex6QdF1GDwvt+BaXuF1BAV2CfYXubhHsLxinoEu
dXBUXq7AhBWacQxFsdhBUgdYYhdR7iMDz09S3yh1whlmGN2QKeuxDSVMI5Ju
hotCJEWIwrIWE7Q3Mlt6nQSBh0o1wukmGOA/1Vgo8OLYdiTfgwX/HjSVTEmI
qIzQdJUMfSVFGSSAv3xnWKY3s8VSnEJOdpr4UbskpOcZ+Di7gubVcFxypk5A
0fKpXr3MJhe41JKITe83KsqsmqhVW2+ztjmNFVHKD79c/08bkr/XPfKPqtx/
tZH/aKT8oxX2L89a/vjx4N8v2X7fKfnHhOsLtbrFiHGyKjTZGJxsdky1e7vq
nEtt1RvxltmWwEy9p9NvKfe6M/5/sPsb33rlww/fTW5tdLT3ANvf3TPQ1d2b
cfu9o8D8Dw6MjY4kRscmR0YTIID5n7po4IciW/zP1kAAJKGA1oIhzwxu/1P+
r61lgJlMAdad7Byc7h2e7x2c7ewc/afF/8/wHwpoHPT6dirT2LO+meX/179y
/9fvv/rcs08c72x87YXHfveTb3/r5Sd3Nlb3dlKbm+tZ+O8eHGXhD6CdLQQ9
KAEg1jOlmJ1sCgB9o+xXg75v1v8DCcvWqU7OH4Pm/wDgA/JD/h9KAaCNYBD/
z2/ePTu/AyQ4nUruHOyCHOIkPfXG/ckPnx380TMTf3VzMbm0vLZxeLE5bmti
OtN2u7KRvH3v7k9//tGvf/vJ8cn+7Nzk2NjI2PjgeHxoaLh3fLx/amJgerJ/
eXFsdWk0tTh1uDZ7tDG/v7Wyt7W+v7ZyvJJ4bGXwjfTSt27PvpyeuLM4vZOY
XZuenBnp2pwe2pqfXJ0ay2z4nRhemR4D8N9anNpcmATkX54a3l6eOtiYu7m/
fry5sD0fByowM9K9sTi8ONW5sdA/0VM51h1taTT2DDr7Fj1dK972FXdX0tef
9LUtWsb2Q/HjaM+WZSjlGLvg/8h+IJ4OT51GAP+nb0amzqKJ47Kx/eDsScXs
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
0TQFJHWexE/muzFYFYqkwWTG+OuwZFVmnhvfR2U6sVw7ShLAycJ4EKpKliLC
UEbpwOErgM+vZgPPr61iAfjzvSWKKNneAv6dcLWVVE+bINanNZaxXOUST1QS
iEn9ZSKPo9QoxVllJJuS7tJzPQZBpVfrNwm9BkFmyKde4lQLgBaEbUrwR5dd
VmbTtYbs4TLcs5PsD4OX/531F/9HhPo3fvH/5N/4b95r/3DOfrOz4Heqov+t
yvsnA+w39ao3xyumYpbxhuBApWdxqPvp5597+eVXT5PT8dbYaF2wwWdvAu6/
oX7ncPujT37w1a/+VXwcuP3MIS+DQ2M9vZme/96eEWjgw/BQHDL/Y+NTwP8n
Lmo+UECzHS6WcbegCsl/NP/Q9lhoXTg7FAJ61uLi5sr67vr2AZAAAECQAuyk
TgD/of7PB/n/mYVgCLDQFjAQ6zs768ntC/5nGvs3N5a//MzJ37738mtfeeZ4
b/P5e6c/f+/rf/P2K0dba3ubya2tLUD+T83/4adG/fDk1qetOBcvm1WB7Nwh
SAKyXaCQqIF7oK92oQWf8h9cQJ8KUpZsIejs1j3oOEgooF3AEP/TZ2d7J+fb
6bPk8a2V9Pn+8cETW93f3wl/cEv/0RPlP3xx7mZ6LVNc2szsVnb5yx566HNe
t2dzY+3pp574h9/88r13/zq5vrY4PT0/NrWcmJkcGBnt7hnp6pzo71ueTCwl
Jg7mZg/mEyebM8fbS+sLU/PjfbszHfc229+6Jfh+Gv3WGvqVNfutnb6t1Njy
cu/55nx6Y2l9Jr6cGMlsIr44UBiY/8eO9/bWZjcXJoAErM6OrM2MbC8l7h5v
g9fcXpoc6qqdn+yem+icG+lYS/QuJFqnJ+qa+rR1wFondIMbzt5NS9uStn/d
PLJu7V8xj2xD/LcD/g/uescO/PFD7+TN8Ozt2GjmOjiaCoAUYOa4fOVOY/KJ
1qXzup3HuzfOO9aOO9dPurZvD23dHNh4rHv+pH7ptGrlrGouHVk+q1270zZ3
1Dh7XA7uXD2rWTmtnj+IrJ5XN41Lawb59XFDWbco1CUKtCvqR3zlHU6JmSq1
UCRmbKBOFmyUlXcro13i5oQ50C4p61KH+yyuFpWhSuBtV2sreZIgjW5GSoNM
uhFF0RWJvXh7HTfSLdOHsYYyTGWXpD4uL+vihzrE/ha5Psqx18hs1VJDjBvr
1HZO+fvmw/4mkTFC9TcJGodN5Z2yYDPXW8uMtEjMQSKgemWbqKlfZS1DWcpg
7iqsvYKg9GIzBLbilG6MvZwsMeRxFNdpoisKB0bvx5sjFEsk49VL+cUSBU5l
pipddJoOSdGiEJyrDBlSbqXqPKWWkFBiJqucTI4ajWZdJYsLGTI4nnMNy77M
VhRzNCi2GqkPs4BHlQWIIg9WYEOSpVcYqlyJDUtT5dPVMIYWSVMWMxTFDHkR
TXhDYUDqbEibF+1yE7wBmsPDUBsJYlWJ2koWKAp1NpzBQZAb4CozSqzJ11jR
cj1KbSJqwd+zuoSnKAK6w9OV0CVFCOIVGPIRJPoaHH35BvJzKGYuX08m8wsJ
zFwaHygXjMIvIfMQWGYBlpWPZuRiGPkwPHjkXwKxwNGLkIQCPB2JpxUVY65l
hvzj4YiSgiJEphB0kQLcAHJQCLsOroVOFl2Hv0F45DLq8zdwV3B8OFOHYhuL
So0FSj9eH6OB36PAhabq8kutmd8sVU8ka/FkLRaoAN2EpVuxBB2cbERKfCRF
mCKPEAD/DfU8a6PI0SrRVzFV5XQAf0WUqq8B/KeIgzhDLRtc2xr5gP+2Bran
WeSqkzljEo2NqrWQrW6Gy8l2GRgA/gYpxa3n+83SoFnmULP1IpJDXeo3SgIm
uVcvcmn4ZhndqGE5TQogB1Ef44ku/l8brv2BeeX3XNT/IuT9nvbIz21/+cEu
/uXyhz+mPPrPYthvlZivl4v/7t70O2eJvZ7QcLm3rixW09x58+zOdrxroj44
VuNringa6msrGhvuPn3341/84Kmn7gwO9PV0A+ff3z8w0tXdC/n/gf5RiP/D
IxPA/I/Hp4H/B/z/9JD3C4xD5h+a0vxf1X8u5hh82jCTTQQyxZPFTP/nxk4a
8v9Q/Wd39zhr+D8zAiK7Hewzq7Rru6nMroF1kAJsbwLJ2Fh77vGjT374yltf
++J5OvnUYycfvvP6T99947GDrRSA/85Opuf/4AiY//2jTxENOAwCWlZ+cGU5
qwLgjUCiAaUA2e+Y7Qu9iMzw0swM6osuVuhzgqeDVwOvDFAPJAA6CAwK6Fxg
cD9Qh6OT47Ob5wcHqeOj9G76eC11sLk2+9r9jU++88VfvvMS+ORfeP6Jo6P0
0nziMLXe3dacf/XzGil3ZXb85uH2u2997V9+95vn7t9enUvMz/TPTfcszQ/M
TXctzPYsLwxOjLUP9TesxHsPV8a2Z3s2Z/t3V6amhto2E23fe+nkt9++//Gr
G2/eG3luN362PptOLizNDy3MDEM7xbYWJpYumv/XZseg8aGA/Gep9eTS5PbK
ZGpjdndtGtyCZ+2vTK/MDG4uj946XF8Y7Umvzuyvjnc0eUNhblunfmTKNb0T
Gt/1di9rF46DiXXr2LojsedKHLpGMhLgAsCfAJ4f+P+T4Myt6EUuEIrvB2dO
YtOH0ZXbddt3m9dvNiyl6zaOW3duD4DYuzu6etoztV87l67duN2ycat+5iCS
SQRuNsZT0cXzqpmD8NJp5eJJJjVYv1W7eFwOBAI8vmPW0TXv6p3398+Xd8TD
Bh+7rFEdqJOUNcuj7Qp/A99Vywq3i9umHaNbsWCXxlon0sbYjga52Edxt6pV
EbbISyao8uVBavmgubxfF2gT+5pKq/vkFZ1iew22vFdQ1a+wVZe666WGCEcT
ZIfaDKF2lSZEjbSrqvp00U55VZ8KpAC6INpWQarrV3kBQBxwhQVW1sBxVZCd
5QR/DSHSQq/uFfnqORJridCE0nqJQCNKZXl41pUS6qMiI0rrQ1vKsOFGvq+C
r9ASzA62w8/jqBAMLULgJFmrJM4KqdZDsZSxVQ4qsP2FxM8h6ZeoYhhHiwES
IDLh8JyrhYSHQHZAkxRp/SxtiCGwl6iDFIUbT5FcZanyuLpiFPthLO8qS4vC
Cq9jBNcYyny5A+uIsPRunDNEsbpIGhPW4KCINGi6IE+oLpFpMeCPSgvIAnJE
ugKpsUjnxLsipToniSnKlegwNOE1jrogc1KACkNkFaMIuYiSqxhKHpqeh+cV
sYD/p12HxviDn5LZcDwDhqbk4dkwAH8cvRBFysFS8wnMIgy1CEUswlMROCoM
+H8ENq+EUITGFSPRhSgMrBiZU4y4gUDlFsGvw5HXr5EfxkpgTC2+kHLtEdhD
ReQbSPb1YvYjOMl1pr5I4ECpywg8WzFNDwPqiRYV0LSZnh+GlUBz4Nk+siBI
5zhxfBdB7CErI1QAf0kIKwmTtZVsS6NAGSEb67iGWo6ummlt4lsaeeDCUMsE
D7M18AxVVHMtw1xV6qpTWMNisQ6vNBOdYY7FQTOpSR49x2sUeo1Sm4Jrl3GC
xsyE54hFFTarQcRsus4Kf0vYFXOrG2vLYi5j1Fp65GN8YMP/ivjoj8mP/A9M
zq+xn3vf9MjbW5gXwn/5A8KVtzgFf+0Uv9Rgf6PP/clC7UcrHXNltpgnxBfL
6jyO1bboXL13MGZrinqra2sau3te/frrH374vePjXcD/vt6h3r7hoeHxvv7B
gcGxwYF4hvzA/A9n4P+p85+an/rTJB8I45D5B2CEKiTQUmm2Wx4KcA11B/3/
8B+Y/9TRzVT6fG/vJNvz8+eB/xcu/TO9oFDzJ7gT8H9rd391Lbm2BgB/uLm+
8eTtg09++Nr733/17tn+vVvHP/req3/7/jdfvHNytL2TSqUg+GfM/9EpZP4B
oqGTGaFqTFYCsioADRqCNoJlJSB7MP2FLuxAhxckd4+yA+seXFwAcfNPJ8JD
hwJD/D/KHBZw8/j4GHzUr71w6+sv3n79pbsv3Et+9Zn177549NcvH/34zcd+
+dbz//Lha7//my/99p3n/+X91/7pRy/+5ntP/a9Pvv6HH7/yh49e/+St5z75
3gvvvX7vJ2+kf/zV9Huv7HzwWuonXz/62Tdv/eybd/7m1bMPv3787pe3P3g5
9fffe/qX3336G09tvXpz+QdfOP74S1/+yWtf+uDV5964m763OHI+27s90bES
796cHwcB7D0w+Wtzo4uTA+B2fT5z1hjQgvTW4tn+GsB+cjlxM70BVGB9avgk
tbCxNLKxMLo2OZzobtldGN3fjM+PNYx0+/u6rF1DhtYJbf+ydekgvLobmtry
TKXck4eA/PaRA9f4YTBxXJZI+8fTvsmTUCYOQ9PH4al0eOYounxWlbxZv35c
u5yqSZ60b593b9/qT97uXzhsnd6rWz5q3bzZuXLSOJ0qn06XZ8YNHUWWzsrj
O56p/QBQAaALs/uRiWRwPl0xtVc5suab2g2vHNct7NdvnnSMLASG573ja5Hp
7aqWUZOjkhlpk1f0qKKd0vIeibdZoI9QaeocoQOtDtEddUJng9BSy4v2Gy/g
bwA5grdJFGgWRjokwM9bYkSBKc8cI4fbpa5ari5MM5Wzot1abWaPGNXfJg62
C0JtvEAzw9tArujmVPVJgo2lBj9K60YYvKjKDlFbXB9qZkebWcE6cqSFofXD
6bJLFNEVriqfq8glc/MJwPqyCnmaEqMf7a/ER2oZNg+eL4Mb7TSDjSzSwi1R
jqaMQZLdIAivGUN4Xy2fJrlWSHoI+HyysEDv40ZaLYYwX+WhSyw4mYUk1JG5
KjzIC+iyQpAIcDRIsREHLLpYj2Er4NjS63QpolSLZOsRRayHSPLLwDBLHEiZ
FZ1p5lEjS+VFYiO+VIngq9A8OUqoKFHqiDoHxeihAuabvBSLn6a24bmKArEW
pbaTyMLLbHUeQ1mI4xag6TASE4Ej5wGkZyw9t4AuReEYORjidQy5oIQEA3kB
CncNSbgOx18DAR5GZhRRWfASYh4KX4AmFgPbj8TnZUQEl4vAFqBxMCQ6H4W9
mP+DvI5C5yBR19GYXJwMkUt7hKXBkoSIYkoOgYfEC+FYQS5eVlxqwXJsSKa5
QOLB8qwYmqqELMMQZQWZwW42DNlRQnIiuSECQL2yjKoOsxVhKoC/sY6lqWbr
qzkg5GVk4PkvmM82N3AB/7VVNE0l1dxQmun8aSz1dUisNVx9mFvZ4Sqr1Vn9
XG+FMBgTu62lPjOAv9ihEZilnJBRWeM2hvSKSju4VQd1qoBWWeu2VjvN3eXe
2kp/zGHsDhmPHdyvCQp+Rnr4x+zP/yP2xifYz3+gv/TBCedbXZhXCx96XoC8
41c95jTeluG/q8H8osn0rcVxi0JjNOoH/OaD7sqttnCXT9MQdtc1NY4vLL33
0Qcf/Oi7GxsLfcDydw/09A4NDo0B/g8OjQ8PJTKV/5HE2GjG+Wds//TC9Ezm
DPcH2/shew/xPxvZAk5WER5sCoK6QzOpwUJm/jNU/3nQ/2fL+1AKkK2lZOXg
MyWaDP/30qurOytrBxtbxxtrm4+fpX7xg9d//sGbj985euzW0bvfffnvPnrr
tefunaZ20+l0puf/gv8Hx5/uJgDwh1oxszMZPlMLgvgPlYCy/M9+x6z/h84v
+4xsQa8PpQBQIQjE/9X/f3L7/Pbj+1srt1f7v3LQ98EX53/wRPdPn2p+7ynD
J68Gfv7F6Pe23e9sR394s+7t05r3ztvePW/85m7s2+nab6UbX9+tfSPV8NJW
9Rv7ra8kG17dqX8t1fjGQfPX0p1fT3d/7aDvq6mBN447fvj4+If3x390Z+Bv
nh75+V/N/OzLcz9+dubjF5u/f6/unSfaP3yh993Hm9651/3V06GXj6dAjpBc
nNhaiK9MDQGrDzi/sTA+M9YN4L+9PAVuge2/fzN1sreytzl7nFo53JhJbU4u
znTPT/SsTAweLE7tLcbn4q0HC/Hj1fH5saqJRLC6S9I8rl7ci2zsRKc23VO7
rvi+fThlHTpwAv7HD4PjKQ8g//RxaOakbGTHPX1YltjzLZxE127VbqSrt08a
k0dN28dtW8cdW+e9c6mm5ZOOVSAHd/q2bvWsHLcsHzfMn1TPnpbP3iyf2HWP
bjl7l4zxbd/iSWXXjGlyJzK+HphNVc3vl09seddPqlbTVSsHlcv7scVUCGQW
k1vRsdXg6HJkYqN2dq9xdq92aMXjqCG76hjaINYQpTWM2aoHjc56jr9VEOxS
R/r0vlaZBfz392JN5QxTBa2sDcBcEWlVOSrZrtpSWyXNXc/0NJX6WrgiL0od
JdSO6SI9Qn8LLdBCbhzl98wpawZkkTauI0Z0Rok1nZLeKUt1r8TbQPVWkh3R
EnNZscRymau+KtIXWQNMCu9R4Hszp5zT4aUyhMmPLqshVjew6hpEeicdwN9k
IzV2GkONUqY6j6a4ofaRMuISxFDEj2p9VL2fTeDfIPByJVZKqRFNVRbgBVeB
jgD445n5SOpVXOl1Mr8IX5rLlsKFKgxDUMQUIUm8YkJpEYF/nSbPBV+zfEAl
9SEFNrjIggZ6gePcYCtRXB2aqShmSItJnBw89apUSdQ5GRo7zehlaRxkrZNC
FVznKDIrv0ItnKcrlLvRVFlOCSsHzSjCM4qRhKtkdhFViESzc/HcAlIpjMkt
IdNRcEw+HHUJS8gh0IvRpHygCCAo9CIStbAQdbkYnQMMfwHieiHqKrg/M+oB
nVeIvFZQfBmGuFpQfKmw6BIcdQWOuIwquQanI7ACOE5aiBEXFjDzkFwUiodE
g3TDSBK5qZmSThTDcuQTNTlERTFFhS+1Zma7gUSP68IKAgRNLUdTw3N0a8x1
PFWUJgkQ+G60PEJRldOhgj/XVwL4r65gOFsk4DHaGFNfkdELkBpoYmR3Ex8Y
CU+dMNAkc9ZKjRFBpE7V3GmLlSs8NoFTK/QblFVei0vDBymAWyWI2TQVDt1F
GCIWDcgCWjyOprC/wm2a8GiTpcVfIj/yHvPSjxkP/4IC+xH++rcll54ZLniy
8ZE3CQ+9UPzwMTlnn3blVTL8O9hLH/jEz/f5GsKSrrrgSKV1ezC02hlqD1ia
KsvqW+r27xy9//H7b3/3zfm5mbGxkd7+vq6+/u7+zIYvkAgMDMTHxqegZd/4
xZwHqOc/Mb0A0Rsq8gAYQm050PSDi2mcKUgCsinAZ+YCZbcJrG4BHJ8B+gHz
n0wdA/6DFOCiC/T/2vObOfDlYpxydq4mRFSoeA4dBHCQPklBm6d20xsbWwfJ
5Xe+8aWP33n1hWduHaR3vv76l/7pp99/+69AWrB7dHgOvSDkyaEWnewp7dnK
PLQcDOkLJASfqQJBVS9oqfpiYTpT+QHmHwR0BEB2WSHj8P+0CnzviWfB64O4
9/jTd+89dXh0fvvO/dNbT58c7x+s9T2+XvfiYtn3tyte6xP/w2Hkf348+Md/
HvvjT5v+n8fNb/VTXhjhPD8rfmmM83pc/PKU/LmE5skF/7PJzlfOlx5bG/ni
8dLLZysv7s/cXx95bmf62e2p2wtDp9O9L59u7M22P7PW9IUJ0xvTyldnxF+O
c99I8F/uI786Sno/yf+bJPXXJ6W/PZf/YFP96qLjzaOuOzuzG4nevdXpzBTo
ydHlmfjSxOje0szqzPjK9NjS5Ehyafp8f+tWeju9tby3Nr88PbS5GD/aWTrb
W95aGNtZHD3anF6f7j9YmJkbao/3RbtaDU2NonjCubJRnpj3T6wE++dtU+nQ
CID/qbt/z9qftE0dlU3vh0dTgYljbyJtzbSG3qybOYltpa17p+XbxzVbJy3r
p21rZ82rZw2rx037d4Z2zvt2bg1vng/N77WspRtW0lXT+2VTJ7GhFVdiOwRu
B5edIxveeLJsbDM4sR2eSpVN7gSHV51DK47ZPZAFVIGnLGXOpimb3ovM71eO
r5X1JBwzGxUgRmd9FV3Ktri9fcLRMGJqGrM0J+xd876+5RDQgnCnUhuh2EDW
H6Yo3DixBaVxE4MNokiLzFnBDjVLvHVcWyXDECZZqhhKDyHWparpVwQaqZF2
eqyTXdnNqxtSRNvE3hqOJURyRIjRptLKTo6/geGspMrNhaYARu4o1HmLI7W0
xjZufTuXq3gITXmIKblMlTyicGJ1foreQwxWMRo6hdEasUiZS+U8ZHajdS4U
Q/Go2ovxNwncDRRzOVHpxogtaKERB0w+nnMDeHWiMJ8gvIFiP1xSegnPK8Ry
YCITU2RiEBmXqNw8oAjAhyPo15CM60QBAsOG00TFOP7ngh2llgYSWvKoyEYh
8guw7Ctk/iNyMw7LykVSC/AsFI5eSOEUglcgsK4wRfnA8It0CIkBxZAWErg5
pQqs2UdxhjkKE6FUAidzCukCJJUHB8FXkmh8JJkDtAYOJ924WNvNR1GAOuRA
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
8Jgv8L80dw6y/8z/4hab4hbIz4dUgCv0cZ4/e//J4+JHAG8ykmszB0Nyu50o
Fle2YpzhzObhtURtZPA4TfBmHJ6MQJDodKZIqgJef9m9yju337715VvOkHdx
dUWoszdhiW+XV95+WOGJpoaXNjvnliePT/7sl//1pz//05XN1bb2Qnd3d19P
/xu3vlxxv/zhg7L6hpY7D8rvl93Dohrbc6G2dNRutoQjvmx7WmfVKtQShVws
4nEFPL5Gq3c4vYtLK0PDffMzo1tr04D/gPAA9QD+V4cb71zsXx6sgx9BIAC1
A2yujW+tjO2sTQE72po/3VneWZrcmBtdn+5/53Rze35wZaJrZaxzb2F0c3pg
pjs31BVaHm/fne1bGytM94emR31z8765Vc/MrnH93Dl9YJs99A8P8r9+aPzj
C+O3tqWfziq+MiT83qL2p/vm727Lf39P9ftnvm9e5/b2wqvbsbmt7Pbl6Npp
z+ppfmzTu/wos/Youvk4cfhuYf1RfPbYt3QRHt91zJ0EZ09DfWvm3lXL1H5w
9iAyuR2a2AoC5vcu2nsXncPrwb4lT2pY273oHt0JA+aPbUXGt6NdC67R7ejI
TrRrye3sFKpjZHOKYssyzWl2dFCXn7LF+uXpYXnvnCk9rkkNK/MTBiAitgTD
meSYQtR0v759TNU2IumelI0uajpGihKgdbXITA1MbY3YCpPZm/VBuK9A1Iea
9CGUxAGjq+7hRG810r/URLndiP2SwYH3Jul0xV0CrQZJuC1Q1rjjVI0DgWO/
zVLWMVV1Wjc90akL5SVmP7F9VJ8dVnnz7GAH31Vgts0YMxN6e46lC+FtabIx
hna1ESTOOqmnwpCo8/egXQW00F4pdTXJ3M0CU4PA2EKS1BBltWwDTBegKVwU
kZEksaIBnIuriiUA/jCevkliRYDfS1fWC81ooqweL6klKxrxwnLwdBCJMBTV
XG2D0oEl88upwkqhpoUqqODI6xmiBgqvmiWpF+ta6eJqiqCCKqwW6aAFAZUi
C4athqOYFVw1giqsxTLvU8StxWnbqoZW7l0crxLHLKeL64HutFLu4DgVRH4N
jlONpD9sId5vJjxowN5tIrzdTLyDopZj6JVIcgUM/xCOr8DRGlUxqi7BJEob
cLwWOKW5HPbwIeJeDf5+C7cWp2gkaOt5bqwmyYaLyusYXxJ7saokQRrGKmIE
SRQn8KEA3pVhsipEMmTp4H7g/L8yuCqOt2XpjhRNG8Orwhh5AK4MwvURtCWK
t4eJjiDJGqfGOsWBJMsXo8cyvK5edapNEM9y24d1oTauMYTxpOixrDCblLUF
5N1+bdqhbPMC4CvzHm17wNQTdec9tpzLGfMpIx5lMqAH/zrg1kw5daNalb0Z
ZnpQ6agAVuFtQoTwvAhT46WIUkLlbDJ+2OG9Gkxc9IWfjpiezfrW+lOFsCOf
iba1tXmDkd6hvu9856t/+5ufvXhyPdo/2dc73N83Ak37KVb+jHw+8GcESMD0
AjTk7fWG39LcS4j/pV2Nrxd/vu7/Q/kfcIViB0gFSv4/1PkF4A+pALCrGwBJ
AN73wRValQ51YwGKQrmU0rnt79L1Hz17+cGzl+89ef7y+uZZMRa4vHr86Oyf
/uyb//LL73768ZObZ4//8Pvf+H9/+0c/+fTlZdHVfXx+c3NyBX7vFVQLBH7X
s3c/hoazlZpzXztf/rz+5/Wlk6+HOaUuAKhsFfpCSqcYpYaF84sb8N7Ozx6D
z6j3+tgmFdssxUpIFTX1gURqdn1NotPS2DwckUZjC5sxZAyNylcquHIZmcsB
V65ckenq75+YF2ud9TjirQdv1yKausZG8jMzufmlkZ2DD77y8bdevDvotGZF
7H69YjgdRRAxVShUNaKxFl5f11iFRsEEfNbs/NT47HQ4lxqYHg2lEwwe7607
ZRXVDc2taCyB2tk3lMp35Att6URwdrJvd2vxaH9ta212brRneX5scXZkZ+Pz
c4GDneXN1ZnVxYmd1dnDraWDzcWT3WUgFvubs5vL41MjHZsLg6szvUdrE/vL
o8CO18cPlofXp7ome2KTPfHF4Q5g6zNdO+td66vJ5dXg3Jp1fts2d+haPvaO
TklXhwWf7dm/s6T42jj/66PCr43yfrCm+nSB/40N6beP7b/8pO+7z7s+fJLa
2w2sbnYsHvRPnmdG9hzzO/7VyySIBbaus5uPErMH4ZmD1PJVfuzQOb7mGll1
ds7oOxdN/esOEALMHAZnD4PA828fN46uh/oX/JlhS+98YGA1OrQeH93KjG2n
pw4yYzsxQFFXG9+a5hhidH+/3NnFKiyo+jec8SG9NSX0FniuNpK7g9m5YA73
KRQ+QqhT5UoK3AluJCN2paneDLEwyu2dFXZOcpO9VFsUpXa2qFxIrRej9+O0
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
hcXlpT//8x//9I++szw729HWB8F/cGBssHgKMAnxv5j8n5idfDXtrcT/0tEt
5PyXBuCUJvOXjoBf7wKD6n9e539x+PPmXun89/jiMSQBkJ1dPr14BPALYP4M
SrmUxulA11L3FiQEQC8ub56eP7o+u7o5vXhydn59enp+enLwm58Umf/Nrzy+
uDr97NOP/u03f/RXP/79R1dnx+cXh6dn+8efbwEDL1hqK/iC2w+RvzQUAqpH
LeV/SuHP67VPpeXFEP9fbwS7fPryyYsPnzx5b2f3yGy22k16l0JiopGQdS29
3X3Ti4sClZItlZNZAqnGRmRKrLn04tXZ9NHO1P7W1O7m3N7uxNo6kACt0YPC
Uu7ffYhsQfUMjowsLMzNzawMDIZbYV1NddON5XuwiqOWmkk8YrM7MzM5MDg9
PLkwOTY+ODjQ3dmRT6airoCnY7BvYHo83dkhU+vevFuOxlFpLDGWxKDzJFav
3+119fa2jQ51Hh9v7+xurC8vrMxPH+2tnhysH+6uAPKDiGB/ewlcga0vTGwt
TwMJAPB/dLJ1dbJxfri6sTR2vD23szJ+sjO/szq6sTg4O9J2tjt3ebB4dTR/
tjV1tjF9tDK5Ot41M5hYHI9PDvsKWd7UjHVm3TG141w5cC9OCT/Z1H4yRns5
J74ZFR/3SVdT3Ith1cs53XUf+4NJ0U+2Zd/Zp3/7iv3Np9bzfc/GXnL3tHBx
2vH0MPzyqf/maeTsycDWVef8sW1qy7K81zO8ahlaK1rnrHpw1do3bx5bd/fN
GpP9skSfFLARSEBhytKz4BhY9w2se4a3guCandQMrLsyk6rIgBgY8PGAp+fr
ZUeG+d5urtBWTIAAJ9yUpGrCeL7t1amfH+fMsooDn9N0X4YZ72Z3TSoH5jTd
4xJ/GhvMEMIFGpCArlGFI4RVWBvo0ns0yX2BsZajq9IFUYkBtj2JbhuXBdoZ
8T5+qJPhbSPYUwiRFSE2Y1DUsibUPY4QxVcgnQkh8NLFJrjMiuFpEDIbiafF
CI1YqZXgTIvtSaHcSQ4U9I64Qu/jFsY8AN0sTY0vJ0z2atP9Rk9aYI1SXClm
sCDRuEmRbk2s1xDs0HqzMrWHYAiRxBY4S93oTsocMZE/J7eEWWITUmREUMQ1
OO5DiqSeq21VOIhsTQNw/tVeZKCD7S3QtFEqTVdF1txXhpByLw7HK0cxHlAE
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
DmFqUJPu1SQLinBcFItJQn5BxsFNmBlpMztvE2TtorRTmvdp0j5tJmAClvQa
Iy5DKmBP+KxxrwVcs35bHghBxBFzqeIuZVvEkQz6WAz23Tr4g3rYg0bk3WZi
BVFeTdbegTFoCtNmd+cHbdGfX+0fL3ZfTbqf9jtHorZ40BgKJ5LZ3ODYwI9+
8r3f/PrnV6dHw4MjAPsA/iXnf/hV2h/AH+L/9Ktpz6W+Lcj5L011/s8rur4A
fyj/A3UBlKaAlpZnQf1fUP3n+fUzIAGf28XTy8t3gIEbp2ePgJ0DP/93EC5N
bP73uc3n14Dhh6cA/ue7h1e7B5fFN7C78+1Prv/1L7/72z/97OL86PLq9G9+
/v3/8asffPYJkJVzECAcgSgI2Nn5ycXl2fX1xePHr/cUlCQA6vwq8f/1uaNQ
LVBpKCjEf+iA+HX+l6ZAn58+vbl+cX3zDOiUzm6hsulSCV/GYallqv2Do2gu
q7U7ODIFXSBX2QMMmbEwtzSxezCzd7C4v792cLixt7e+vbe4tKYzOuAo/Btf
fhuNwo8vLs9sbQ0P9bmkIm9tXXcrLPfgzZGKu9so+DgZPxHyjvd0DA939/UV
ZqdG56cnFmYmlxZnZ+enuvo79E5jvC2tMZneuPMAiaNINRaF0cFXGQJeSybi
7Ijbt+f7jzZm9tdmi6Wec2PbKzOA8+cHG4D/wOEHwAc/Prk4AAZUAOjC1fHm
8c7S2sLI3sbM6f7yu49PZsa6NpeL2+dPdhb31qb31iYXJrpXZ3qB83++NXW6
Ona6PPrO/uL7F5vn61Oni2P7M73n26OLK+39s5HJed9Ct3wtSvnOuvKjKfWc
nz5gp85G2dt5ys0Q/utL1I92pN32xoiwcTokmE/rnSJCWIPdG5COh+m9ZuHj
idxHO4GvPIo8e9Q/vRYH0C7O8Fn29i+6+hachSlTdtSUm7QFerTBduD/S9LD
8u45U++SFQA/PSEN9XNyk7LEsAAwv21KE+kTgGt8UJifVMZHxME+vrONY0qw
5F4aUd5MVsBJ8laeBWtLCxwZdmxA5Gmjyjx1MneDPoIWO2q1IbgxhHbECdF2
TgSEGz18WxhtC8LtQYzGgRDqmuQWBF/fgOW/wTdVa/1opRvuK7AmdwI9c9bZ
/VRuxAwwKwJc8mDJ0loY9a7CRjaH2Do3XuNCKl2tr3I4In2ADB6m9zMkFjxX
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
Q654qJjwT8cC2Vgg7vfEIg4gAamQP+XzFeK+plzIG43juBYUL9hAc4HopZZp
h4mjVE3O6skN93V9Ome9hvyL14nV78mI/9Zo+FZXvOBwh1KZrp72F1/63Ps/
+e6TTz7S29vb1zvc3f0H+P9J/l+eXih5/qWcP7gv7/MqrX0pD+ov79I9y8xy
qUwpH15qmC3ljkoqsLC89SetdFhcDgFKWabSa521/zwLBq8CGLtzAvi/sbm3
vrGzvrG1sbW5tL799suf+ee/fP2rr37u5smNTx8fffjtl3/x4y994cmTk/2d
g4PTRZBXrx8eXSvWmv7HcKE/zv+UB5B+5N19HP/Lyljmf6mLuVTFWiI/uAK7
cfNhwH/weHN7hy8SKPr/YoVE5wD856ptXUubQ3sHQ9s7V9YPJjev9m1uT+wu
bO1Pvzga/SCh/ZWR+p7owk/HiL97w/nLNuRv4FX/Tqt5W424Rvrk25iL/46B
/Qb/wF81Qn//lu3r8fOvDrsuN+WaO3pyXR1NHS1ABVLdrSa3A/C/faDX6HYJ
tVqR1ig3ulhyQziSAPxfnBrdWr6ysngZ8H99ZXZuagTAH3j+gPzLc5cXZy4B
FQA3gP8gNAAGBGJ9eWp+enR5fnxnY3Z7febqzvLVvbVrh9uHe+uP3QXvdvfJ
R44uDRSa0779hZ7XHl348LXtH39h7K0bqef3kuvtRp+Jk0lotw+GF3bar2xm
Zw/S0yexjhVj/16+czM2tJXwh8hZB/qRSefjk7oX1gzPrhlf3HLvdEl9vPMq
5D2dZtxai3yjR7vULM1a2RwSkoC80Bik3bwse3lD/fau7pl9fXeMLsRccDCQ
vR72pTxvqZ356ITk2UcKl8cVTb3i9IAi0isJ9ooD3RJXm9jbKA51KD1NYlOC
7moUWtJcc4qnClLVEa46LOZaWFQNiWMkEUXVphAb+K7BRqk/w3PGiM0DChAC
RJtYjhjRGMIVRrSmCEFiazBHqQo3VmBCcHQwiqyaJKhhSJEMERzHvGAPc7M9
Rq2PwtXDNU6p0acS6jgA7yQ+WuOW0GQYYMDZFhioWC4EyagjAI+diz6VAASB
X0/kQ9HMejIfzZaQcXQYMAIdjsBXUdhINKm2RH44uYbAQcBI1WwZlS0nclUE
vgbwH8qQIygiBFAQvpLIkaE19tPmLAMk0aGWWhFU6XmGoo6hqqfKawRWDFVV
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
CIAKAIEApkiSFCmsMoPSZNDyGBqEA5YWkTbH1KapgP/2VqathWEt0KwFeqBP
5O5ku1qo7gIx2EiPZVnxKCfqZ0d8BrdV6TQpfC5jMuaNx71Ot8Hu0vvD1kjc
Fo5ZQ2FryO8KeNwhjyfocfhdNhAFOKwGvU7p9zmLgYDHAUKAZCwI/P9cNplN
hRuTwZZCxuOPgDgdw9ahGNJ6PANFE4lVlmQ0sjSau7WY+WJv6hWT6k2p4HUB
7bMs7DYNO8xhTXY2ffft17739bc252e7Wlr6+gd7Bkf6R8bHJqcA+Yue/9jl
Mv9LEvBx/AcQBsQDPCx1MF2/9ch/dGD9Z3PW2UENpeL8s/w/W/AJgA/gX7qW
EkEfGTFUHjH9keHS/zl66L9if2N9t2Rz6yuP3N799Xuv/Oa91579zK3b10++
8MQjf/fTb334rec+e2f/YGd7Z/cQ8P/o6OCU/zf/mP8lCTg7dO5s3/HZ8+5y
vWvp2Lo8CKjk/wMrpaRKB83FA+XiwpqbV28Wb6ZGhzq62lt6u9RqpUUo9osk
KatFKxLE3P5oMuHJpM3xhBb8p/EH2xPp6XjKxhXThQIyjR10+6cGOo57Mo9E
dM+pWS+LaF/V8L4kIT8vY9xVSZaMupmuVm8ioNYYPEr9TGtLR1PEkfD5G9uT
zT2NXZ3ZzvZcR3tzT3csn5No9GqTS2328ZVWidoM3IPb1w+3lq9sr88d7q2f
HG4Bz39jZRrAv7jwa212f2d1a3NleWVuc2t1YW5+eX5ubmpyZXkehAMTQ039
eevWWOT1zwy+//L8Dz83+t5Tg8+vha4P6a9kuN0+SlvSlgsbN5dGN1YuA1nZ
3lrd2V7f39va215ZmhtbmRveWx9fnm2bu5LZ2+6em0mOTnU0d6VCUY9SreJy
hDyuVC7TCfhyFIEAaahsqLsXAa1EwhFYLJ5BQ8pE0JEway7N2uuQHHcbJiPk
0RhsKofrtEIazWgTq5bW8BdWETGh5bRZMU8sKV86VI1lmDpelU6Ii2hxkz7s
nR7BFze97z47+LXXpm/cyDf3KhN9BluTUpeVuNt1toLM2qIw5KV8L12XUcgi
ArGfqQixjWmJs0VuL4hcTQJtpOgq68IokasacFXuxcm8eKqmlm1CgBuxHaYN
ICwxVKwDM7SiGlhVpS+RmxYYzYvc/JQ4Niz2plmuOMkXx1n8UIH5otyHsKSp
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
Y+1zy6s9A8OR1pbDo92/+uU33/zgeyep3YG+wZ7ewe7+gY6ebvDV3oHRodGp
/qFxMBgYnsis+QL4Z/f/ZKzbHpzWBgNwzeT/mSWATDzobJyZFMrAeXPncGfv
ZCuZFoLsOYKMCmTGmXIA3MmsL2Rn/jM/LttCK7vKnG2/mFllyLhrZgaZY2K/
96ZI7u0f7nz2wXP/9ZsPvn7nxeP9JPgcPr3//G9/+v4X95892FoEErC1tZPu
Armd3E1XAv/i85898Js9Apw18M88zBwEy77kwV1AD578+lfj7f3N3YOtvcPU
/snZ6d3947O9/aPk+vZ0T/upVvMxl/v3ZvX/jGj/MS79b53q/9Vi/lpletkV
To5O9I92j41GVkZCfRGHWMZnyVVCk0vmaVf4+tTePr2/S+dvVXl8HXPW5VPv
zuPekSWT1W8TqwN8dZCnt/NMToHFrwl1B4aW2iZXNb52T7xXbXP1jE61tSZC
4Yg9GDL7WppYCq7ASBNoSHSB2mybv7l4c20+uXVzdWlub215c2Fqc2n1YG3j
5vhIb9jT6tRtTLZ/8vzKrz/d+PtPpn70bOSz2/YXl0TnfcxxKz6qJGxMtN7b
Wk4tjh+tLqyvLKzeWrm5snBzdqjdpe5LuDYXepLz7QcLLclh48mk6albnvNJ
3dMr5rePok/fcjyzbD4b4hx3N7y8Ir0z1vT4AG/cDO0y4Y0CIp2EV8nkDQ24
svLvQpG51jB/cMMxfxGcOnCMrJtH1kxzKW/XIlA9cT237pHCb1/L/25JaUFd
LbQaAmU3EqT06pVIw70hzoSLxiQWNTVUaflNNoNoarS1s1X7xH7Pk5v+pzd9
LXokHfuIjI+am/a3BrkGZslWpOm1JfmXz8R/8Mb0vbOu7iFJZFwRX7EGZlSe
EaF/hOMfZtji1OgoP9DLdLTWa9xIoamWoSwnCQvQvOuNmlLAao4F0myqVngI
TFUdiVvB1qAblRCpF6EMwxmWIoa5rNlezbRUNrsrON4K+wg5ME0PzzaFJ2jm
NpBa56M4j/BscJEXLw+ReC4o11ZNUxeztNUEThFDUWsOMdztfFOwKdyviAyr
AeRbJ/SubpG1lav1NpmC7EBCkRg0W/0cb5vAHeXoPRRnjGMI0nR+qqWVrfGn
jZpldrzUBWebSoTOKra5Ei8tompqYIxrdBmkgVeMpV8H+kJglSKIuWh8Phyd
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
CEbmRRlC9RofUeiAgz8KWVNEN9TIPPUmX5MzJHX7tA5r+niXRsE3aiVCTpNa
BtJ7KSA/j9Uo4jKMGlmmFvA5zUGPI73hx+v0u2wOs8GsUwMJkPKYKjHXqBLZ
DYqAXZfw2/pCrv6ga7LVP98ZnEk45+Lmm5221Q7nXMwx3e7xaFVhl3doaArw
vy3RNTDY8/O//Po//eYXr7/y/PDgUN9lt/f+4TFQAvQOjmT4DzL/gUvzh4wz
D4hM8p+xYs7yP7PkmnV+yximZRd/s2nwg3P1mfO/l7uG0t7+APgz87cA8MF4
anYlowLTczcnZ5YzEnBZGvzb+38ePPabcZ/I2PVk3klGArLZeHq6JnUIKoO3
X33yH7756OcfvfroncPjk/23X37iP//0vZ99/toTZ7uA/7u7+5f+P0epg6M/
xf8M57PucH90KCA775Q97/bgCsWD463D/S1Af/DeDk63j083DlKPHxzfHpr+
2OL6R6/xdxHB/9cu+sew+r/7dP+rXf9PCcV/S2h+4zC8abCsxsLD893TSwOJ
WMATdNtbOgyBDqW/Q+nrUroSclOL3BxUO4JSjUln9eqsfpXRqbE5lHaH3OHX
+jukphBb5RIYw0JLRBfodLX1+NsTHYMD6xsru6mNe/dO7h2fuFwhqkBJ4Sia
2QomW85g8IeHh+fnprZWV7aW5+ZHuztDprvJ3p/f3/yr10Z+9WLi+2fG9zZ5
z01S9wJ1N/20ZL/29kZPam0ktT67f3MmdXPqfHshudx9utZzdy2+O26ZDDPv
LtjeO4l8cTf6+e3Ixyf+d5KmNzfUb24qXrklfHdf9e6+4u19+ZubkleXVY8t
OJ49nHn+zvb2bHy5x5jqFY67SGNellOCcZvoE1Ou4XlT57Qkvizr3VL3JbUA
+POn/rFdx0jK2p/SDR9YhlP2/m3TWMoxse+aP2odW4vgmFWFxVfpyJpGyMM8
Sq6UBXXKGxJ2UcyubGzEMdlkFosMSnWTjHJ3s+tk1prsF79x6tyZ1DOogC2w
6Kh9+2RgbkgbUULW/IhXlqV/fs/z1atdz96OjozL+ycUC5u2jhkRiPgkz9dN
9XRS1F6Ewo1gqIotPmKgvUlhqtG50WoHnq/F1VFKa0kQKK0Y3lSMZhbV84uF
lhpXZ0N8ShAeYupj8EbdFU07snVRZBug6uP1ihaczI9yDNG0cYLAV6dqw3Jc
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
zkPQcoAIZ8oL6PIchjofL7kJjho/VWRCkgQ38UCu45+hlOezZXAg5iH+i20I
nr4QX34dy3uJJMyqsBaawniBIYujvm4IoU1hApb3F1juTwmSm8SKm1TFLbau
AMl/Lo/2E7TwGl1dUKbLZSsz0Mw/Q9KeIbFzWOUoBq+kGPlsHuL5HPhzMGI2
ilZUQsiB47IQ2Ew4+np2cUYJJhdBzAMxS37pSwWlN4qR2SWovIKSjCL4zVJ0
ThE8sxB2HVhu4QslyBs8H5LnQQH+p3u4BUkyP7oigFREMPIoRhZBgxBAXUlU
xQngoTKOSS/41mCsDUSg9pWREk28VF+J0kTQ2ijG05wu9XS10rwd7FCHINwo
DsYl/oDIbma6rbyoV1Yb1NdHbRGv2W5Re7xWqwVA3hhymmJOQ8iqCVj1Ua8r
rfwtRstT/Q9iBEB7jwP8Irq8Pmcw4HM57eCP2+10OGwWs87tMMbDrtqotzEe
aKuNdtbFgfKv9DuiPltlxN1fFx1sdC72u+baLaM19hh4O5t9YHRiYnl9aHoi
dZT441//+re/+n5jbbO2saW2tb0JiMDWrua27rbOPkj8p5v/DIz296VrQYdH
JgH5gQ1PzI1Mzk/OrSyt7wAvMDWfzts8HfuehGparhogQDr8alRuYv/kT7Z3
DF4JXr+8tgPt54L0P3AEQOcD2v+4xRwg/8T0ArTdDOrqA24O2P5jJwLV//x4
81dajf+79wFvfXJ+F1h6ifb4DMB//+g0kTxYSqUO9w52Euu/+PrJv3z/yW8/
fevywenJydlnb9//b7/94PffvHZ5vLW0tLK+tn2wf3x4cLa8d7GRTAFvs53c
Sh6dHh6c3ksm303tvLa7fniwt7N/fnb4emrv3tbpxdbZ4eHB/tbR/tbB5UHy
5NHk0Pf1od9PD/5sbyN1eLC9mdhbTw80X0skVtYWj3YWZoY67DYLi45zON2N
Te0Rk6HPyL5by/+sX/jDoua/n4W/WfY/mvc/PqiOuyksGlZYVpHOFBn1b73z
9ne//NVHn33+5KP3Hr/7s7ffe/XDT17/+JvPv/jma/CdD4JorrllcXJstK1+
obN5b6xprs3Z7CvriGkCZpXX6TBY9baQxR4xp4dPOO1uv8/utP2pR5DZBD6f
wMvI7EZKhaJMaS8XyGp9xsdHo1+dxj49snx5Yfjq3PjmmurNFePdceEnKcvH
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
s8hTy9P6CfYqToUNydXkSx1YlZdUboaxVVnmCDHUIHJGyzw16ZEB+iDBWUdV
+5ASS4HKjaiwwYCnEDtQQgdSbIFRpS+qAyiBqQB4Eyw7k1qWR+JkEbmZBO6L
WP4zHN1NiaMIvB7DvUbgZTOE2UxhAUcMZwkRxU87+RCZRXDgCNDZMMwtLK0w
B/l8HvY5JCMLYJ8qwAL+o+n5ZE46C4Qk5Rdj0r2DilE3QbCAoOQRucgs+EvX
8p4tRKU3FCCxOVx3abkXJfbhKvx4RQCvCOPlYeAC0vAX+eFiP6IiiJKG0ED/
Q/w31uMsDXjgAoD4N9XiAP9N1URjFclQSTRVky11NHsDw1XPAfFUpFYer9UE
vCqbUWDXi516qUuvdJnT9Zwmo8ZiNQAN73UabHppyGnwOwwOK5DoZuACdCo5
1NsfuAC9WmHQq4EYA3GB02ED5vW6Q0Eg38yA/9UxbyX4DY0+TfvHAkD8g4Ai
HnDUVwcHO2KTnb7Vfudaj2Os1ubVy6prYl1Azk9MdQ/2f/X1xz/88IvHr7/a
3NwKNH99S0drV19rRy+AP6T/geaH+D80OA74D/T/yPgcMKD/Af9nFteB8gfw
v+I/EPNQ654f18n8h2m/u4d/ssQBgP/qxh408BFqIg0IPzQ6NTgyCdQ+NPP3
KvkDnYOLULU/lHv58eQs6MrVzqw/VeafXkIbkAH/ofx/eiH48i4w4AVAFLB7
en5+CGT87hdfvvXPv//qF1+/c/z6+c7ZyfuP7/+fP3zxP77/4OXz/WQydbyd
Xr1Y20t3Zj46OkkeHmwdHqWOTx6ur37d2fTHkPW/7SfeTK2fvHxydO/y9sWd
O5f3T0/vnZ29fJm6fZE6OjxM3bv/8qcff/Htd18+ON+7Oz8y29/UE9e/kRz6
m89v/913rzw6np7tqwafAaPFKVIYKuQaGY9RJSfe7dA9GdZfVtJHIlI7H+VS
MrQKLJmcXVCQl5NdCIfDsxH5m6cHd99+e+P8zuLhxerJ/ePX3j55/Z3LVx88
/Nmj+vp6MonAYdNwGCCUnuFic2sU2CZd6WaH6N6sbb5G1OMsG4zoBmP61S4P
+IRs9Bp3RrQH07rba/4767Wv7vYtDTXPjba9/+7rjx6/ldw5rA+F/CrG5XL1
k03FL+5Yv7tQvblKfzTHfnuh/Ptj81d7yl8c2T8+dm/3sd5c0j5upb9dSXhU
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
2Nr+ye5mcnN77WePLv7X777++28+eHTv/NXdw7/q6v5NU+W/nW3+9u37FyeH
d89uH+wfz21uz6fOlhNHW+tJ4DV299J7e49fefW9L7/9/Iuv7rz82smdh8d3
H56/8vD0lQcHt9Nvfefi8I0H5+/u7HzSM/SPI6P/PDn07mCrSkAEEc5Qa839
5c6/erR+MFEr4dI4fAkcSSouQqDQBAyBXABD5sGRhQhcCRJfBMMV5Jfm5pYS
CIxSFL6wCA6HoXOzC2AFJbAiNKwEA6yoGFFQCEMisEUFxfm5eYUwYkkJoaAA
U1JKKCpF38ovyi8oKikozM8tKi4oheUj8zKKYbmokluwkltFRVl5+TfzC7NK
Cm7CCm8V5WfnFBXm5uZlFZXkw+CFufl52XnFeUXoYjgWXooEVwrzMguy8/Nv
5RXlFoJ7FoK3y86F5ReiSuA5WUUUPA1eUppTkJ9RmHuzqDC7oKS4GF1Qikdi
yCQSBVFSDCvIIWIQXCZNUSGZGW1Obszurs7trS4D5u+szCZWxlPbEwcbS6lN
YAtpns8OA9oDvO8speGfXgtYmdnbWEiszi5M9kNRwOr00NbC+PrsyMb82Nbi
BLgyM9oNnu0bq2vuCDR1uLsHfYNTvrFlz9iaZWLTNJqw962b2hbV9bOyxgVl
9ZQEBAKtK1rA/94dQ8+Otieh79u1DOw5hlIOwH/gBboSRuAChg/TowRmzqLz
57HZ48j8ZeX8WdV0MrZ2Xj+XikzuBaZS8c5Fz9iqt2NA5/ExmaxsODIDhsgn
k8k8ZhmLzaUyOWQ6C1GK4VPJ1VbxG4mm+3Pm1eaK5WbJ4ahjLC6xcIv4uDw0
Ih+GQxaVFKMwyDIBu1xINNtYdg9NoYd7why7g+wJMfUOjC3GMMQYNFV+IesF
orKYq8MVUJ+jSHIERjhFmsk1FFGVeUwDXOBC4aRZJdyMUk4ugGQh8TqOn8tT
IznKUpKgAM3KJgmKUMBxlN9w1NBC7azKtvJwk1DvIes9FLWbKNSXSq1EuZ0m
tzEoogK6rFBkQTrr2N5mlqOJZK3HWhoZLF02WXi9TJnnjlIkpjyRJZ+rvyWx
FPM02UDqM8RZLFkBX4PAld3CCnJInCy2uIBadpMnL0FQniMJM82VZG0MUe5B
lrsQNHVOKfc5BPs5OOMFBOs6W4ngK2AcaQFDnMmRZypsJeAIzmnCTLYyA/gg
njULLXmxgPnS9dJniggZxKehAYx080+t3ki38MxCHC2PwCggc7MpvBwqJ5vK
ukWk3STTcxC46wWw58R+lMANB29d4cemWz3E8LIIWhyCl3uL+K58nrOgzF0E
+C8JwrU1OFsbNd35LU6wN1GBC7A04PWVpeAfwd5IdDRTgBcw1+KsNThnHdHb
RA23saIdnLphUaidF2gU+etU/rjB7taqNRV6gyoccOvUsgoRX6OsACdmncph
1ttNuqfT3h0+m9ltNkQ8znQ7OBAmGDUmnVSvkdot+ngsVBUN6TVy4ClAeB71
2aoCzkq/I+ZOi//0WkBtBPC/vdI7XOeZa/YOVDs9Vm28prarb3B0eGxmZua7
n38F+H9xftrW2tXW2tvU1AUEf7r4s637Kv+frvx5Wv8P+D86Nj0xOTc6Afi8
MDG7DOAP8T9d/LO4DjXtgdr4Q/AH5Ifsx/y/2ikGTXv80divNajyB8r5QF4A
AB8cp2aXoPofEB0sLG9ApT7Q3uF/nzXw/yR8rnbjQnVHEPxPb98/Ob8LrkAX
AfwTyYPNneTW7n7i4CK1fbCVWH/j8UV6BMAvPwG4frB38N3mxl8fJ/739175
5mcP1haWtlc3wRvPLi5tbqTffWMnubGbAG++s5d45ZWH3339y8+/+PjB/YfH
wFFcvHZ27+H5g1dOL2+fnd+5e+/i1bPbby9sPWlo+S+DPf9javyNphopHba4
tLK5ML7Y7t1sNTQ7yukUPJlVDggJR+KQKByBSMWRqFgSDYEmYHEkDAqNxhBQ
aDwSS8CR6RgKHUkkExgsNIGMwVMIZAaaQEHhyVgihUJlYtAEEoGKIdKpVC4W
RwZ3AK9HkChIHAmFxKOxCDi6FInFoPE4BA6DJhLBTeBoPApJxKDoKDgFj6GW
liIRKBgCwB5XCicQ8xCoIjQBjiXDcUQUnoTA4PEkOnBSWAIdS2CC7xncGUOk
lGLw4BuGo3kUthhNIcMJCCQBicCgYXAUGkMEz2KIVCKFCX4KGByBx+OpVCqb
zR4bat9cndlYnk2szqe2l/c30mX8idXh44355PLU9iL4tPVPDXcvTQ4tTw0D
kb84NbKztnCQWAHw312fP9xZPdpd2VhMbwFILE+tz40C+C9PDa7ODM+P9S5N
DsxNd81Mdgz01oyONKysdy1uNg3NeTsmjfWjkuoRUdWoqHZK1rKobZpX92/Z
hnacXVuGri1td0ID+N+7Y+7bsfXvWUEsAHxB95Z5MOUaOnCPHQVmz2NzJ5HF
k9j0aWT2JD62HZzbr1o4rJw7iI/vRtvmnF1zntHVeNuwXWUjO+Iyg6eCQIFx
WUQ2iyYs50nEZSqpSCVkNfq1Y/WaGjOiHPtSOTlDLigwaQlWE43JzFeZeIF6
O01AyCnKKCtjqOU8i4Hl8XAtLnq4WhGpE9Z0yIP1QmOQXmEhAKhyVQhnVQVN
XEIqz5baUZ4GtjaEstTR5CGcLEzg25AYcXYxIxPOyseVwUnl6T289IoClrSE
Jiom8QsxzFwcJ6tMU2KNkZ01JI0PZo4QLRGaJcLQ+8laL9kUZKudTLYSRSwv
YMhLmMp8U4yhixKsdelct8CeUW69pXAhFU64ygMzx7Eyd7HIWqy1w4SqLKHi
llCeJ1aV8GSFLEkRhpVB4mYDBU7gXKcLs4GSt8Q59nqm0JXHsRSR5BlowQsI
zjP5hJ+UMp4pM8CUfjK1IpOpyOKqb5UbcsvUWWJdvsJSyldka31oqTuPaXwx
h/6TIvb1fGJmEf4GnpGFZuQA/Q8n3ERT8guQ6Z7PBYhrpXjwMAuJy8Tgb2EJ
uThiHpUFJ3NhJbgMSQBd5oKVOeDSAE4dS091qQijAP95zjyuIxfwH8Bf5IeD
cEBdhTE3k7SVFG2MYG1Il3qa6rCA/5Z6lKMZ52hmQMl/ey3F3UD3NNJc9RRH
LcHTTvK1Mn3NIne10lNpsXlMMoVEXCEyaZUSIU9eUQ40v7iM47IaPRajLr3/
Swa8gNdqCjissfT+LweIC4ALsBoVIEwAXiPgdzutJptR67dbqsPeqlBa8zdV
ButCHhAFgJP2hnhHS3V7zD7e6J5udNZ7lVazvLK+tndwqLO1LbG1/ctffPvt
N58vLy20tnR2tPfX1bUBwf+f6j/TswCe1n/29gwB/Q/xHxiU9h+fWYJO0va0
RQ9wAQDsgP9XWSAo8wNJ/XRLh8V1ECykNw48fQjlf5429km3gAD8hzQ/RP6h
dLnRPMR/KDS4yv9D/eKgcqCrnmzQYK+r4p909enZn0IAIPuPz+6kPcLZHYj/
G4l0H86D47tne6eJ3c3X3rr8l7/+6m9/++mDV04uUwend08//fiN7798/OTN
156mnLa3V1fXlhYv1xOp3b3l1M78wdb2wcbdVOLTyzt/fPTBLz998vjevaOd
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
bnSz7b5y4JqN9jKjTawzSKxWrR1oe53aZtK7bFq3zQB1eNar0sn8gNtuN2kA
7YEvgDq8pXcKaJXARwCP4DAbTFqVUaOEukN7HSZoUnzAaQ57bNBosFjQDcKB
dCtRuynu1FW71G61QCcvB0JuYHqxe3RsN7nzu999A/i/sbHV2NDa1Nze0Zlu
9dbSPlDX2AZhH/Afsu6+4Z6nLUAB/0fT8x/noOYPAMijUwvpzP9VSifd/2EH
qH3AfCD7r5Q/BH+oR8TS2h5k0LRHaNTL07YP6e1dAPgDwxO9A6OA/1DlJ/Re
kAsAnuJqRjzUNQgcoZ7PVz3/f9yQDVoLvpr8Cz2bLhB9yn+g/MFxc/9yL5Ee
0PLRzx784x+/+tu/+uTTn128trv55ebq359c/Nu9R395743Drc2F9YX1zZXt
teWF042D/VQ6bNhLd3W7fbH7+evJXz159XefffbNF58CwX+6d+/s4G7iKJm8
ODg6Okkk915dmf/G6vijsPzfvKa/Deq+aDA8aFJvtJne2mp7edb75kZoKKZA
F8DJVBGJyikpxcAQWCSGiCPSyDQ2jcmj0DkkKgtNpuEZdAaPxSrj0VhcKuP/
Jus9oCS7qrtf1gcGJE3o6dyVc84555xzzp1zT+ecc+7qUN3VeXqSEEoYYRtZ
CEywSRIiCGM/E54Nerb5DIYPZz+9U32hl8xba6+7Tt26NdUj9fz2f++zz94y
jyemUpn4TLZMQGlNGxoDos3BWL2RutBsHE8IF/t8cRsHV/5hxN2PIiufI6Gr
KFi4SiokwmFkAhKOLKdTkRRUuVGAWRnwdceYl+vBwTS/ONcQ1vBMPLqEhNMK
6FIuwSqhGHn4hJ4922wrTgSXWmRnE76hIHu93bHT4z6bjByNeK7mQ4cjticr
4c0exeVCaG3ANdYdFvNpXJ5AKNHy+WqJSMvhy9g8KZMnYXDFVAafyeIj4Fgy
gd7X2b23sZRfnTrJL27MjeyvlvZ599fnro62j7YWz/Y3D3fW8htLh3trh3sr
+zuLp3trhc2Fo+0l6AqePNldPT/Y2N+cPz1YB3ZW2ChsLxZ3V0pFQeuzpweL
Oyvj24sTW/OTIKBYnx2cHmkeH8z0Nts7GjQdLfK+Pu3wlH1hK7Z2mJvdCc0U
APOdg3uu4X3f+EFw+igyeRwZOwlPniRmztPzl+mJYhi4gLmL5ORheO40sf20
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
d5v8boPHoQFhu1YpMOsUFr3aqFF4HVYo1e+06AD/gYGbICIA2AcGZYE8FmMi
4E2HA0GnzW02gGvU6wq7HfXxSFMqXp+KJCO+ZMiTCXsyfmfMac76bVGHyaiU
h0KR7sHxjoHRjoH+z335cz/4wTuf/ZPXurv6GhvaWlo72zt6gPIH/qGxpRMs
IC8AFQINXY+AnLwZATa3CnXmhPI/N8l/aBYABH+g/2/mQt7wH3IBa1uHKxsH
pS2A6zm/0PkvKNsPtXqDKn+gl8BueoFCXwqdMobyPx/kP3S4GFxv2kHczJSE
7Ib/pSev0/75gyOwuLp8/ODBw+PiwWdeefgPf/W13/zwW2+9+sJL29vfLy78
1+70f463/p/Dmdf2Zta2V9YKhbXdg/xu4Xj/aOfksHh2/keFk7+Y7v/3vfX/
ePDK318dvfeZp288vnj0+OnB2eX51YPTy4vLpy+dfeLpGxtT7xmE74vg/+ki
/SIpebtV+8qw+XLc+I0HvZcjluK4aaBRDyu7i4ZTAfyJFCYaRwZGorIA/MFL
cBOs6QwOiA6IVAHgJ41KtiqZOSfndDr17qcPv/ni0r98/4W3Xpr4t3ef/tVr
K//yzpO//vTa/3n7wQ8+tfKPXzx/6/Hs20+n/iTf/OmNhvMhf39EZxVg0379
xEALEMMdCff6SPtYS2xnamq1r/Nyvvel1bZf/MXpt14Y/NsvzL/zqd6ffXnr
3ddmf/Lm1l+/vvrTP9///p9u/OgrZ9/89P4Pv3z67T9a/+5ri587b/3SVecn
1gIX087CiPlgyLI3HhnrSXB5TKZIjmeKKFwJUygB/BfJtXSehMLkk+gl/sNh
GBKeNjk8XsgDvM8dbM5tL0wtT42uz00ebC0B8p/srh9slAQ/0PlH+VXgCEo1
/4tjp/ur+xuzOyuT4Argv7s2De5A8L8sbj883YUqgoALALHAztrE9uo4eAA8
tr82c7m3dgKiybGeidHWzg5XV7d+dsG1f5Ccn3cND+tGRw0re5HBZVvngvn+
mqN/0z2S944WAkMHvqnzxNhxZHDfN3YUnTiOg3Bg8SoLvMD8SWbhtH7qMD1x
mB07yI4cpKbPm2YvW2ZOc9MnufmTlrWr+zOHDZP76dGtAHAWcwXf7tPG9QcN
pWDhrGVsJdJYL0u4yKMJ2kSKc9/PDmkJFgXBaWYnI/K+TufoYmpxu3NoLCcT
4sQspM3AyDbr20ZcXQOOcEqYaFamO7SWMMscYotNaLq0SmjD80x4gZEoMOIF
BgxTDmNIkWw5kSVHM8UothgnkIPwC4ulVcHItxlylFBHYCsRYiNBoCWyZDiZ
mcmQ1akcFEeSY09wXGkhjPbhOur/IolvS6xIiRVhjJJMMbIuWmrs423hqP0o
huqWNUqzRVl6H52lrMYLnlX7cZkhvTpIkLgwLG0lXngbeCKphUoTw1liGF+K
ZAqqFFYU4L9EWSXX1UlNMIbqjtwJ5+jucE23NUGkNUWypagyD5qsvIsVPce1
oCjqKoYOjhXdBndMSaoqiCYqnyGp7hA5H1d7sZoojmmpQnA/jmbdQ9Ar72Ce
BfBHYqqAAeADLwBDltchKqrryq/7Bd2uQd1Ck8uI7Brg+GCk8nLkLb6vTuCH
adIEbYqgTgLxT9Cm8ZoEutTzv4kCwgFFDKGMwVxNFGc93hiFKcPV6ijMlCml
gJzNFHMG5WrEepuw/jaSt5kUaGJEmwXOIMvpFQVDhnTSEws5rUYFMLtZYTPJ
vXZ1wKULeQylzg9Os8Os16tkbpsZQN6kVYKIAAAfOAKX1Qj4D7wAePe3juB3
zI94nCGXHRiAP2SpkL8pHW3JxrMRb8xtTbjN9QFnY9jlMeuAXMxkm8ZnlrJN
rStba9/89tffffetx4+uSsd+W7tLyf/2boD9ju7h39P/9/tHoPlfgP9Q/4eb
5E9JmS+XtoBLzR/W8wDvN/wH9kH+f3BGDID/0trewkoemvACDOAdavIPlP94
Kb5Yglo9QCVA0ORHqLIU2i8A/L/pFwcdBIa6QEDHAcBN8BbUTQi6A/EfahZx
PXXrpDTG8ehkZ780z3GnsL9/eZo/2nnlqvjzr33hP/7y7S++8fLW44M3X/r8
Pz55+L1m19/ONLx9cXCwe7a2fbW7dVE8KJwUj/cfPQB8/9r84nes7F9biT8P
qX6T9vzzSOv3CutPr86LT58+fPzoydnVw5PnH109/tr8+E9FxP8WVP/aTf1h
XPn2aPLlmfTxXPB7n9797Mno88Xu7jZH+a1bCKDC2FwsgQrEPzAckQawD8Q/
uAIvQKMxuBxRMpGLBLzZkOFPH829sBL/YrHpzXzrX7288MpK6hufmHhhNfvS
ZvNam3m31z+fEs8nJLNhwVpashRnnfVqi13qV+ai9XZ1ymly6PRUHJWGpyHL
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
4PkVQH7o3AFUfQolf6BZwFAxP6TtodpOiP9QCPDB4k/ogZvRYFD/hxs7OD/b
Pr7M508u8ltf+sxn/vUn3/jl0dhPlLCf+2n/e7fnl0/z71/t/fJo8UeXe5/a
3trdzOcPzgv5rfG+jtG2tsXGzFzGNhY3zIb8ayHPesq91hLMD3SfLyy/UDh6
cnp2dvrg/Pzy9Kx0PTs6vdwvzA30RkIgDkeU2jMLBEDXMxgsWC0cCccw6RwC
jkzAUwH/8Xg60P9oAg1LAkZFYnEUMoNLrGuzoort4jYzmkWsNDo9nnjSGgx6
06WOcI5YDPA/294WTsbT9blIKlbf2mjze3Qum87l8CaTvmTaE0uYvX57NKbx
+bTBgMLjVrlcSovNE4kpnbpgxgeU/+BwpyfoDsajTr8fXG1uKwgokplorj7Z
3FKfy+UsVqdQJGcymWw2U6VRCkR8NBqJRsFg1RUENAKHgsNqynFomJDH9Hrs
IiGXz+VxWGyZXG2yuz3hJAJPRaBJFDoPhSeXI5Cprq7WgQHA/7GJ4a2tpbHh
biD+D68P/0J93q5V/eJxKSMENP/y4cbSaX79ZGcNLMC1sL64MTueX5oBscDW
4hTwAjvLM9Mj95emh4/31kEIADQ/AD64XhQ3j3aXoLMApR2B67jgcHtha2Hs
eGtuY2ZgcbxnYaz7eHV2dbJ3ZbZnaal956h3YTc3tRMe2/KM7DknC/7+Dfv9
JXP/qqNvzTm46Vk4z4zsBsb2A0N73o41c+emdeQoMlZMAZE/fZaZOc9OniRG
DoNjxVKY0J8PTJ6kpk7TA/uBsePI5Gls6jDdNOQ0e4RGizgeNEftFi1LICQx
kRXlyDsfk9dW2iqqRc/cYd++xautURKJXBSGhkUwmHBvUFbfZeoasDa3yRvq
xVOjgf5uc2eHaG5Of1D0DIzK9OZKpQGmNOOA7gWaHGhjGO1uHfUOilGBY8OR
1Cqgz9GUqlJXZOJtQOzSqFwpmioq7ZbSZRUgIrBGuHIbHlAXMM0eZ7jTrEAj
Vx9ACc0VfEMNW1vHUFXjBM8SxbfZBjhBWo5m1SBoFcCtcOV4Kg/JFBFJXDyM
AK8jVNTgbxO4VWwVEjCZIq4Gch3Hq6XLkHjePST9YzovReXC8vXV4I+VOtBK
O0yovae2wN0hhtNHdfrJejtCrq+Um9FUPogaPgpEO1NZq/FRbFGeJyZWeVBa
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
TURne52js9baipT6qEMYY5So8QEPlsoNdRojmy8iagwss11gsgucbmU87rab
DWadWicX6uRcu0EGCB+0m30WQ6Ne7TXroy47WMhhiTTarEYFeAp+tzlgM4SM
WrdKBtoeWCDidbitehD/sAEKSEd8sAYaLTGvPRvxtiaCLXFfOujsTAc7UoHB
9mRvR1NPU2S6KzKetU+1uHuiDp9R5zHZYvFkOBHJtqXvHvI//N3f+b3vfuuT
H3t/cGikpaOzs7evq2+wrau3Z2C4o3sAnfwJ+h/Ff0D+yZlFNPmLxOffgP/j
iB4kPv+z6P0HU8BoNB4Zzv8m8vNB8Ef1Pxr2QWM4aAoYjfagyh8NK6FTINC+
Y7QjeOFnrQFolwGK9mgI6DEKhEr9x4E/cHlx/YAO/0Ts5vk5IH/+Kn92jc7/
BC8APQjg+PY6l0PuvnOb+97zk++92vvO6vTvdMW/Pxb5s/7Ovx0Y/+vpuR9N
jPzyUMv+/vJZ7vzi7Pwkd5o7O729v7u/f351fndz9vBw/+7zh/devnj/9atP
gL169Ynnrz7+8Prj569fAyM83L8+vrzJ39+B0PWG4D+kI5AKRtuSnmzc5HVj
ibW1dTShUExCQv8N9VQWqY5JqmfhyDRSPYPNEwokciqVI6Lj+kPStIWi4uPj
2XDPeH+sLdbS1aWzWJw+n8Fmi6bTDi/I9bjd43GFIsAFZo/X5g8Atk+vr48s
LQWamhzppL+91dfa7Ewnm8dGYBPp7vRmMy0Dfe54NNnZDgZ+BDgOYP500huL
OoMBm8vb6At5/BG1xiCWyEQiid1uNZsMtLpaJoXSQKmvJxJhU1FU1ECpAUeA
xWJQKBQiAcdvYAb8bo1WwZVwQfA3cDUyhZ1EaagikmvqqYUYfKazr29sYmhk
eGZ6/DJ3MD7cdX66kzvaBCfr9d0ZciJYbu/27ABt6YI9WG5/fXdt7up453Bj
/urNaIjV6aH91Zmd5antpcm12ZHlqcGt5cnDLeT4+OX5MfAFthemtmbHdxem
DtYXVhcndneXLw/3n1+cvrg8uTnZzu0svDzfvj1efn62ltuc3Fsb3FjpXN/u
WNxp2jjrBvxfzXUu5ZrXLpt37jsOHvp2rwdWDlt3L1q3zmLrx9npQ//4uXvi
2jNwYu/btQ/uu0HeD8F6EgBeGDl09247Ro4CE7nYwnXz0m1i4UVi/CI0cZBg
Cyo1Eha3HsdnETksqkop4XKYwYAnk07G43Emk4nH458VF5WVFhIrS5i4GjoO
R6qpUOmZ6V5bdljXMmYMtfCGFxzjK67WYWmohZrt57ubaZZYrb+ZD2AOopSv
x7PVNXQ5hqbAETglFBGmivaEpcLVCUpqWB8BMI/3SLND6vSgKjOsjHQL432S
YBsn3MGzxUl6f401SjaFyOYQVeuua1CViYw4jroSOT9XXE4TVVKFFTxNDTLh
U1FE4VXjGSVEdilNhMUxigj0Yjy1BHQ1gVWCYxRQ+GV4JuyLGBIcgVleTSkG
HS5QEzkqDPzCBlUNS4at4zyjCYvo4hp4Ak1UzZTW0MVVQAQSA0FqxCvMdXIz
WWYl8XVVNEkBU14q1OOFeoLYVM/VEKWWehK3EM9+Wk17C/ydGkZRDau4ov5p
CeFJKbGwqrYUW1tWRSwur3mKJRRX4UveWFlZTWFx9dMyzFMMqRhgXxnDgKmB
AuJYQxJvztSCaYKV1izR3kq2NOHszYTGFqIzS3RlSa4UJ9ysSnc0uvwaraFB
Z2pQG1gKLV0grlUoOBIhouwUwga9gueyqIIuc9zXGGq0Og1qh14VcJgjbrvP
ZnSZtOAd2C1IU3DK3xi1mwJ6ddRlDXqR47PBRwi5bWj8H037wprwu5qigc5M
tCsba455e5tjAPsI/rdl+loiM93RmQ7PVKunP+kOWU1hpyeZako1Zbv6Oz7x
qZc/+Dff/Ne//Y3Li7Oe3v62ru727p727r7u/iEwwH9wBMALAM0P4I/2/6L6
H835Po7lRPEf1f/osVyP+P84gQFpyzo5A8xf3zkAzEfTvkjO903YBz6IBn8e
T3V8TCijvWDAAij+o4ZSz5tZQPtoouGxtgcd8vwPU53ftPo+Bv/RitBH/L+8
uj87vznNXYKhkz+R4P/lzXXu+vz66uL0HOzly/M//uov/uQPv/j3v/2rf97r
+fda6p/O9/74M+/8+S9/6oczU18danp/e+nm7Orh6u728ury/OLm5ub29v7m
+uHu9uX93SsA+RfP33318mOvX73/8tXHnr/62P2r964fXr24f+edh/cfXr5/
fv9iaHjU7W6Uq8RclZCrkzFUEoqQg6utpdIYOp1OIpOy2Pw6CgNPAuRHWgDq
mRwKjY0nU0hkKo+Ka/VK3WqyScPpH+lLd7V0jXQ2dXQ0+v1mpzOcTALsR1Ip
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
CrtO6rXqAPatOoXPYQJDyjvNWrSqM9BoycZ8mYQ/6LUGnaakx55wI3U+6TQy
0iESdHmd5mjABeI/4XclvI3ZkC8TdKcCjq5MuD0Z6EoG+pvDQ22x3mxwpDk6
1hKZ70uNtvnbIg54WigQjCeyTdm2voH+995//b3vf/O73/6N3NF+d3cvovy7
BzreFP939w8BCwAFAP73D4+hkx9gRb2Ax+Tv/yn+g4I5YDsgM0oBqMHlo6Gj
HlCDPXwKHf6GpnTh4WhlKTJlenENHovG/x/bzR7xH00co2e+Pxbzoznfx8rP
x44wNAX82POFZn5RF+Aod44e/oIEgvJnB+e5fO4ql7u5vL74zmff+bM/+OJf
fv2zP85o/87K+NP9oT+5v/7jT7/715cb/y5t+eJM+8npwdHJ/ullPnd/nb+7
Pb++AV/gKn95dn55fnF1eXVzfXN3c3t/eXt3cXcHbzi5fnF9eXebP73I7+3u
Lq4tTf7ie+90t3d4ffbGgNPotaqcJiqX/Uv/8rMA1DaHHZQ5jc5kcvj0Bj6b
L2ZyhSyOkM7iMTh8jkgk02hEchWbKxEKAcI1PB4HvACRTI6aUCoTSKRytUam
Uiu1GtDtBpMRdL7RbNLqdWazWa1WqxRKtVJlt9qQvUpltlocjU6dQQ/vkcik
QBMmixkM7oDBpUIhk0hEXC5Xo9EZDCa41mhUXq8725Rsa80qpSKDWmHVqsW8
BjDYO+XiHo/+oMN90GLbzFo3WlyraetaUjff4h1PWEaTpsGEzaMRkSrK7EYj
uKEL81O//oVf8bgdfB7b47Ttbqxsr8wdrC8cbizmdtfQ433v8gf3Z4fonIfL
kx10wvPZ/gYa/H84P7g83Lg93b7L7by4OID14mj9Nr/z4uoQlDwg/9bi1ObC
5Mb8xOLE4PrCxPLMCKybSxNAEweb8wD7uaP12ck+WIELtldmcvvr4DUAm8Cj
3rvaf3Wy9vJoeW+udWUiM9jlGhxsnF70H1y0rR2k5tZj/QPm5bXw8VX7+UPv
5mFmK9e2ftWyet8Can/uOgyYP3PlBfwfyzmmLrxwuXifmVgLNlooA2HdcFjf
61U02/g9XmXSKko55F0RZ9Zv95q1Ch6Hx6Jx2TQajUin1RMJdVhcTYOwvm8y
PraaaB2zdS7YE8OK7Kg8OyzJDotiPdxEn9CdpdqaaHawNBUZQZllajzVjjQ5
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
rqS4+u2C4l8oKny7tAhhgdKyAsB/RzNVE60xpMmaOFGfqjWnKcZ4rTZMaExT
HDGSN1XvjVMNbpLWWa+wMpDRpqIqvrRGoqqVqeo0OqbPq7SZBVIR2aDgWrWi
YKM+6rH47Qav1eCx6O06UEcKm14JmB90WT02XdhjbU4EsslAzN+YiXojbnMm
5OzOhmHjsqiAFNxOUwReigfb0tGubKK3Jd2VjrdEg0jYJ+XrSbtHmv2jTYGZ
1vByZ2QybV3t9a50uRc6PANpd8TrCEXCkWSmubu3tb3l7v7yBz/41ve++zsf
e/e9zo6+js6+puaOptauts4+oAAQ/4D/AyPjQ2OTgP/D4xOwHxieeIP/C2gK
YG5p9bEz94PiHy3mRJO/qAJ/7MZFo0CPXIDSAdijkkdzwWi1D6rz0YAPmupF
WQCNC6HRJzTW9DjhH432X1w/nF/do2N/0GO/HrPPj0OBHo+DgQ2aht7aO9w9
PDk8PQMvYPs4d3R8dnJ4cXJytbW9/7Gzk//wzt2PViZ/Kyr8w9mRr33i/a98
+eu/+Vvf/u73v/cfP/7+f8lv/vD28v2tjfzxyWEOYOn0+uD8+PDk+OH26Pp2
/yx/lDs9zucOTs+QY8Wuzk5O93e3x9YHvBe9xt88yj4MKN5fdnzjoeUze478
sHe319wV4PS32k1mdQUWX4nFc7lcl6cR9D+HKxSIFXyRvEEg44pkwAIqnVGh
0QO8g7ZHlbneaFCqFUaDzmjUm81GkOUyhVShkit1KrFCIpQqxHKVQCJHVxZX
AJyCtG5xRQKhFHQ+ygawAgOA8lcplCaDsdHhdDe6wBw2u16rA5cE3gkcwGAx
aQyqUCZSaOVak6bR5ww3Bdo7MsvTE6e7WxPjQ+MTQ/Mzo2GXzWaS9Qd0yybW
57sCh3Zxh4w6bBItGWXdfFKHnjMU0XT7BHYRkYApw+AJdqdlZqRza35aJxHj
yspT8dD29vLS7PjB2srG4vTW8uze+uLxzlpuf/Nkdx32m0sz8HWHWytvLpHi
fwD/88O169Otq/11sPuTnesDcAE2Hk53dxcmDpanDzfmQe1vr8wgvcCbiwfb
q4c7a9trC2tLk4Dwm6sz+9sLR3vLW2vT68sTZycbd7nd/dWZk63Fk62F7cXx
3eVJWFenB/fXxq+PN083FvYXJ4bbQmvjLZsTLWujzfmT4c3N5pOLrstXfc2D
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
UUFnf3t1e10Vv5e9MGX0OxeONqOPz/duzuCX5wwE5xeW9FJhu07VP6ljz0wM
u5bUkbDZ6VbKtQ0ceaPUyBaPDzRzyuuHcmrYlJpBQkU/tlOQ2zbMbBggV3YA
rmYiJTp7iovrkLmAwmoymv+fV5lW203pk5V0iguq+knFrRkP+mj9kqqKVkpB
Hb6kiUwru08pfCG3AJeXRagqp9Y00ovrGBQWprK6oLSO0T5Qk1tGYRbiiVkv
5pSnNfTQ6ntI+U34vFokiTS/mMzKwZRV0x50ZJe3kLPKiGBAFkAZyRxRTF4t
sbSZUd+ZD6RQ8ABX2kyp7KQXNZGo5Wn5jWTA/8I6ekl9Vl45lcRMx5PvU+mY
3HxqD5/RK8iS6h4oJ+rGpmrGTDVz85zJiSExr1HArZWJ20ZEXZz+lt6uxqHB
Vs5gA0h0tZSrFA2CulOJuaJB0FFdwv7uMSkfXoLgB8yHvUEp0clFyBLggTYx
t1cu4iLrf4f61DLRhF6hH5PMmUaXLFrrpHrRol+aMQAXOKfGpxWiBa3cOjY6
Myad0kqBBSbUYvAR4K3AnHZlUr5qloVnVQmrcm9RebasvliW364oQDOMsDv0
Oq1coRrX60yTEx98680f//DrP/rRtz70wdetVlD6SLY/GLgAoPzBpueswAK2
pWWn2wuM4FhZBeS3O9xo8X8AYVSW/w74P+8C/M4ir7v4fyS+fVfqE5ksXt8K
x9cRPyISDcXi0cQ6HIkmNkOxBJDLarK3491CMxigkR/Ua7irMopi+7MIf7Kz
2P7JxeHZFRjadx7pPvNuUtBd2uddzOfdpjDXd14AyP69q7Pj87Pz04ury0en
V4+3Dw9PDjfeenr0zy/v/WCo6h/Zuf8sq/itif3Xq5a//ODjb3/uE9/6yte+
9KUv7R4f7h4ebW3tnJ6e75wfJ4BMTq7PT69A/F9cXJ1dnJ+cnR6cHoKzgrLP
3TLku8zYze0N8Bd2dvYi4TXbvMM6Z6dRmOWlVeyuBn5f6winF6SCXCnQ6iQW
k9QxIXMsTKzYp7xOK6JXvctbYfdBzHuU8J5thsEutmNXu2s3+5uPDrafHO2D
ffD24s2b0w/cHH/g5vBDtwdvPdz7yJO9j7188LnXjz75+tHHXj35xKunn3v9
7ItvXL/zgUefefOVT3/m1U9/7OnH33/zqTcffeLNR2+9dvmR1y8++srJh18+
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
QWM+W+Hgmm8VPAU0HLQdQaI9zwA/Kf63o4GT7cRuHH7frojXEXTbgQJ8DivY
0ozJPm1wzhoCzlm/Yya8YlvzOUDzxzyONe9y0LUYdjuiqw4gi9XFWfjwuEyo
EHIUQq5WPAwCz6ziijgN0qEm6xjfZZC6xjgOBduh4MQtmh27KTgldRmGzSPN
VnWbhl8hGcqbnmj2+IZWEsMLu9yZE+7srsi2LXDuCu2bQveR1pqQjju7za4e
u6fXHRCt+qVen0SrrjLqmjxOZcw/d7DhW4+4TvdjJ4fRvW3vzIQcqWW67Fxa
sCzapqdN2im9etlmWV20Lk6ZbBN6rUowImSrRsUSwYDJMHJ87Lu4CIKdXfti
6/MWq7y+JT+/BFdShW9opw9JK7jyUs1UYwsb18omtg7SeiW5o5YHA2PZgxOF
MscDjrlAulg9aq8RTVUITRX88fIeKauOjekU0/sUrB45pVGYUcNJL+m6V4B0
/sXk1aT3iErBWShpTiluebFPll3EJmW3p+e0ppV3EErgM6UZJWWkwnxE/DPy
sMzCpIBn4ggMLJZ8H0t5saCSyioikViZcJyal0otTClqoJY0s0qacpjlxOxq
Uk13fkkzI6eGgO6zKum5NSxmGQ2XlZFOTcUwMjAMDLBATxMAfi2PUy4crhro
ruhsLO9rqR7qapDx+0d47dy+Gim/VTrcDvjPbqlRC3vGJUPK4W4Zp0PF6xkd
bB3pa9Twusb4neO8zsmRAaOoFyBdx+8CU7KbR3vrR3oaVJx2Lb/PIB7Ui9hK
TqeC2zEh585qxXbD6IxKNKuUzGmkFs3I7DgiJCwG+axBMW9QLhhVNoPSqkPi
RfDSPzfun9UGrePBWWXALI5NiQD8w7peq3RQye1TyxVKjd5otvj87nfe+fhP
f/atH3732y8/fbgMIG+1zVntFuszzQ97q30RnQVAC0Egaf8en3MFmQJ+Hv/v
sjfvpoB/p/7/74D/3YIvdAw6HwzQPprYRLkAdQd+Z/4X9S/u5n/B9UBrQaD4
j5Z9uIv5g+x/9PjVh49euQUX4PoxIraBF5JNXu6SPO8awd/N9qItA47PblES
SbaAv9o8PL66vn14c3t+cbV3dhnb3Vtbjx7vxB+/ufvXP3j7n3/8sZ998eln
t3zfcdn+3DH/1/a5f1zz/N1O7Fcne39wsPfw6AhJPTp7eHz+9Pb6IRr/v74C
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
/u/tr3/kzYu/+NEn/+2nn/jBtus7e/F3Pvnm25/++A/f/+jP1jz/bNb89dL0
5xOhi+ODg5cfXYPY///g/+Nn+P+c3VFA8vnf//Irr90+QaYDbpO5o6/fXr92
fpCV+gImJS0zPZlNj8dlovmcgLYZmXeAj9qzlxkZeffTyohkFpPKYjHysUTS
e14CuY0nZBIIJEBmAoGQntwQfZ9cBQZoDB4BsEVGMsiThsPAESKRSKIQ4V4k
MhWLIwGbAIYjD4HF3+E/GAzQgzg8kZWdxWAxCURyBg5/Px0DkJ56LzPlfeA5
pAB5vQ+DexGDg3PhjnB3uBu4IMAxQAFAPaD/MzHE974vZUxr/PQfvPPyK298
7O1PA4mvJbbBTk6vgNbh6371tQ+88tqryHK626uHD2+uri4uLs7ACzg8PNxL
bjvbmxfnpw9vrx9dX4DftpkIbYImD/sA/KNuZ2TFsR1GAjtobs/F/hZg/l48
epCIH20kTkBZrIX21iMg7NfDnnjABei9GfVGAsuJ6Ormmh/s9GhzfycG+5PD
jbPD3YPt9f2txPHeFuwB/0PeFaCDjbVgNOQJeZcPttd2E2G4HVgisHK0GV9d
Xgj6luFd8EcWLRMO6xT4+3qtXDcms86Y5qYM81MG+8yEQSlVS/jGcZllcmxC
rzBoR/9fzt47qrX0PBcfZ2ZOoSOh3ruEGr33LlGFQCCQBKghQBTRexcCARK9
HzicfuacM9Uz9nF3HNdxGdtjz9geT2zHidPsxL6Jk9z7R37v3h8HTyZZd637
03rXXp+2pC2B4Hmet3zv22rSY43fnWaTsabJiI1/6rHW9rfXj/VbJ0bcQAq9
rtY+l2O4p6vXZcXHSAE1WKyNVU5TLcj+k13vycb86d7Ko/vHTmdTfk4q8M5g
lxXAf368d21xLLg8vTDf19Wjc/WU6ZrTG1qLLbZqq6PO3l5ratXUNxU6ug0d
PU2u7oaK+oyMYlGWFovAFDfKMyq58ixCZgU/Po8Ul00QJVyVZ0Sq8wD5o+VZ
UcARSYV0YUKEUB2pSqeB/s/WsrNr+LF5BEFaJFsVEp9JrW1KzKvkpGnJOSWU
Mp2woIaTU8NMLIsUpn+Cn3aVm3BNY1Kr8mMk6ZGg9mXpMcIkcATI6hxWUqEw
uUgAsl+RGSNICBUnRMTlYNPnJenRzNir4vhoeTpVkU+X51GwmS8pJEUmU5LM
oEmiwDhyEl9FFahYVAEpLCI0PDIsIiocS28Ro6Iu5FWErjwxP5NXo41rqsd2
exn1ifUV8rIcRkkGt7pQbqxMrS1N1JUkmOpy7aZip6XUpC9orMgyFKUYC1OM
+cmOyvwufWldTrw+N8WkzbPrNc7Gyi5zXU9rg6tJZ6kptejy2/QldoPG3lgB
Bt9UV1sDgLyrraG9tdHtMHfamh0WA/C7o0XvshrcVqzg02NvHnfblgY7N8bd
myPO1b7m1d6mjb7mQG/t1mDV7kDluqu8vSqjoiTNZAHxbzO3We0djo1t//d/
+LWf/Pg7X/3SZ/zeuY52F4r/g/53d3W43VjTt95eT0+vByV/wQUA2EfxfzwF
MD01N4+VZc4ugAFEo4GM/0/4/9G60EtHALXx9K0GVtY3lteCOAtgEaHZRe/s
4gKsYYG93dIKAn/0/ODWPgrjn5zdAfC8fe/Rrbsv3bn/GAzWcAZIAe0CQ3U+
CPZRec/lrisM/I9u/Pf87wX+47a3d7C7i7UDAhdgJ7jy4O7Ohz96648/ev3d
xe6/XJn8yaOTH9w6/dV24K+mPH90t/1uqPOdwPxL+xs7Z/s3Tj8S/zk7Pz07
P7l5fuMcWOAWLPA17hGcIwp4CHbv/sPzuw+AF+CDnd04fXz79NHRBj/yE1Eh
2GavGAKREEPEdnVFYTu6osMjEOxjvBCJr/F0ANxyyTE2dbwpKcGan2VQKPkh
IQCx18IwsQ0UAK+GZwL440H70OhocBeuRoRfJ4aHh1x5MTQ8BNtSFhnC57Gw
kfHJCanpaRKJLDws+vkXrrx45dqVkOvXwyPAAMlD8WQEcBGG/1GEaEIMcMfV
cCyPwIqITmXycjiiAoFMxaDERIY9Hxb6XHj481i8CttfjGUacPxHmWR8v1j0
c8+9ADrkH/7x96+/8ek3Pvn08ZPXQfnPzfuWVwLIlTu5cX737t07d27Br/Dw
aHcHEHhzfdW/vLK8tL7m31z3B/w+EOHzU2Njg30zkyD/O8YHQN+6APnnR7CQ
+7jH7Z0eRvWcAPU7aysA+3DcXV892IA/U9/mytLyHOj2Wd8s1vkf7fZdnhsD
Az2/t7UCjgAcN9YWAPPBQPAHVrxgQf8SrOG4ugwPLQHvBP2L8xNDm/7FrZV5
8CbA18CG1CzNLC/gBahjQ2vemaWFydEh99S4Z8U7CS6Dp9MKOn+w24Gpvk4b
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
I4fDATUOaw4LRDgTxD+2Cxh3DcB1BUg3cdirfNkhibvDFHXRubERgPZkAGoQ
6jjkAl0wOdhLmYC6UmmsXKlITU8TSyUsDlskloLxBaKc3Py8wixsUnxRQW52
joAnFIkkErlCHCsXxypFMoVMGQfG4PAjCMSwqGhQTpF0YAAmR8AX0WPsdMZD
kugpQXBKpLbSCdmRkVIqn8EVU5gcoYgrk4rFQgm6JrANH79JZFKlWsHlc159
9eU//vFf/vM//8/Xv/EVWD958mRlZXVh3uf3r62vBzc3N3d3wUnb2d3b3Nxa
94Oq39sKbqye3Tze3gn4V72B9eXFmYn15XnAeQBP0N4g+EF+A4wjzL95uHmy
uw6Y7J3Gx/5OjayCgPfNba6trC7Nbwf8ywsA17MYiWz69tYXsVafQR8YXBDE
PIAzXA3uIk6BBVwTXg7ID/iPDY73LYJbAVcAJwKgGx8ZNgyfBN4F6ADgHQzA
f907D4b5Gku+zRUfaHk4uYM3ZMZzE3OA//Dhd9a98CosHzEzCeA/0ts91N89
PNDT1+2aHAEHZBTAHyjAOzU+Nz8+NNwzPt7f29ve0dHWbm8eAJU40Dk83DnW
7+qzNdsMNdj2olZjd7djenq4xVSvKcoryc9JkitYVJJczJWIaFIZrUqX0mor
y8mLLSpNyCtU5RYpm1rKrK6qJmeOzpxaZ8uqaUmqaVXnVNNSymLStFRFJiEu
j5hbzc0sZycWMJILufJ0UmIBLTYNjoyEQpoihyxIimIrw5SZlEytQJQSxlJe
Yauui5KIyUUCSToxsYSmzI/AijxTI2Rp4YnFxPQaamYtW5gUzpKG8OPh+jRJ
6jV5ZlhsOkGWSpYm08iCF0n8CIognCEKFypisOb/0iiGKIwqDBMnMcRJLLqE
FM0Mo/AJLDGJwg2Por1ApL5A54QyBdF0XiRGCviGLzIzApCfSgMWIAH+A+zH
kMLhbxkowN6QbK5MbK/PN1ekGSsTXeZcZ0OGrTLZWZthq0pv1iSD5rfq8p31
xa7Gst6Walut1m4Ani1p0BXrqwuNtWXY4N2KQr02v6o0u76qqLa8EMxYVwUG
mG821rQ0Y4PdwQDqO23NcHQ7zH3w3bU2tlsaHKZ6t8000GkD8B/ssPW6LAOd
bSPdtvFu+0S3dabHPt9n93qcvoEmr6dqbbBsf7zW11Ft0RZ2OLvtPeN6Y32b
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
wBZHcoUkBieKSA6NIoaQqJFMFuYCRBOvdZtL+m1V7c3FNlOe3ZLTYkxva8pr
rS/UV+Y21RTVa7I1uYmawuQabZahqtBcU2o11rQ16jqsppYmAyC5pdnQWF9l
MFSZG2tbmuoA/OFobzEC2oOB2wUUAAugCZulCRYWYz0YnG9qqHVYm90drZ3t
lq4Os9PW1Ndt7+60gTc30OucGHBNeNpHOixTPcalEcPSSMXGYPXeaJ23s6Kl
Mr2pvnpwdKx3YNDpau8bHPj00zd+/rPv/eKn3/3K595amp339A119mAJX9wG
8DnvQ/3DQ4OjI8PjY6jy8xL5UbX/s+L/JZSTRUSAABwlZD+q4RGGA1CjMYto
8BaskRdwWf+Jij+R74DAHx7dxAd1AdqjdnC+1QDCfwB/rC4UHyuMrowmPwIX
YP1/zu+i+A8AKQr+XIaA0C5gBOwovIPiP6jb22Wx0MfsMmuA8gUoU4xsOxjY
3956eLDxbe/Ar2tS/j6L9nMN7wNr9ruB+fffePLDL33tB5/6wndefekrn763
d7Kxc3p2dHJ8fHJ6A+3qxTt/opAUuCdoDXSAXJWL/p837wLyw2cGntrbP1lY
XKms0r/wYgiDzmEwWEj20+lUwH98IwAfTgiFfFWcUh0fBwALWMrkCcFiwK2N
oRIorNAo8pXQ6NComCuhEc994oWr10Kw7p1Ys2as5TLatAUQTnzWyeEZC1xM
jpRI+fkFWWwOjUC86BQEL0Njhin4DTQ/aiWKWg9dCbn+Z1euhhEIgP/glkgV
8pKy4szM9Iys1LSMVCACvkAklsj5YolUgT0qVcrEUhF8fplMIpKIgcHEMpVM
lTQ0PH50fLa3f7y2Hnz48OH7P3n3H3/717/+m599/etffPr06auvfnpz83B+
cWHZ713xe5e8C6trS/6VRQBALA4/M7QwOejHm94D8q8ujvsXxoAU/IujgeXJ
4MoUEAGgPbYFDG/+j/o/o81c3skhrBPy1DAY6v8JzwGcv7G1trfqPQqu7PoX
99eW4O7xhv/2wdZB0H+yHTjeWj/d3zzc8t/YCwB9AGvAxfH4vw8VAmGzV7CA
/9pOcO1wZ/P0cHdvc3UvuILCSrsBjD4CvrmZ0X7v9Oj0iAekvnd2EivmGekH
GT880NPltIILMDrQC+J/dWkewH9mfBA8DjjOz4wCBQBHLC1MTowOuByt7faW
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
lGcQyACXZYkA/gQGN4noEmwf/kvhf2xrLxCMGQ3W4eHRjo6OwcHB9vbWLPjD
1tHWhfn8Hd09Xb09nZSu5tYWSk834H/v4Ejf0GhXzyB4/uS6ZkrfILGm9v68
qznw/z38z4E/mg5AAtGlpaUQJhQVl6L2LjC+M3FQVFgCv5Psk2GAtXYvrwQK
APzHMlRYJX8DXH1oeHRgaBBuZ6C/d3p8bG5qfHlhenZ2dGZmaG5ubHy8f25+
sq+fMj0zPjM9Ds5/Y0NdS0tLZ1dve1cf4D+8/Uzm7OjoMrVzeH528+L85uOP
P/n2Wz/45a9+9t4Hb7zw+c888uiTTz75meOji52t1MHBwW5qe3crvhUNZpKx
dCK6twX4H9kK+bFK++wirHQyDESQCDrR6l0AW4BrcM4PtsKYiw6RaDIIzv/B
XgxsJ+GPBOwAkoDYFye7D986eeQ2fISZRx86vzxLQ1AAB2FwClyTletE/ALg
D4QClk54d2Pug+3AyV7kdC+WW5IGvAMchNWO7iXguqj66Gz3zvKErTBGAT67
PuTDPHzYu6z6sA+owQ93jklVH+4ebEXP0tuH6Wgq6UtGPX6XxeM0IbELr9Pm
tpkdZoPbll32q5F4rOqAU69TcBJ+m0kp4NOX9AqeUrQp5tA0Um4i4k7Brzni
Tu+GTo6S6XREqeR3dDTU11UDmVfjy3vbWjx2s9ttVuvEIglDLKErtAyRhkYX
zyxsdKyuVIs2G5XCDj6zScBtEwiamDwiXUBaoJFH5kg9Y/j6zjzKaGXncPnA
TFXHcNHgXGXPRBm5/WN1XQ90jJWMr9fOcho3Nb3zLMIiq2qYipvm1g8yCMMb
+KkNUm3Hny3ROqeWW+EMvTOEBkpxbQcmGdE33TC61NkxXNPQU13bRWzsKu0Z
q2kbqiJ3ljb2EdqG6hso5JqW6qrainJiSRkRh6vCYVIk5IpyUim4/aWVxRXV
pdX1FWCVpDsTvuX4kkoipghajMPaJBUWXysrL66oLC2vKBbJJrjCYTqnW6ga
Yis6qewahrB1fbONtjGxujS4Oj+4ODs4MzdIpc1B6CTiM8G9X5odZ9FWN1aX
1uZn+YwN2uIce31VwmcJst2fNzdW4DmrCzPAC2z6GoB/bi4gNx3AZdIUYizb
77JpdSqhTsV3WNRA9/Bl2PbYIw5NwCxK2MWnIe0jMf0TYdkTXk5MvMRdGJHK
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
RbzmSMC+nfDD1QMBm92ijoddcKF0PBD2WFBsgu4Wbvt0L4H8f69NZzeovDaD
x252WfVOi85qVARdhlTM43djCg86tcRolJtMimjUqTeKrTaFVEjXSTl6GV/K
wUSJeax1LmtZLmY6rRq3zQA+Z0s9uSjv/qsf+7OC+z5afOW+8sL7ecxFr13u
sIocdrHHLYv6zXoFk7HYvzHayJtsVK92bk6TGXOklcUqOgur/ByYregeraCM
4MaWidNMEk3QwVH0Sk1DU2s4iAX42la5jQKBgNzRbk4MCawdk3Ti+Fr1CqeW
K2tfWMZPLJWtCBqWJE399GrKSh2hq5TcWV7TWk5syq9uKyB3Xmvozx9dr+mY
Ka/suNI4QmrsK+mbrRparCK0fqS07iPkzlJCS2HbMLl5iNgyTKqllBNbSipq
8vF1hcT60qKK+8ur8wi1xZXkQkz5E6v/x6ihrCqfQK7EusCTKojkSnCdAPzx
ePgdlUjsPXRVK13RzVT10xW9G9JernKCK5/ii0e5grFN5ghrfYK9McekLtCX
FwD8UVUP+PxSIZO1sbhBnd1YxepCNzfW2PR1hViglkskmPgeX6OWyeRClVKq
VsmkEgGAP4QDWpVYJReoZQK9SqJTijHxf7XUbVJ7rSq3Ueo0CCMmScwii5qE
abv42CPNuGV+PVbWpVDJHT5fNJU2O9xSmfD2zdN33vneT376zuuvf/P0ZN9i
1tvtdqzbr8litdpttjuLfxEFuHx+ZDBG1f5ZzbftnNQnysnc65rm7H+R/891
fkf9v5D/j5I89yZ/kI4oaiiQSxAhzx9++w53CKWkAPwBDH9XmJRIwdOQHByS
00GY/9Szn8lJgMLDnP//e/r/uYKfXIUSmq1ABTlIpAIVLN2RpMjONcDBi+Pr
h0dnJ4eXqeOjpz91+Yu3v/TPLxz/lNnyLyNX/nMW/1tG27+tTf5P6tK/c+f/
dnn0lSQnsBU8wIrD9w92DvZ2D2LbWBrt8Pgoc3S8d3C4vZdGnS5z0+uo2zL6
CGDvDYaAqfVmi1KrkypVg6NjD1zJ+/OPfTQv/9r9Vx64evXqxz72MQB2ANtr
eUX3fezqxz565dq1O1Kc9913X35+XkHBteJibLoWefiFd7eC7Jb/X7drf7Dl
/4kNkQWKEVD4gEIJYB9UDoo6wqP1Zdgt5RU+cCUfrKycAK4/rgyfX1AC4F9U
XJZ3rQiOX80r6u4blqv0MqVOqTHa3H6jxWmxe8CcniDQAXw3nS5/wJfcSma2
kntnp5cvvfTSW2/94LXXv/v4Ex/f3Tt45NEnb918eGc7HfAFHRDl2i0WgxbA
36JXA0ICBaDFUxGPEwzg1O8wgJ8PXj0YID+Mwf8HED45AKCOAPgD/ALY7sb9
FoMcDNAVYBnA/+Jw6+ZxCsD/eAfz9k93I+D/38gkwM7TsVvHO2eZGKopAqAG
j30n7En4HUAoMIC4AHgBKCDbiTJztBvZijh8Dg2cP+y3waWBArBZP50Mrh5z
W6MeM0C6x6o26yVBrwkow2fXwkEAeQgcPFa9Ta/UyyU2o9qiV2ITvnaNx6Vz
2XWxsMfvh1+6xmxVJLd9Tq/eH7SYzXK1gq+W89QKodOm1+lkAhaVz1zl0lfX
5meWpyc2luYlXMbq3MTG4szqDLi1AwtTPWLegoA3A1gnkcxqpOtC9tTsMHll
tJo/W6+ld3Pma8D/p63XrmzUTi5Vji9Vdw2UNnXmDc8Tu2dwE0sNQzOkBXpL
10iBUDvEkLSMrxZuKhok5haRuUnp6V8RNs9vNq5y6+bX8CtrtfPrpP7Zwu7Z
gp4V/OBaS00voayuqKTqKqk9H6y+t5TY8QBYSe2f5RPuu1qZB9RQ11HaQCms
6crHusZMt9R0lHeN1tX3ltX3VNRSyloGqjpGyF3D5Na+Knx9XnVrcdZKwUjN
OGTERhweotLaCkJNebavKfgjJdhasIoSvrFnU9PL1g4tClqpUkx6VGxaYMqm
aJujTM4UbWNifWUCcJ7PXgMnn01flXLZMh5bzKGzaYucjQX4791cX2Cszq/O
z7NoVJmQJxFwmYw19uaGQMjm8VlCAU8k5AoFHLGArZQJNUoRmEErAc9fIWRb
dQq3RecxazC1B5M45FQEdIKYWZp2qzJ2wbFDsGvmaThL9KVJlVHlDPl98ZjG
oDebtF94/ukfv//Ghx++/Vdf/otINGA2G7P4bzaZTGa0ZfH/bqtfLzKn1xOM
RrJd11Gr32R2+jWVnXL9feT/X/v/9yr/o5IelNBG2f5c17BcFuheHSEY3HH4
gzGnJ+wNgBuENX/P9h1OZucj4sAO8Co4P2A1Jqfz5LNotdfvJX9Q5X9OgCLn
7ef0nO/tTY+ilVzD4lwgg5JXe/tnB8eX6Qzmtx8f3ABf/dFHDn/x/c//01Op
v1si/XaG+NuF5n/lDP5aJfxHv/9/bPl+LRK+EddcnkGgsJNKRLdjW/vwv5Te
jyXiqb0dAP9UZh+4AHW6RyJ7aMIdjYEFICKDDwiBP8L/+eWVSmI11mC3DJeX
lwf4DFCPqXeWVAD+510tvPJAPlJvAIcfk2vLrmEBFgAuwBZqXSsuvGe7lwIK
/uuWw/nC/58bWjWAdEHRqmFMahpuNa8I7u3qFWz1GApVgK3uv+/OcbgxQhV5
eWVdIlUqVTqVWi9T63VmO8A+UibXQkjgC9sdXofdH/CDE7CdSR+98MLnX3vt
tffff/frX3/56OQ4s3/40MOPXV5/MBbdioSibqfLrNcB+DvgH6XUaTFYtSqf
zew06h0GHeB/Nn9ihz342OBXwx7jgqhnbxvr53iyGwfwT0W8AafRoBF7XUaP
Qx/0WgJOfSJo308GUmEXePt3BhHPyVbodDsMdpKKYP2Ck4Hbp3vwp72o53Q3
up/wR1xGn0W9E/WDYfFF3A9Uktn2gwXdWjRNAD4/7IGYfGZt2GawK8TbQccJ
pmLkQAX/Yb8l7DF5LeqE3wbMEvM7IZzZDgdCbiumJA+4AbfqNAQ9tpDXbjYo
9RqxWsk1GcQWo8hmlnjtSpOK7zIqIAowqYUus9qkFFg1YogIVMJNrYQr46wr
+Rs2jcBv1aiFjM21KTp1mMea4LBH+LyR9bXOiXESbYOystK4QW1kLJBZC6RN
ah2X2cJht1Jp5Kml8umlquFx/NRs/RKDUtd9raHrWu84oa7jatdw2Sq7c2Qe
3zly/6a8g6tokts6JRbKMr9+klZNGb9/ZKZocKx0ZIbYM1LSN102Tm3omSaT
OkrwjfmA2ODY13SVkTpKq9uKKhqulhLvxxELSypxpAZCXWtFVX1e91h1fSeu
tr20rb+qpbeioadskkoZnGtu7i/vmayZWusaXmys6y4ktOXjGu4vb3ygvOFq
Mfm+CowRSquai5u7SDXNFdUNJcTa/IqqqxVV1yqJBbiKa3r/qj2+KTBOUSXd
q7Iepnp4mT9AE82ubMxsMJfW1maX5ieoi9OM9flN+hJnc5lHpzFXlyAcoC1N
iNhUMWeNS18WsNbZGxt8FkvMY4t4bA6bzmSt0zZWVqlza9QVDpslkwqVCjH4
/wD+QNAmvUwmZOsVIgB/m1Zh18mtaqFDLwg6ZeD8x8ySk4Bu18TZUlH90mXe
0hBvY1FpVlu8DoPTptaq4hHvN1/6wntvf++Hb7363HPPOJ1OiwXcfisCfpPJ
YDDo7sq+YfkfbxCzrPizPxAN5vAfIDebg93Z3j1K7hzca8AIyP4U/iP9Z4Su
qPkveiZCe4T8ucnfnIjEvXWhKDQA8A9GttF8dDbzn4pvg7ccg7/CaQHGAeEB
6pHmA0oB5fT/H3n86dsffwI5/3dW8t546F78zz3MrVPLzVyj285lsQD8d/aO
Mfw/vdhOH57u3zrYP3nqkeNfffOz//bx+G8Wa/5zAv/Pc3X/aF369WP7//Dy
5//hpU/+X6HEt0Om28dY7ffZcSYN227mcP9oF5MqS23tppKpndgWtrAuFItm
OyxEYACYjwIxMIfHCxytM5kB/PlSqViu4AiEQAHDoyOUnu6GhgYCgVBXU0sk
VBMJZHwFsQpPKi0ux5WUlRaXVFRg0SuAP1AAuDHZDQfY+6fyPyV/YisuLPqj
BgCPrKSk6F4rLLhWVJhfgq0bLoBxQX4eeojDlUNogGYl8Jh8UTU8rK4mw813
dHT19vbPzS4JBVKhSCaVqRRKrUSp1ZpsBqtTrTNDCADgD+GAxxvyekKhYBzw
fyu5e+PGrZdf/vpbb7317rvvfOb5z8aTibPzGxAXJOI7yfgOhAAuhxPrjeJx
GDUKwH+32eCzWdxmo14uBegDYAfMd1s0TpMK9j67PhXzRUNOwE8s2RL2BOwG
n1WHJYiyyfntuC8atGEKQhE3VsO/Fz1I+iEQONuLnaeieyFXKuAAFjjcCsIT
dvx2GEfs+i2vFcZRhyFk1cJ+O+JLxQJwLXDpI17zdtR5tBfc3/Htwidv14FX
n9mCkNER85hPk6GzRBDwP+a1HKbCIZ/54mRnO+7x2jTpuA/MpBTpsUVesqjX
BfjvsRvtZuyNwBgoxm7Axja9NOjW243igEXiM4m2vFqPTuhQcS0ytla44TPJ
nHqxSkB36CR+qxrMquGa5Bsa4ZJexDIruUbVJo81JeZPcznDavXc5mY3jUlh
8nol2nGxckAs6mLQaleXCMurVfSN2sXVyvH54pkl/ORU9dhk7fRiW/cEuWOw
uK2/uGMQR2X3saUTfROVrf1XhZoxTClCQKCJSBxt95q4dXwFNzhV1NJ1tbG1
pLblSkP7lYauvJaeEmJTXkNPafMArq6H2DRQV0IuKKspBJ8fgBqr26nAYUWb
Vfk9I7WU4Wpc9Z+Vkf68rqO4rjO/fZjYO1XbPkyA17aOlLWNlvfMEIeW6tom
q0i9hSRKIbGjEFd/H6GloLGPUNdVTqjLK8Z/pL6juG+8tquf0DNI7h4gE8h5
AvscyzA+TK8ZY9ULbLNc/RxPs8ASzzLYi+sbM1iHd/oSmzrLWZ9nUudoqzN0
xppQgOk885nLZpVQwl2H41jZ/8Yqh0XbZKzxOQwhj8VhM7gcJotJY9KojPVV
NnMdKwFSY26/Xi0CEs+2hlHCN9bvMEXcNq8JQgBJwKaJmqU7TsVpQHHqEtzw
yeMaNndlXCLYUFuMjmBAZTCo9MrUXuStH3zj1z97781vvfzggw/abDaj0Wgy
WbQ6g9UGPwun3eHKFn86HB43mN39O/1/fzgEllV728FS0FjuPQ04/3t+e656
Eyk25GYzkThbLpeCEDVX3okE35CbnUsHoQHSdgMeyXV4BIsmUgD+YKgeNduD
LI5gEwkBAYA/9MiTjz31HGr+AnZHYD+rqIl01TBdhRuYtAIyeJizyxsP5aZ9
kc4/mudNH8K7gBAGWODGyTkwxcPZcqCbcARYAyjg4PLGyfH+N555+D+/9MRv
ktpfiMf+ab35Azrlw23z91989q++991XXv32m0/e+EXK/n8+d+NTO/G9yFYs
vJXZ2d/bPYhn0vHjPXD+UQiwk85s76XhfflCYZQIgjE4/8DLQNCA/0arzWCx
KjRqmUoJ6MgR8DdYzOU16szC/OTszMjISH9/f09PT3d3d2dnZ0tLS3Mz1lQF
67rYVF/fWIdJRNdhbcKqsdaLRHJdFRippgodIZKqidk/YH0Ya2vg36yuQ0VV
NYFIqiIQ8eWVpVlFFFwloQxfVY5JI1ZXgsFDNIY9jNETYFxNwpNrqmrrquvq
SfX1tWB1QFG15KbGtpbmDoD67u7ewcHh0dHxycnJ6enplaVVGo3O5wsFAhE4
/0IpYL9Ba7SY7S6by2uw2DUGMzj/WENS8P9dWH9q1AkUQsLtnfSTT33iu69+
58d/+6Nvf/ebRyf7ia3o+cXl8dFFJJzU6YA5tU6b0WU32YxYoxOnUQc/KI/F
GLRbox6732YEgwHgPPj5ezF/zGsD19ppwLpvh5ymgN0U8dqDLgs42EhZGpNu
SGAlnVjyfzd6Ca5KzIPVdu5G02H3YdyXCjvBtkL2TNKDTQ3HMSnp/Xg46XNA
RJCOeYIOczLo29+KJ/yusE0XtmnjPmwaej/gi3scwSD8Ng1bfucT6b3TeCCe
9OwfR3dS3q2II+GzPHrzMBay8YXrLMGq3iizGhVmhSTqclw/zBiNSo1OrNTy
7SYNqiTXSkUGhVTEXtdI2RGfKerUZqLOmEvn0AhcOpFNxTNKWRYFRyNh0RbH
GEsTWjHLphG5tFKbUqgVMLUigXiT6rSJdTq6SkNTazdYLAgBRoXScZlmVK4b
YAqaV1lNNG4HQ9y5wsH0/Jc2m6bXiLNU4vQyfpXRKFSNcORDc4ya/pnSFXYn
ld07Nt9Y3XSlb6R6mdbbPXrf0HRxz0ThIrd+TVI3uJrfPHTf0GL1wEx1+yCu
vquA2Hx/13hl7zQRaxnfX1He/OfE9msVjXnldVfLaq8Q6oswPYfK8gLc1eLK
BzoGSQ2U4pa+sr6Juu7RupFZSnMfGVdbeA1/P765oL6/pKb3Wv9K3Ry3d4Hf
P7fZPUpt7pjAt4yU9c3W9s81NQ/iIYIg1F1tpOAoIySgrYG5up4pEqnr6qq8
b5BG6l8jjtJrqeI+umx8hto9uUiZWxpmMBY4zCWs4e/GIm1hkjo/vrIwvroy
z2GtQTiwvjguYK1IuBsQFzBoSyzmuiib9lcpJTKpgMffBONwmbxNhoDDwur/
FWKbUe0Gl8eo0Crv5P8dZi2wudukNavEFrXIphMHrcqwWYwmf7eMXKt4A6hH
Ac/0+XzhmEyj0Zp0tx8+++D9V//+797/wStf29vbA/y32+0Wi81gNLvcXqAA
vcGEKv9zmX8k+wMQhK32ygo+32n1C6F0fDexvZ8D/98r1EHKD7kkPxrn0ukI
6nOCD6jcBQULufr23OIv1BEAwT4cx9agRbfCsVQ0gQUC4P9DPJKtRNoD5xmx
CbjumATQE0+jRipgSPkZKOCxx59+9LGnHnn0Ezlp5ZzBw5zd2xcedftCOs8o
HYRmAXLLcuGIL5ZInZxmLq4D/n/1sRs/f+zk1zHNPzlYv9Wv/B8W1q9uZV7/
4hdf+t5b3/jO6z/50ovv7AbfTAef24ruAHjAezs/304fRFN7qYM9gH0Af0B+
VEaLdPaSqd2svB62whol/+FzARZAen0agx4ogC8WsbgcoIA1+gZ1g7aysrK8
vLywsABYOjExMZ7dxsbGhoYGBgf7Bwb6+vt7e3u7e3oo3d1dFEpnZ3crWFd3
e9YwpSAIJTDJiC5AZkx9ra2tpbW1uaOzpbOrtb2juaGptrG5rqmlvrm1oaWt
EQwGYHAQ9q3tTdnOXdhxGHRS2uBVXZS27p6Ovn5K/0B3X18PXB324+OTExNT
09Ozc3MLi4uLcNtUKnV9fZ22tsFkbgqFYpFIIpOrxXIV4L9abwLYBwpwegNW
pwfAH5V+wQCVBGPgv3uQzhwB2n/5r//y3fff/tufffDlr/xFam8rsZV88NYj
u6kDt9tts5scFqPFqAFDEwGIAlwGnceqB88q4DT77EaHUQl+fsRtAdsOOcHf
Tgac2XSQG9z1eMAV9Tn8HvPuVjCTiuxEvdsR18FW8HgnvJ/A2sqcZxIXmcRR
InC6HTqIebeD9u2wYzts29/yZ5cAhE73tjKJ8Ole4nA74ndZvC5rZjfpdZmd
JkXQrtuFaCIeBMfeY1bBmcEX2I7a9/ymx06Tpxn/Q+ngC+fpF08ynz7YjZk1
JoOEJ2GqjVJw+0Vchl6nNNr0ENLobGqb02A1KV1WPdbPxYS9zbDHZlSJINCw
6sUek0wnYdo0gohLF3Xrwe3XS1kug8SqFfksKqtaCFGAhLFsVfA9ernXoPBj
whHysyOP2y1UqtdVGrpKtabRrAlkk3zZ4Kakg6fqB3hnSYfW+F00SSdV2DW1
UTe7Xr+w3jS1VLew1rbE6JIZlgWayb4pfN9U1cA0qWukorW/pJ6SV0+5Uln/
kfahwsFZwswGaXi1qG/pasfUA9Ob9cMr5OahIsoUoXGgqKY7r643v3W4orG/
jNRVXNOFa+itqqdUEJrzy8j3E+pLyM1EPBlb6tXRV9s5hPVz6RomN3SVN1Iq
cDUPkNrKy+sK2gZJlAkinA3OObBQ2zdf1zxc3jRUBlbdda2qLa++p6Kpv6pz
iNxIwaYS6jtL6rtLWgYq2kcqW4bKl6Sd07ymaU7jJKN+mt66stm/vD64uj66
yVkRCGjI/+dtLLJW51hr80zaAibvyV7bXF8At39jeRrrjk1bArefTl8WCJhi
ERdYgMlaX6UuMJjrm2y6iMeWifhSEVcuwbg7HsLm7lUyrk7F1yj4wAhAAQal
GD5Hh15mVgusWoFDw3MpWR4l0yqls9fm1taXFTqNOxD2BCNytc7jc3/xS8//
+IPXf/LuD77y+c95PB6TyZQNAcwA+9jiL6NZrdHZ3T74cXngVdnKT9TtFwEs
WtiL8B9+a9kKzMwfJu0R/uc0f3L5k3tlfxA7IPy/V+cfDqIkPzoPqvBHmX90
HFUEwaX9oTv1/3fk5rKLzhI7KRQswLUwSYes+D/q/3Kv8vOjd6OA2w89BlAP
g5zdvqvAjGYB7pQAZcEf4T8EAmAQEWCa/9n+vzCGuGA7s4et5D07Pz/a37Xq
tumTjzGHviIef5k79Ci1+8Vtz1df/MLffP+HL3/7zR/89V99cS/qm+rYNemO
js93jk/2T09TmcOd9MH+Pjj/+2j+Fy2sgDeVTAGenebW2f0BBTjMWdU+YAGI
BcRymUAi5onAbRaIRCI+n89iseh0OpPJZDAYGK7S1sDW16lra6tU6srq6vLK
ytLy8uL8whTYwuLM4tLs0tICHFnJbgsLc4vwx4W52dnpmdmJ+YVpeM7c/NTI
6MD4xDA6AoZJOIwPDY/0T0yOTE2Pzc5NIoNnwvOXV+YXl2bg/HBy+FrSNlap
a0twabgTFosNtrm5yWazORwOj8fj87lgUrFMKpWr1Vowg9EKsG+0OsAsDghI
g/CFxDSp/BEAfPgawFcCrQoEw2Z/js4Oj06e+9Qn3/vRuz/7xU/e++DNR594
aGtn+5GPP3mwf+50uiORkNOKUYDXifVDd5j1LpPeazVBCACBNvyyAC0dRjVW
SJ/NBcUDjsNUeDfuR9VBMb894LbuJsP7qXjAY4YfJgTmMj4DPGqIEUJOw3bQ
gS0li3nTMW8m4t4NOmCPTQokfLtRW9JvztYIYdJz4PNvx0KZnUQg4HA6jXa7
/uBgex9iCadxO+DaDbozW64Lv+XFveRL55nnU8EvbQdeinpeCjq+5bT9pUz2
NIvzlXjsaQgqHFqLVQt3b1EpNHKxTC5y+Z1mh0kg5igUAgAQQAwwk1YJ/r/L
rFWJ2Q6jPBGyidnLBgVbK2Wa1TzgpmQQSEMW8xmzC8TELoMsYFbZVUKzlGOS
sC0yrl6ylorqVNJZiXhGqaRa7SKdYdNs5YpVs3QeZXmzaYXdvM7vYchGGPLR
FUFX/1wlZbJsbLGhf6KmiYLrHiH1T9U2UAo7RivInVfbhnHtI2Xto8XTGw3j
NFLrWF7nBH5wvnZkgTzPqF/ikCeZZV2LV+fFTUPrpMaxaw2j13CtHyF23VfX
X0DuvkbsvFJSd395Qz65o7Khu7Kxt7Ki9r6KmjxM3rO6GKy+taqhvaq+o6K8
5oHS6o+SWwtaBvCtA9Xlddfqu8t7xom9E1U945iIUF1vWcNAWV1faQ2liNRZ
ROooqW7HEVvLgDLqOnA1bSU1naW1XbjqtgJiaz65q5iqaJsX1k+yqqYYZJqw
m8EbWl0bFAtWhMINNmsJPHxwvxnLM5tULP9DX5vj0hfZtHn6yoyARQXwF3Dp
LDqVyVjbWJ0XcuhyEQdwns9hMDdWuZsbAi6Tw9zgsugwkIt4WgUEblJM8EfO
N2pFQAFA5WadwqSV6+Rck4oPH5nPJPJquU4Zw6lgKrlU6vIUV8Rz+UMA195A
FH4+WzvJb77y0rtvf+/d11/93DPPYl6QzeZwOMD/N1tsgP8Wq93hdGe7/QbR
Twkia6zb793q+t/VH8a2Uax9b/3PveD/h6t3kW+PWgCgbE/O889N8ubWf+W6
uoPlIgLAfOTgoQVfWPlfIoWWA6OqVLDEzt4fxX+wp5/7LFAAmgvGxH/uSmve
UfK/t6tLFvlR5eedLFAW+ZEdnBwjOzo7PT4/A4Nx+vDg+gVA//n16zdunp3d
SMe/8cz5//vm5/6fVx758RfPP3NiffHJzDdeev6Vb7386ne+8cbXvvjz1//6
5adPwD/ch93R6cnR8dHRSQZ45ewMTnV4enJycf3sEiMXpHeH0eLddXaIFFBF
ELCA2x/IavT5IWqDcMBks+tMwAVGDUR8WgBPtVwul2Q3sVgsFAoVcimYXCYB
k0nFUolIIhaC8QVsZAIhRyjkg4lEGIMIBTwxDODvfK6AzxYJuWIRDwYoUAXj
8lhgELGyOQzwW7DQlb+JnUTEhT2YSMyTyoQSqQCN1Rq5VqdUKGRyuRRuUHd3
02Ob1mDQIbNbsW+mw+GCL6nbEwC3BADf4fHDlxC+0sFoAtwScPtzGiC5mjH4
nqQzx0ABlzdvfOOVr7//4Vs//um7X3/lK3uZ3Zs3Hn74oSfDIWw5mMNu9Trh
7GY7uP1WI+C/w6B1W3QmvQLAESgAzG3R+B2YIoTXovXadDBA6tBBryXst4Ht
70bT8FGEXRGvNbtY2AMxQtChh33cZwWQ34tiyZ/9qCfr/1vTMQgQ3Efb/rNM
LOoxAw57HXAqj88FPz1zIoG1jIfgYj+VxCZqfdatiON41/5CwvMZAffJxdmL
4e7bQ5QLcvV5Ce7G/Vcfx1XeriAeN7W8aDV/4Syd9Ns8HgugvUIuUklFOpFI
zeaYpVJ4X0GfPRH2+pxmoADguK0whCoewH+LTuRzaLRy9nbUmQwDSwjgiEHF
A9NJOTIuTStmGSVst06KIb+QKV6b1wpWXHqWw8iwGpkS0ZJAtMgRzKgNa1rj
otY0rzbNcqS9DFEPSzbAUY/SxL2jKzVjK41D80190w09k3Udo/juSULzYH7X
REnbSEHLyLX+xfIFbuMsp3ZBULckahhntAytkLuni2fp1VRB7SSzYpJbPSmo
6d8gjDJJ3cu41umS+uHC2oEifNf9XXMEEqWwsulaeUMesaUIIL26uYBQX0Bq
Li8o+SiOUFBOLKqqLesaamrorCR3FFHGSd0ztR3j5Mqm/GuEj9R05dd155Na
84AXmvoJhJYCcmdpx2gNuP2EppLK+hJicwW5pYzUXEJqw5Hby6qaCyvq88AI
TQWbunZtcHJd3iQyDChNM1LlLJs1vkmbFHAA3pdEbCpnY4m2MAmuPuA/l76K
hQOMJeHmmoTPYjOp4PwzaCts5jpzaY5PpwqZ6+LNDf7GOou6zGfQBMwNMZ+j
EAuQ+A/gvNdmsOpkcgETQjaHRQngD6Rg1MgsapFVw8VkP43MoJrul6x7ZEwR
c3F1dVahkvtC4e2dtMvtt9mdt25fvv32dz947/UfvvbqMw8/ZrfbHdnNZLIY
TRaU//d4/TZnwOEOubwA/vD7ioB5A3FwtuF3BzCbTftg+I9+dwDs99b85DL/
CNiRAXahbE/OEP6jrA7scySCXov8fGQo+Y+yQLlfN7AAEBNa/wV7GAMXwAB1
BEONBlD9Pyb7lm3+ggyTALpb/3M76/bfzuq//R7y5/D/jsjn+U3k5yMDwAfk
B4i+F/8zR4eHxwcwvn558xRbCbb70gsf//t3v/gPb336J9/5zF9dj37/OP6r
m6e/uXXzX5549N2L/V+/8PjXP30TWwF0iSlIn52dnN28eXBxuX98AmfLnvwc
xrv7Ryj9ldW+Ps5Z+vAI5YhQmRCKCOCzvrdHs8vlgo8YpfisVqvRaAR4NRgM
5rubKbsZ726Avch0Og0CZG12g5eYTPAq7ClGTCgQvisGo0lrMuvMFr3VZrTZ
TbCHMXCOTq/KHQSDZ6KHdofZ4bTAQ5vN4vN5/H6vy+WAO/T7/YDw8CV0Op2u
7AZuicfjAgsHI4FAKBSK+P3BUDgOaA+Y7w/HsNZCO3eCPvgq5tYD5goJook9
wP/Ts8uT0/Nnnnv2rR++/vNf/uRHP37705/91H7m+PHHnj06PE8mt8PBUMDv
dVotNvD8HVbAYQB/MLtF67IbACqdFqwWKO6z70Z92BSA3w4UAHSAJNecVpXL
po4GbYD88DQsUb8d3kv4wO3fjrgA+bdC9qTfug0sEHYlXMbdkG0/5tpPeCJu
jd+qBC4IufRwNsD5sM8V8sHbxgqN0mH3XsgT97oBiyMBy/6243NH/tvLkw+W
4x8vxn2mofZT5KpPlpS8WFr+PKH02cK8zxUVf6qg9FZh+bOray+moqmg2WxV
qLWA/3wNj2vmC+xiiVWtxGR/5Dy0gAjeY8CJrS+W8NaE7BWvXa1XchUiOp+1
BA9hDAgDLKCVcewGGSYNurFgknKscp5RzFQyl7V8ukXG8pvFBjnd51DYbUKT
lW6wrVrNS3Y7VSYf4Um6BYqeTUnH3AZ5ldMyzWgeXCS3jZaDY98+Vt48nDe8
Wk5TNPNMPWx9F1XWyDZQBNbBEVrZOAMvso/QtT3N43++KKjmGykiS/+atGV4
A99HrZgVNixIGhelTdO8ptbpclzLnzePl06xm0aotW2jWOP4loGqqpYCzFFv
rSytKijDX8VjNfz51fUVY3P9g7Nd7cOkpr6yqp78mr6yxqHqxmFix0R1TU8x
rv6+ItLHgBHquivqeyrJ7aVVzaU4ckFRVT6OVFpSdbWUmEdsLCE14wj1RbVt
FW19NS09JJVzVGTsFZsG+Oo+hX6Kwx2mU4c21yfEnDWFkCVir4Ofj7n6GysC
1rqEy+BsLGyuL7Dpq5uMVT5nQ8hjwMchE7F0Yr5eIlBwWRLWBm9jlU1dETI2
REy6kMOSi/hahcSoUWB+gs1gNyjA/7caZXq1CMAfQjmbXu7UCgMGwY5LduDm
n3sklx5lxq6Sc6kM5ir49bFYwucPa3Uml8f96c888+GHb/zsp2+//v8x9hbg
cZ1n2nC2bWIQD2jEzLZlyShbzCwNaRilYWaWRhoxM1pgtmMnjuMwNWmatkEn
TTeNw9s21Cbddne7/drddvs9Z177ZNZp/+/X9VzneufM6Mw7Z6T7fvj5yY9W
JufhXxtgAfBBpdIolPB/agQKgKPR4jTb3CisBkcQMB9Qsx3k80HgD4I8Nt9W
/nH8D535jmAfcQFqYoP3/MfHviMbATV5QNdEDn/kHUKtHtCzyARAHAFrOIPI
ArUJhfdaWN7Y2DoLyj82+evKNRQFvnj1IWwWQDD/B9V/YbNUQjA/tNUDSv5H
IWDk/EGysLI8t7SIkH9+OVjzuzA/OTsztDgztbYys7Y6PD42Mzn0zEM7n7/z
zB8+eu43P3n0/Y25DwzmX/OV/yHQ/qZb9zOl8ndr829dPbszNbO0vDG9shxs
QD81vro6t7y2tLa6vL62empzaW0de0es1yjW/A0YAWR6HuhmHgTYAXEBChPj
dgHuJhocHO7vD8AfAGAdLABIEZw6HC4kdrszVGxBsdocIBarHSxBzBg0W+GV
8IugMLvdbjj6sB9YO4PX7uv1+7y9HhBfn7evvxfOwBGeGhjE3hzW8II7ZwJ9
/f7+wMDw6MjI6PgA7GpgcGh4FPYJMjQ0Mow9MTY6OjoW/BkfnRgdHR8fn4Sn
RkYnAfNRXTma/oYq45B2gUpIwFBCf11wr2bnlqdnFhEFPPXM45/88oPPvvzk
1vvvzM8vjmE1FotjYxNup8sGnGMxmfU6jaIH/puwgSlauVohBs3fbtJ4rPph
n32s1znktgbsRlj32vSTAW+vTYu1PvNZQEDhR53isGYIAc+Ax4TmiI32Y02e
QfkH8J/wWYccWr9Z4TX2+CyKfpvCqGC7TdKASwevASsAm8nlsPq9rl6LbtCi
Clh1vTaj26QetSuvznkvtdeskslPEuMf3xPxOCHmUTLhRnTkk+TYBxOir5LC
HoslPBNDeiqSsh0ee+bEyWft5tVek1XOUSjZVrsKtESTEqsCUMqw4YA6FfbR
APx1ciHAO6j9El6bTsEza7HqLVD+ZSK6VS81aUQWncRqUnqdQBMyk1JkVYux
iDC7TS9m9rCoUmZbD6ud1VarlrLsFqnBQO9WVHcLymTiSrHghFB0hCc90MlJ
bWYmsaX7Gzg5daycCnr60daEo21xxzvJXGNxpzyrTpjYIEikKrKpipyTVEJR
bVglPZGpOFTLSa7jJXCM++A1NeyU/PLwgvKowmri0ebYqq7kVkkuXCrjeDQh
558ONSaVdCZmlezKPhaec5SUfSg2NnNPWgEhY19CUhYlPjk8LikCKCCGsoeU
HB6bgQ0IIKR/L+MoOb8sLaUoLv9EanF1Vv6JpNSDpNRCSlJedOo+UPIJ8dlR
sRmR8emEhAxKXCoF6xeXEJ6SFZuaTYGrJaUR0oMLtvRgJze3hZHF5Bcz2MfE
wgYxt5VHa2K21vFoLcHczhYhq4NDawXln9neCGdYsGa00TtbsDrfjiYRu1Mh
ZKq7eVqZQC7idPO7gCbYQBYcpojbJeaxwYiTiYHK4QUi+MsE/V8m7JJLOUDi
aEa8QS7y6cRjVsm0XbjkFay5xKecygEFn9leS2NRLQ6nv2/QYDDJ5Ur4n33y
qYffvfXqxx++9cKTj431DoIGiPQuYxD24T8d/uuBAhD4I/8PElRmBWqVzz+C
wBaOSP1G+v+3lX8UhEWuG5Twidz+iALQAhVPocSeUOJAaI/jOSzwVFL0RrAZ
tCvEQSgiHLQgsJaYOP4DvIfi/5WHHrn84MOwOH0BK/5CY79wwP9fXf2Dbh8U
uUAsMLOwjOM/gPPi6gogPwhwAQgQAWjso4vz0+vrs6vroJzPTY4+fnnr05tP
/fGDF76+9dzPr519e2Hxs+XTX21f/uz0uQ/Pbn/x2LWPXnzq9NLK3NzaxOLC
2OLk+Nri/KnNUxs7q6c2VjbWAf/BLoANBGc+nl1eOxN0B2HthhD+AxHMLgL7
LAdNhnnUhg4WyDQAUpiaxBpMwBEtxsCGGp4YhhsLXPn3BL5W5EO7S/oHhsGE
BAQeHhkD3IYLj40H1xPjY1OTYPggb9gkVrk2PT49hc4AJ4LgjjJgSYDi2bkF
OC4srgIyz84tBb30CzPTtwVgGZPZeawn9hyYRIsLC0vLy6twZmYWi7DAzQ82
XF1AbcBHsJzZRTRRGgQLoAT/ThZXtpaXt4AC1ta3QK48cPWdd9/+tz/89jdf
f/HSSz+Gt4BrTk5O9nqxcuBer8/rxBLijRqFzah2mLU+pznQ6wSQdOhV/QD7
LkufUTNg0Y947UiGPObFiYHRPvvsqK/PocX7hQY7yNlA+Qf8B0MAnh3ttU75
HdN+27BTF7Cpx3vNIF6z3O9QDrjUVg3fY+4GFsAyOW0Gl8HoMapdRkmfxzDQ
Z/cblFf6rPcrWFtpSVfi4p4gkZ+MJ1+jRN5P2HM/KeJibOQTyYk3kinXE8lX
o8NvEEiPkpK29pIupuQ9ppE/O9U/5lKZHd3iHgwuND1CKQ8bFzvod0wG202A
LQNbHfAaHaZuo1Kg6WYbFHy/Uzc+4Ah4jE6jDE4qlUKVStQtYSq62QoRA1RK
bnu1nNtuUggVXBq3rUHFY5vkPSoxR6vqkkjquIxSNr1MKm6QdJezJfs6+cld
PTmM7nye4aDUfoxjOtRlLGLoi5p7cniWY1WcpLyae4+2x7T2ZNdyE7NP3JNb
8p1Wbg5bfqSiLfFwY3hbd0a9MLWgOiL98J79paTCk4SazszK9oSi6r25x3cn
FNxXUBpfzsguocamHro3r4SYdjAawD82c1dSTlhidgTo6inpkSmZUfuLk1Nz
CZGU7xBT9+QfT8nHqr3ic4sSUwpis4sTs4opmUWxmQcpafvj9h1PBUk/QE7K
jgYLIiGDHEUJjyRHkuOw/v9xidEJSTGk2DAQCiWCSNzTSs2rb8lg8o7wRKVC
ST2P3SDmYHo7vbmms6GS1d5Ab61tq6+kNtcC+AMLYDW/rXWtTbVtrZjnp62p
ktFSLWW3C7hUEZ/OZXWCUcBidfB4dDDWzKCLSIRSATb/RdhFBwYJXqceCEUu
4UkFHHhK0y02KyReNX/UwJu18qesXWMq2piMZWJT6e2NAnm309dvt/kA/AHq
QVV8/eYPP/jw5ofvv3HjyiWvyQa2tjH4Y7HYkOYP+A+CwB81WIYj3vYN0NUf
GO/tH0Xh1yAjjOCR2W/jP3Lao6RNlPyJLAI0BRJBK2rpgF6DGvijcACe9o/r
/HiPOHQSbQkZI7BPMFU8vUODI3CRKZRH+u38n9C2b2iW4u30ntVvZH5lA5fQ
nm9owhcSQObl9Y3F1TUAZDiCIFiem11aXTk1B2QxNbs+P/vYpc1fvvH0f//i
5d988PTN5x949sb17//gx0+//MqLN199+Ufff+sHT79x8/szSwsLq1uLi8vz
c1MroPYvrW+vbgObAKesbW6tbe7Au6+sn17fPLe4sgNn4H0RC6DoADyEk2Am
wB7ml4GblhAL3OaCyfnZmaW52eXpKWwNx8mJuZHhydDoTKgMjcIdngmt2kDa
NaLy2zNu5peCoZBFRDqwgG3ABmAn6J7ANtDG4C7B3tBxY3tn68xZNOYYG3Z/
6vTtyAvc2KX1leVTuMAdwGVxHpuPs7a2gbVxnlsC/J9bgvc6hbVaWl6DbWDB
kTu1hHCjYId3pgutLS1tzgSnKmzvnDt95txzzz/70b+8B/j/ySefbKxvg2Uy
Ozs9FBgO9A8CBQD+93mcPqcVdH6rQWXTK/uc5n6nZcBh8eiVPr3KrZF71fIh
p3lh2D/ucwx7LbPDvnG/fXrQrZNxXUYVGAVgwAU7RWDIPznkmZ/onwg4hzwm
zPPfByaAGUyAiT7LpN/ca1UG3Joxn27ALu+3yWwqnkMj6reovToj/DurVawe
DUej794Y7H3eZ5s/mHU1ivgkkQKa/w1y5DXS3kcJEdfDw56gUB4gxj6amPxA
LPnh+NirMTEX90RfiYjbuidyMi7xHL1jx6MZcCkdVplN291rMbiMWAmAWi4A
XBnxuy3anoDX7LIozFqhjE/Xy/gOPfZKswrrJ9bvNPismh45DzRHmYzTLWKA
gWBQcFUiuluP1QXwaY0t5UfpdXVyFt+m0QLuCXmN3YK2bjFVqaCL5bX1nYkV
HVFtojSB4UiPu4ihTe8y5sj7S0u6iCe6EkoZqUUN5OzysEp2Zi0v62gLoYaR
XNpMamFlVbUlFZeRiqujS6mUoubovKrog9WJ+UejTtYkltclFpbcd6Ihpqg8
qqCEnFEcfaw58UD9npSi3elFUUkF0fE54XlH4/cfp+QUE1PzI2Pj76Mk3Lu/
OLHgUGLmAXJ2cfy+ExkZBxPz9sVm5pDzD6Rk58flHozLPkBOyAgjJWNe/cTc
KBAc/2PioqPJUWRKOGB+bFxEYmJMYiKRQoogxewlE8LqmvPbqYfbOo41Nx1u
bixpaS2n05uEIhab2Uptr2tuKK+rLqmvKQUo5nV1chjt1OZqzATobLwdAu5o
gGOPgMmgNgMvgF0g4NJlUp5G2a3oEcFRKe2RiUQysUDCZ/OZHRI2VSNhG6Qc
m16OzX/swZp4G1Uim0pg62H0qTk+WZtT0OwU0LoaKoFiNEYtGNt2k61HqTKY
9BfvP/3Ou698+NGb77z92plTpzwmFxrsjiKGerNFZzLDAh4i/He4+3DlH3Ot
3+nDgDptwkMAEJSZE5rwHwodoUSAhwDwnp94SideMgBnEJsgjy7ezBPhP7II
0B6Cyf+B0ckZFAf0+gMo88c/OATHoTFQSkHBXAf8RM0/d85ewqqALz+A2v7D
w+0zF+EpNOoFNXZAXICivWiOJEDN8vomqhHGiGBlHeEt6Odrm6eQ5wfUfjAH
kAmwsrI2Nze3ubG1urq+s7354PlTH7/++H//y4v//s4P33jx2kNPXnrohSef
fe3mD2++/dIrP3rpB0+++daL59bX1iaX11a3xpfgNxe2dja2tnYARdEbAWxu
bJ9Z38KmDAd5ZxsTfBIZ9nAz6Ca6PYMSdgiC2y/BntLreKkFUpLhK0DPwhl0
t9FEHgT1+IxmxN0oWI9StlAqFxqLgw/uRB324A7fjqfsnEcLOMIdhvuMJizD
Gp1Br8RbreKC5nWiKDyyy1BrptDuTHhFHmq+imAfFnCE7wjFldB5fM/IdoNn
73/w+ts/f+c3X//6q6+/ePmVl0ZHh6cmx6eWl0anJy0W06DfN9LnHfTY/Q6z
x6wJOO19VmOvSROw6kbdpiGHftCmH/NaZ/u9I07LlN8dsBtHfQ63QTXosgTc
Fo9FCZrz5KCr36UHAdifHvaM+m1+LCisA4V/ZcQ9YlPM9OpH3OpJv3HEpQdG
WBpxzw/bB51KFA4IuAy9Y85+i9Gr1VlNaodTfiNgWz1W9NDu+B9+j/jEnr1n
Yu47R455aU/CI9+NeJGY8HwY5XpCzurRPED+yyTCRn76U61t1wzyh026yycq
l0+cvGBSDbmVRoPArZJMOIy9boPdivlzHBblSMA54DGZNCIgLyxvXC11qMRK
IRM0ebtBAZBiVPJMKr7TrgK+kHJZKpFAyu4AO6Xfpe3mdSq6WT1CGlCGXMCW
slkSVhfmTephShQtHFGdsKeZJSxtZ+W2s9LpvHyxoowlOtGCuXRiGqQph9pj
C2oij7QSG/iZubV7DjZFtklzjrdGF9eEFdVEH66L219BOlZLPtFIqqIlHq6L
LmtLLm9JLTgaVkfNOFxLyj2+92gNpawpraiMlHlo1/HWhOImUnLh3rj8e2Nz
v5tSuGtfGaGwKu5ARRIlNyIm9d743EhyekRiJiktLz45hxyM4WLT3rMOJKTk
RZNT70vfF328JiOnOCpt3574vLDE/OiEXGJcVnR8dkxCDiE2PSY6ISqKsjc6
NhwbDRAdFksmksnEaAI2C6a6vqCTcVIgahIKmnjsJj63XcijcbmdAP7BUb+V
nW1Y2iezsxnN9uqiNYl4NDGfzma0cJit3K42Hqsd6w7BaKN1NLKZ7Tw2Vchj
iPgsHpsORxGHJ2Szu4U8hVSoEHPVEi5YXlaF0GnsNqgESgkHuAMYwaXiu2UM
t6TNJWmy81t0rGZqbWlnR4vWbLS53BqVFvDf4rQ+9uSDt95/HfT/N974Eaib
TpMTjffFYR8EWABIATAfKMBi94BSjaXWBAO+uM8H8B9OInBGLpq7/P94zg9e
+YsjP94/AW/7j+gDrxdAsHNXTyF4L/R2KASAcn5AAiPjWBmCPxDskDaG8j99
/QOYW3gKFEbQQjfx/s+AQqD8Y56fsxcRBIEJgDd5w7tAIIS5PfwliKu4Uyho
AqyDANoD+CP/BgisUQh4YXF5dnYW9NXFpZX19fUL20vvvXLjT5+88Jd/efXj
H177yfXTbz5z44OXX/rkJz/66PtP3bp++ZMXH33i/PbpDWzQwNz62szaHCj7
OztngF+Cshki28BlmNweUnM2FP8RLwBHwOcFCZ1ZgxgNr7lDwI74FzniUKMk
+DrgAyIbDf+yEImj3neoFRKiRbxWGhZYhD3YWxsVViC0R7Af2m31dtlFsP7i
rlfigvMCIhEQfI4zErxTExq+hpgafXEoiAMP0d8Y+r6Qawj2CX8A5y5deeGl
H3712998+etPv/jyV5cuXRgfGxkNxtkHBwcHen2j/l6rWukx6yxqmUOnsapk
bp0C8H/EZZzstY37bH6LBvT/YZdlNuCbGvBOB3xDXtuY3zXa55wacgPmY9Fe
jzGY3m8e67cvTPinJwbAEJgcsC8OOqY8uhmfYdSpmhu0jrsMs37LoF01M2D2
GsVDLo3b2GNSCPx+62S/p99g8OsUp+cGHmzvPLsr/uG9KRfD4h+JJJ/PTpk8
vv+BluYHGO3bxw6fKzr6+tTUu6fmnxSz12Io18qrP7l6+tXTSzdXF96fmlio
qT1n0AxaZV670q4UjXstsJOhfrvbrulzYm0ihv1Wn00t4bRrutnTfku/TeUK
1gJ4bCq7scdp7jEo2T6PXqsUaXskGokI8N+pl5rVApWkSy5l6RQ8YD2gAI2U
pxAyld2dfG6V0tAmUTYxOeVdvJMc8bH6lvRORhFXUC2S1YjVR0SWAw2CpGPt
lKL6iHZpTjM/vbUnt5RKLqfFFlXvbeJmNvFyDlRGHWmMP15POtlKbhVmHm8B
MA8vb0+poaY2MNNrGEnH6wnlzYlldYlgDhypJFd3pB2uJaQfui+3JLKoKv5A
BamwklhcnZBaGEHK2JN+gJJVlBSXHh2fTsjcn5heQE47QMw5Gne4JruwPC3r
MImY8d2UA+FH69PzT5AzDkUWlKTkHUvNLkpN25eQnE8GCiAlRUTGhgH+x1Ai
ogjYdAsyiUAiR0fFhMNDOruayqjicBt7JDQgRAm3k89uA5DvaKlsrD3Z0lAO
4A+CJv/CkdpWC88yqY2waG+uAhbgszswCujqoHc2MWktQASwZjM7UYCgRygE
/BdxWT0inkzIlvGZwNFaEcugBMLtkouYcPMtcqFTznVJaTZunVPa7JB2yOgN
1MYqvpBn87iMVptMpuhWKQDCf/Ta8+9//NZ7H9x88cWnhwKDFpMdwT4cNQYj
6vkJgiUTOn1o5gssAO0B+RECoxRrRAHoDIrP4omagM+hnvy7kn/wFgqh+I+8
/chSQGYCmvCFp/2gNdoDyvFDYWis+nhwBKUCgqDop6fPj+X/j04g/AdIDMV/
UP63z13a2Dl31wx3fLYLUvVRk09sHXQ1IFcVZiNg2jXyvSyizB9YLK2tonBw
MCNoYXZuYWl5dXZxaWFpcWN15u0fXvvPj5//n1s/+Pzcwj9bNZ9YTV8G+j8b
DHza53nfqP7N9tyLZ5eBfBYB3te3FldXljZWNk5t3cF/zMoIytYd+Qb/by8w
UthC1ICzAAJJxGV4FAPwEJ0J7WKBDR0IxkoQTqK4DD6mGX1fuE30jVl0h1/w
2WqotxJqrIGwHfVcgjNIcBa4C/yxWuygIYbacaCH6Jp4a1b0DeINutF5BPuI
leBz4XllqOk3sm5w4sN4anPnzIWL775364svPvvd77968803APunF+HrW+/t
9Q/6+4f6+gbcTr/TNuB29DtsPqvBa9L0mlR9JqXPqATwH/ZaxnqdoPZjsWC3
ZW60H+ux4zDadXK/XTvoNnrNynG/fSrgQkn+cyM+wH+A3LE+22SvacKlm+01
zvWZFvotiwPOIYtiwCyb9OrgqVG3bsRjcKglk1bM/w8a+JLTfFmlOB2b84Pj
jW/YHI/bjav5eR8pVL9cXfrl5Yu3Tq2tl9W9NDT81IWL1/T2Tx9+8EJd+9n8
si92zi3Vt84dLn/nwqmVjs5LRsOQSQn8NY61s9bB3panBmeGfbMjvQDdw70W
rOLYpFCLu8SMen0PG8P2bpZc2mU2iH0Oldcu75F2gdbazWOrRTw+rUlAb+DT
GkVdbYBanc3lYm6rprtLwGxWSmk8Vnl3dxWdc4jJK1Go2wTiutbWg12Mk2pF
l7qbo9LQuZIjdEl2Iyv1ZCslv+SeegZZYTtGlWVXMmJrmAknW0m1zJRqZnJe
+b1F9eEHq/a2CNKo8qySjkggiDZxXkVnfEkzoZYVW8+Mb2FlldbFHy4lFR6L
OFwWc6g0PPvo947UUWpoOYXlhANlMUUVCan7o0F7zz6Qkp6fQE6MiE2KTM4h
Yg2iiwn7yuIKKuNSj0TklpFzSkl5ZZT88rikoojYgl1JedHBnE8CSHxGDDkl
IiY+PCo2MoocBvo/wn8iKYpAjIyKxsaEtXZWtbRVdDEaugVUuC3M1hpa0KVP
a6miNleyqQ1CVgco+YD5wALtTTVN9WVtzVXtLdVMWlMXvVnApfI5nWIBQy7h
CTl0DqMdhE1vY3S0tDXWttRXSwVcPoshYDOwVC4Rp5tLl/FoOjFbIe3Qyrs0
PVyTUuJQ9zjl/D4g655On6LDq+6SMJuAR7RGg394WG+1diuUMo1idmnm7Xde
/fDjn956/41HHr3m8XiMBito/n8X/01WF8r5QSEA5OdHOIxy/u8EW8e/3bTt
2yGAUE8yEtz/g08zQfYCPuERdwrhtkCo/o8yf2AnoOf3BYaDhWnDXn+/u7dv
aGwcBAsLgjK+urG+dRqUSbz/P1L+17Zut/dHKuVdPZ+RcovwEzmZv6lcwxzO
y4DtIMGZj0uLqwDb20AKuO8dueVnl1ax4b4LE698/8q/ffzCX9558jcjjk/K
T/7bieN/am38Q1fnH7nMr9oa/tRv+fDB9cXtuaXtnc3VrfX1U8vbp7A5MuvY
4Pf1rc1TO9sgG9tbKOJwRxM+d0cw1xBsIBT8MRPgTi0D7rlCTY3umiaMPCRw
txGKoiMq0EYKPzbgMvjroZyIYzI6IgpA49VQYR3u9vlH+v+38R+NYECwj5Ky
UGs+9F5ogttdc3nQp0M4DxtDOgYa+gzPwnk4gz41igRhZtHaqeee//7nn3/6
u9/99vMvfvn4Yw8Pj08A205Pz44Ojw31D0yNjAz2eQMeF7BAn82CpeK4TZjm
b9e5DHKfVTfgMgPyg8LfZzeM9DpgPdRrxyYFB1yjvdaAywDID2iP9Xke8sDJ
8VHvSDBGMDvgWAo4VgLOJaADm3rGYwwYelaGHMNW+ULAPmLXzg64AjbtkE4D
7+Ly6ecHLC+aTeezil+fnfj+pfX3ttd+olZezi96lCv54NGH1po71+5J+dcz
V3+i6pu8J+29iblHbfaJ1OJ3l9dXfebTfZZ3NpdXqhsu6wyDRlXAqJ4b8Hjd
eotKND0IxogL9aaDDY/1WQbdepeh267vtmjEAP4qKdvr1NlMcoNGrOhmS4V0
rUzUw2U3lZ+oLy3mdNRoJCytlCPlUSW8jh5hu17Jhd9SSOhSQZOiu1EgrlJq
2gWCOh6nlk2rlgup2m4+WFKcrgaBsEKqqmhj7qtqTmntSusSZyjNR8rbI2sZ
5BZBRlk7Je/Ed0taiRWMuJPU6EN1e5sEyWWMCKomk2UsLKdTihvCyqjEks5d
dGVOpyR//4mwjAPfLTwWdeBo+JFywr7jew5XkKrbcwuOEfKPxiTn7U7PJ2UV
JMWlECJJu7G5YKlRidkR6YXRhRUJh+uT0w7tjt/33QOV8YWVidnHSGlFxNSD
pNicsLj0cGJSGGA+KSmKnBxJiN8TRd4TTY4MJ+yOJmKjIUGwyV+kyBhCOBwr
K4+2NJVR26oB+btaa+hNlbTGClZbLTxktdfx6c08RnNXRwO9A9P8m+vLOlqq
WfRmeAiavwCQn08HdoAjlgXKYwIFoEHwgP/MzlY2vYPe3gJHEbdLxGXQW2tr
Tx6uPVFErS3tYtYATWtlPKNCbJUJHTKOU8rQM2rcPa12BY3LqOcLWADjvYFh
ld7UrVJpLVr453vn1hsffvjWO++8dvHCaZfLpTdYUJPnUP8PCNZbzOZGGfVY
a80g0qLsyjtdF4aQTwbp+d9Gfhz2cQkdYoWcDKFtP0NbAKGT+JAX1P8BsQ/y
/yNPFOr/CXo+8v84PL0A/qg2GZAZ8H9qbhHH/9vO/4u3nT9o4GMo/t9V/IXr
tyjCiIARU5jnlxC8T83Nj01NB2c+rgAy4zk5iBEwB9HqBuD//MLEi09f+t3H
L/75w6e/HDD8uqToLyX7/9Ze9hd23d/YLX9sqfidhPr7x08v7kwubJ7aAHNh
dX15eysYS10D5R9gf/P0DsjGNqbkg2FwZ0Ll+TtydmP7DDwbZAFMbhPB/2Y0
9BD32KO+prDAe3HgNc7ItY5gE70S/WJoT7xQIkCAjI9XxvX/u/D/dsH1uct3
mQNIEGXAFXBqAEGhBJxfQo01FCBAwQJk0QQncm7gdeWwQD4iFOlAnxELVaxv
Xn3g2s9+9rM//OHfv/jyVx+8/87S0tLo6PjkBHD50oA/EOjz+1zOQK9nwOfG
sjEdWE6O16zqtWqwTstmjcusdls0gPy9Nj2o/TatDCgAuGB5zD/sMg45DYMO
PSxGPebJPvtswD0ScGBFVS7DkEO/POSZ99sX+qwg027DsEU26dIMGKUTHv2o
Qzdk1Xp1cotFNeQF6tH09aoecOjOlVS8en51Vdlzqrr6Ssnxy+Hxp/MOffj4
1eXWlnP3JH9yavMppXojKuNFg+FH8F8Sl3drbunHD+3cWl94VaFazjxwUdI9
47PAZb06pc2i6LNpA3Y92DL9Vu2QxwTI79RL1RKaWcXVyYVOk8qml5vUUodR
rcA6zIvVMkmw2pSn65Z0s2lSZquM06bv4SoFWKWAhNemkFDBCoBfAdW0R8DU
yrkaJctiFEmEbSxqDbujXsRsFdCbB5wGoMhuSatC0cJgneBLy9XmCpOnQm48
fLJlT6c0ky4rAOTPL7u3WZTd3pMNOv+RhvDC2u+09SQq+o9T1bmHWiKPtsQ0
CTOO06OqeIn7avamHv5O1tE9BysomQfDTtSmlVQlphXszj1Eytgfk3eIEpex
Jz4tOjmNnJRJJCbsTkiJyMon5hXH7j8ZX1gRv78idn8JKbMwvPBEfOGJxLxD
8Sm5hIx9cdmFyUnZJEpyDCkBGxBPTowixO6OIuyJJkSERe7ClH9M9mCDYMiY
xMUTsaHtrTXUxgpqQzmruZrZWMloCOI/aPgtGCl0NpQ3Vh1rrStra8I8QvBi
AHzA//bmKjAKwIwCOsC4gE1Do8FA/5cKWN1CLhr1KBVwYAHWgULKl4tYQmY7
3E85h6rsYWtkHLWYoRPRTOJOm7DdwW8xMaotvBolp57WWSOQ8m0uL8B4j1ID
+O/qdTz93OO3bt388L233nj1h2uri06nExv1GPT/Awvchf942ifu/Mcz/1H5
LcJhXDO/K/kHx3/kTP62oIHv3w4co6IwdAaOeOcH/C1wzz/K//QPjiDwx4YR
BHujoTR4FP8F7R3AEKETogCU/IMPfMSb/+MD3/E570jvBfBfWFlHhWAoBRRl
tgDOY9k+S8uA9sEsTSz/B9HB8gr2pkvrWzOLK/CqZ26c+e2HL/73u0984ZJ/
fXz/nyoP/Cfj5B8EdX/qqvtTS+WXzIb/8zioskMTizMbS2sbGxvzWNrnNmj+
oNWHCIbtAPXBbV8IyqXg8dypnbMg22cvbJ05D7J5+hwI/umQrx6hJXwi+BRo
IDIAKVKMb3/MIEiiIDhCVORXvysa8k3cOeiTxydm3o6tBPEfYTt2q4Pgjzdc
DQX8uxxBiCngCmgoA2JqZLIh5L/L7YO+I/QREB+hLSGSQq1Z0ctQXigKBCAv
0Lnzl59//ge//vUXv/nq8y8+/8XD16+NjY2NjIytr205HV5/b1+fx93vczut
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
cmT4xv59N5TSESlHJ+pymbVWg0Yu4YEyb1SIVWKOSsySsDtUUraY02HWSODI
bKhVd3V4ZGyvlj8zilUugJ4/6LcOjTk9FvmQSb416g44RGYjy+6QabVien25
iNnaUVeqFneZ5dzO6iMyeoO8s0ZI73CZlbTOmtb2SiqzgcFu6qTDorSl60Bj
ey6Xf4QtLGaID7RL8ur5iaXUqDpRaptqXxknubCZsK8hJrs87CQ1/VA9Jfco
IWX/nv0nKQl596bti0jLiwGoT0ojgPodlxIdl0mITLiPkhKekUXJyE6JoRCj
kr5T0phTy9ufVb3rYHtMm7KonJmDTQc4Enm4JWlfdXRmSUR8wd7d8fdkHNlb
2kHJOPZPJ9qTgC8oObsiE76HirxiE0nxqTFR5F2RpPui4/bEJOyhZMSkFsSD
JGeSKclgGgAXEAD/ifDi+MjwqO+BJt9YdRKOnU01bfWVsGipLW+oPNFaUwos
gIWGO2rBBABbSchs51JbGW019FasOoBNbejqqEPCYzRL2R08aqOETe0RMIEC
BFw6j8vsYlFB4ZcLGFopWyXpUko4ZpXYqRa5VRyvhtWrpM9YeHP6znl987S2
KdDT6OTUdTVVSoU8wEO7b0ipMas1gPKmM5fOvf/+zV9+/M7PX3/18tmzbrdb
pTepDWad2abWGHV6C5gAuPKPdfv39KGen6j4F2E+cvWEVniFNvZHFADnQzM/
Yb2wuIY1w7mD/9NBjxAwQmjlVyiVoBa+6Fnk5wlt6otej7uAcEpC9WgDw2Mj
E9OoMyS8O4pmIv0fuYAA+fHOzwigcHjEi4zu8v+EZlGGyp3Ee5RyuYWCAkEK
2FxYW1nHGuCsr6yfXpxaXJ4fufnc1S9XA7+uPfrXozm/qzn0dVPFH7nUX/ns
H15/6EcvP/fqmy8//vzTWxcvbOycXV3bPHv2/Ar8bKzj+P+/KeCbZHh0Ejlh
cA0fJzL0GvQB7+Is5CFBDRbw8mfkSMfLBEJTPVEUGCcIFHLFUzHxzBzcXYZ8
RAjn0T7xBhF4FUBoLhCSu/AfmTB/F/zRO8JbIxMAxXxRCRg2fzNYXYJCGKED
2qZmV0DAClhd3VlZPTW/sHT9xsOff/GLf/+Prz797KNnnn3C5+vzeQe2t0+P
j4+7vQ6vz+FzW4YHQA3C+iRjg4ANcpdR4zFr+uyG4AR25WSfHaA+YNMOAFo6
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
L5PyCFTn0ssErGqw7eUCRlujWFsvqGdRpIwqWAJqKYdin5XAocKCDbemVFxL
gT2fXt4s5esbZeZmmaFBqBWzm/kUVR3F1FCr4pS2snKtvHwrJ1vLyhNRioQ8
frPOCuZ9vbxR0dSo0aluuf38668//9brLzz1+EMbqwtatUaj1uvaTBq9QWPQ
turghA4JfoIXYFd+s6Jlau8wWrpQRSUALwJ/nALAyVlc7Q8LqTTg6V1XxH/s
Ex7Rf0Cc8EXVoTjm70gBWEQOt3ch2/4/xd9QLhhuomtQqRLCfzgJLzGP5pLv
nkDiD7DAqjxtVxhDRSY4MI5jCFjZwHE/t7SKFP4R8GLw//d0qs0dQiDaTgFE
U8AKQN/KwtrKCpxfI/B/fW1ldWn6/ofPfXnpz4D/n7z24F9v33l/ovez6Ykv
b7npr3956uKLz118/ZW3n3z+pVvvPbO2u7y2v7Ry6tfiP2gKGPI4iNEG9kQA
Asb/L/F/BI/o8+LCHtRFhce+IKbGZI3aKFAtJRYFRU9lh/11u7SyfQjX2ib8
uVAqxJ4i37DT1j7Cf1SMijYomIMpYJWYIHx6Z/+KNMSVRLC9sW7/1Mnt/eN2
BiRmHOD4DzwDCmShDfIgENPhhAXyOgln0F7jin+B6N4rw27mUeBrdXvn+Nlz
J9955+UPP7z00ftv/em+26emxwaHif8Cqxv7C4trOq1Rp9P3dveMjgx1dbb3
99nazdoOg6qjrYUI75g0gP+GFjlgOGD+UJcJ8ByOwAVwV49ZO9bbPtABRKCf
Hrb1mNX9nW1jvZbxXku3UQUG/0iXmZgjY9WBwT872DXRbZ0d7B7tNPQZVQOm
li6NbLijddDcPGRpGe3S9Xeo9a3iHlPz3sLYs/ff9fwjd6/N9htbJXqVzKIj
RhUMdmg6dI3wzBa1QqcUAhGACwAUAPgPC3wBi1puUsmAHeAuU5NEQC0RVRU3
1tFErPJ6RqWCXtnKqW6j5pvz4mdzg3eqIk9Uh/1BnLZeGbzNjr2poeDmhryz
KoEkyltdnsXMSqirKmJVEZMNC0symWVpInqBnFEqrMjV8uhKZrWEUsouzJLS
C+po6fXCLLEoUdaQXCuOrGIHFlC8IzM8g5JcSJFOvlGuxLBd/8N+Qa4BQW6k
gKPOPgfcgp09g92dPY8cdr7e1eOgu++ByITAoAgvT38nJ/dr/MM9AiNIwAXe
ZNfACB+fYA80t8st4Aj4CP5RHuQ4L9jAc7r5XB8Y4koOdfH2uy44wiU5g5ye
FeoXeNDd+3+i4knp+eFltJTU/JCIJE+PoN+FxLkT/V/hHsAC3mTC0fAN8QwJ
9fT3d/H1dSF5u3j7uHp5OZFIh4PIbgpmmZiSx8hP5JVlSOmFgsp8AH9+RSG/
uohZnMOsyAcMBzxnVxfxakpF9AqgWoWALmZUcCryBZRiEa1MRC+Xc6gCejlc
AEdJLQU8gnoeDRZsdEoRgL9FKTbW80wyjl7CUAspsPQSuo5b2FGX3yMq0nOL
+JTi+vp6rbkLIF0sldQ3ynv6uh548MLrr734+kvPP3zh7mOjI2qVpk13Jf6j
0hKyzxotMeodKT8g/Te4SYC/tR0QFVv7CG8x+KM90uR0DPg7hnFw/hexADIm
HXnBsV/AEf+xyD8eN4Pq/x0rRZFXgqXn0Dhg5AIg7oCnWrDHojf3TqK2L1hg
+Z85exMeUIiDIbhq8Vfqf4hpL2gUL1j1BM5fqRHdJ8qBruK//ZpNQrRzeZUY
B7y6vLi5vbC6ifB/af7YhbvOfvry4z9ceurHNx7+9uzkZ0rKN/Kaf05Yfzy1
+9VNp744d/LLne13NtduWpoGkF/eOfPr+d8d5A5s7e3bbePTgIr/h/2P4iS4
YQrHf5BsJrLGUS8YAnZU9omcODRL0TFm8osmaHsREeAt+AIEF9iLo9ZRHdT0
/Nz88pJdv24bSdghqMcFnFihDmlEbO8R4wzgSBSCnj5n17Let1v+4BIR0xDg
I4MXgHwE3PyFOQX5FDivjfIUjvF/xFDIRMFZACI5tbAyPrkwODIDRv7m5uZT
Tz368QeXYL32xlNbuyv9g33mDhtcsLt3amh4XKVSaTS6zs5Oo1Hf1WnpajcO
91iGbeZ2rdKiIZqCYfW3621GNZoOCQs26Axc1t8OfgH4C+2A/NOj3XNj8BPX
j3abwNSf6O0Avuhtbxswq8eBOMzaqR7riLWt39jcrZN3asT97QQL2NTSQWsT
Kg3tNcj3pvueufXUpYfuePDc6my3WiWi91s1NkuzQS3qblNZNQ2NInazhNOh
UxIpAF2DSs5RCpmt9TxDs0TbUAdHpFbawKPJGCUSVimfWiihFitY1U0CqopX
qazO6i9NuEFJOSfIPVebdZydfVZScUZWcWtT9bqslhnkWpcSKslP4eWmMAoy
amvKSkpz89KiM+JCGAVp2jqmklnJyk8rjA+l5iS1yMtr6UlMWgyrNpbKicyj
+OTR/VMrPaIy3GNz/ILivfyivMixfsHRvuRIz8BQQmbHPdDZyfuQk7eTq5eL
q5uTl/fh8BiP8Ghvkt+hoAgPgHRytFdkUoB70GEgjsAYLw+yk4v/AZfA68kJ
nkEJrjG5PtE5Xr7Rh4ITXIKinYOijkTEeiSmBaZmhYTHeAWHeh5x+42H729j
Uj2KqVGphfAeDsEKjnVJKwyOz/L1Cbk+PN4LXi4wxAM8iOBQr6Bgr9Bw35Aw
Hy/vI34BLuQQz4ysGFF1fm1xOrsoRUYrlNCKakuyAP+ZhVkVqfHlafGMouw6
Iv5fWFueJ6kpa+bQhMyyOkYpj1LAry6QsSrq2ZVieqmYWSZhVtYB/lNLYKPk
05vqmI0CBnwv4ClYW2TtjSKDhG0UM4wypqmeYVGyVfxqPb/UUpvVLSwEIqit
LtTotBprR2Nzk0QmVulaVtYXLj7555dfeu65ixfvuOH8cH+fTmMwm2wmcydA
PeA/sABwQZvJSnQBGwD8LRo9sIAVfvBGa6cj/CIvAGE+Tvsigx+XfeKKIFyo
gwAElfogbTfEEbCH/3f4Msf+X1TViV7xF3Y+mjWAyoFwDsLxiBME8CSEDszi
GmET7p3Ess8I/x3rfxzV7HHvKrIh8R4Z9gj8F1aWCV+ACLafXFwB/LwyLAbs
XsBnAKjVzY3lZeKyuZUlwP/5lQ2whwH/52fGHrp57+PXHvvy/YvfvvGnv58b
+Kgh67Ky6B8a+ieslG/5Rd+yiz5kFb1tlVyYMZ3YnoYX/bX4z95Jwire3AWz
fw8MYzTzhQgB/Z/xHwSMjvEfxw5fXAWKw+aIux27tlEVJeIIPB3AHsw/iSiA
qP9ZXrOPS9gA0iQG2dslTFGoCrdUo788bPC3gOh478SNYP/DIpDcHurfP3V6
7+Sp3RPHYQELwIdFc21wcRGy+YEOsB7pnP1LR74JIgL8SREXoJgkrhEiug7H
JscmlyYmV2dn17e3d2++6SyA/+ef/PXdD17+4903Tc9OdfUS3YVb8KIbW2az
ua3N0NXV3dPTMzjU22uzDvSYjw10EAMiDWpYNn0rHAHPwaQHSG/XNBmb5ZZW
ZVebqlPXMtxpshla+q1aMPsnh7uGuo29Fs30YPfUgA2YYtBmspk1dpnQtimb
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
EWx3GYh145mll1/707sfPvz5/97/2h93Xz+z9dbN+58+due/bLbPWbmXORmX
BcV/b6C/NGHdWp+bOXNiZ+34JrzK1io8zeIa8M7xW3ZWL5469t5N66/etH/b
9tbGxtby9u7Kzt7+8ZP7u8d/Df/xeceFxEsJQF7aWl89vrJEfFKA/dnleWCB
qbn5YzOzE9NzuHd7eu5KdgChOkJUVCzqmDT5RegMdZnh1LNjJy86g0cDOMqx
4lJ/1BSMmRrLRGBdI0cdPGTzO6Y50O8NUwAKYeE6BFyNAB/NDv5gnxDpYHDl
/nD3PW+8fenzr99998PX773/jrHRwX5wATp6j01OL68uWa1WrVbb3d1tBUe5
3dJn6+huN3fodR2GZrDn+zp0Jq0cUL3XqgaEN2tknXrVlYiQVQf4j3oHLLom
uKC/Q9vephzsals41rc+Pzo90jUxYAUKAC4Y77fAwwH5gQ6mhjvhrkFry0S3
ZqZXN92jhTVibBhT1+90mk6Od50YsMyrJDZ20Ym+5gdOTZ1c6B2xtBCZaItZ
r1GDC2BUioCA1AqRkk8HLwDoSd8sbahj6Fu4Mm4Nj0aXS/mN9RQFp1rHpvdL
2Z1iik5QqpeXGNS5QzZet5wuT0ukh5Dooe7CCL+enOTBjKh9NnUkO/Z9q+Jr
S+0LVlpPHrkpg1yT71+eHVqSHJAT758UHxjm55UbGVEWH1mUFJwZSSpODi7J
DC/ODa+siEnN9ErJcc+vCkzI9iPHHolM80oqJEdl+wQkOEfkkFIqQqMzA+Ny
yDHZ/sT5TK/QFPeE/MCwVC/vMCef8CNeoQdDEt19IpwA/+OyQsKTAzyCj/iG
OoPvQPBCxMGwTJ/QVG9S2CHwCwJjj5KCr/MLP0SOOZpdEUdO8PSJcs2qCkso
9Y0sds1iBCcU+JCjnYhS/9CD8Vm+MWl+QbGeHuRDXuQDkYneOflx/v4uR72u
O+p6jaf39X7kQ2GJrqmFpNwyT52xUEgv4FRmCin59fQSfkVebWVuHaO8rrZS
zK4SMisElGIw/rkluXUVhfyyfAmlVEopBfsfGAF4ASigjlIqY1bXsygNPLqS
z4AjrKY6FiygAziCC6BX1JkUQpNCYKzngRcARAD438zOV7ML2jilDbSSmoJc
Rb28zWSUNMhljY31yoat7dVXXniCEHx+7uINp0/YOrtadW2A9gTm60zEXAC1
nuj8bdW2GdthIQpAzV9o5st/TvhCZxwn9joqdmLBN1zwg3U+cRsRCsbi3CJc
jBEb63yiV0FBHhRrQpiPHQH8iqhYCN2LegGQ+4Ds/5nF9ZXNfQT+m3unkQsA
FHDiLBxvPH7m/Pbx06tbewCtC6ubsFAVJTJiwf6Htba+s3I10I3lbrBFjfkC
4R4GfwLZNrbtQwGQNNAKwv9TJ+defOa2r9598Ou//fnJB+545IF7//TgvU+8
/OT3Kxsfcar+xcq+zM39UVj8zrDh9Nbi8onT6/NbWwvwLIvrm2uz9vD+wyuT
746rfhpVfzjff//KzN7q2urOyXX4aGAeO2jB/Vf7H5c54XzHyuYu/H2WVve2
tk4vLxNkRwTtF2ZQL7O9o+HfBaJzixtXpyheGQqAfR8cbMdjAjBXor8JJkes
RITflWPnMkJ4dAZ3h6FxMI6ZYnwBTm3gj4a+QeSpIZ8OOSlI7A55H7h+Cfc7
zy6sT84sT8+t2zkO/LWNU+dueOaF59//6NJ7H7z+zHOPrKzMDA8ODQwMTUxM
7OxtT03NAP5rNBqDoa3dCn6yEfAf7H/A9oEuYz8YU9rGjrYmQwsgf7PNSGSH
R3uscGzXNcM1Q91muGy4xwIgf2ywHcx7wH+AfWTzr84Oz0/0AuwDC8B5gH3Y
AxcQTkGndmG4fbrPONqpGu1qHbaqxgxNk7qW9fGOx+48ffv21IiSNatgnLA2
PLAzfXZ5dKDd0m6xNjU1WduarVqlzawzNUm7lHUmORdcErO+Ta9T6JoYzQKW
SiiXcGubeNXN1YV9gspzKuadjVVnbeyHHxz5+L2Tb/zl5JytpZlSQg33Lfe6
ThDqacmMW6gp2uYU3yev+s5U+7Ox5PKW/KVJwYt7hjuOt3arisUF/qWhh8pT
grMSI/IT46gZqezsNEZ+akVaTElyZGFyWGlmZG4qOTc9oLw4IiHNNyrBLSLR
DWxvIhaUejS1Kjg442h4pmtGVUhmdXBOTUgWhZxYTIov9AzPPEpOcveOPuhK
/h050SUq3QfwPDk3NDDKxd3/er9Q5/AYj8AIZ8/Qg15RzkEJJKCG0IQAJ9J1
boGHDnj8Jj43JKsqNoMSWSnJoIrSoos8MlnBsSVeQfFObqTf+Qccjozyikjw
gudx8Tng6nt9aKxHaJRbYLCzF+mgh6+LT8BR/6BDFE5yJT9CYkhTmlNlmkhu
dS6rPJNXlVtHJeJmSkENEGsttUhALWGX5xGFQKV53OIcYUUhmP2ymnJuaTav
LEdEKYElZVaKaGUSeqWoplzCrpHzmDIOXVpLg42Cy6ivpSn5BP4DfRvqBWD5
a4TMJi4V7P96drmaWwT4r2KXCStLa6tqGpUqZYtKohBLm5Vao+6Pf7zp0uvP
vf3qs089/sjK8mJ7e2eLRgv2v0pjABdArbMgIiAC/sZ2vakD8B+Mf0L58yr+
O8bYkf2PKOAXym+OJjdW/sRSbyiNiCPJuB4Dp4wddT6xF4BH/SJSwFkAVO2P
oR75GnhAADwnqgiFh8Argv2/unXc0f4/fuYmsP/3T9+wc+LM1v6pjd0TsNZ3
jgMSLq1vY5AkbPutfVgAiatXxyYicEOIihWYUQoSJQuQrXslnWqfCHZVvW1t
aW0V1pkzm5eevvPypYf/9cbjLzzwpwv3PHDfY08+8szFT4+ff4/P/JmV92Nt
+g/stM/6Wu9ZXd5Z2Ftf2wP8X5udAz9mCt7qxtbTYz1fNFMuKys+aVc8vTRx
YnUVPuD2/g2rG/u7eyd/Df9xjRNiMVz3srS5v7ACdvLe+vqJxcXNpWVCxWJ6
fg68AGT/T88v4XKgK7Jp9lpQxOaIDtCYFSS5gygehcUcZ83g6BPCcKQLh/6A
KKSD3yoy75HBj+SAHAdEIrTHXWPoeszaKJqEfRPUwY1AHo0AgNdFNa6oFhT9
Gu2pKEIaFBZ8xtGJOWA9YO0/3H3Xex++/c3fP/zk00v33XfH5LHRsZHRoaGB
sYnhpaWVnp4+ubwBKKCvt7vLauq3dQx3d/VY9WP9Xf2dYN7rURWooUUOsD/Y
aZzo7+w2aSyaRthMDneD/Q/4P95nnR62oXTw5GDnaI95bqx3ZqQbWABIAegA
eQGwkBcw0WeZG+6YHbDODlnGBwyj3frxrrZ+TeONewsvPvfQfRfOdTZwx+pq
poSMtQ61XskRMlktTSqFQqFukcOaHh9eGeldtrTMqQSjckF7XZ1FLmgVVaj5
TGUpxVhdPlfH3pTWPNwv/WRS9vdhzuW7uy9f2vj47p7n560zbaJWKdPMrzZl
xw8XZU4wSsf5FWcN7Oc6OJ+ZKi6PUn7eEX19m+Hy345fvnzhm9d27+7jnBUU
mhPJdSmxRQkxJUkJNUmJFanxlRmJcDM3JjQ3LjwvIbQsI7osMzI/K6SoIDw2
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
tff9t0+cOHj5m08vfXnq9OkjO1/bgaF9j8PS0mY2m2V19Y0qhU6rgfC/vaOl
xdRkbdEbDCqLRdPR0dxibIRcwKCUAuwD4GME0T6DdMDYKLU0ybSKKotObmqq
h/NWndJu1rZplY01Za0mdYexEWL7brPKZlZam+Vuu3m0qw1ie0grUlLjc3NT
bRZNm6beN1aqhTh/wGa0mxpNjbUtTfVmtRQ1ncEjgCOwNit6WrXgO7osGkgH
wCm0GevtTfKuRo27nX51lnRdsOw3xor7dL+HpHWYFa6fowb9Tlw3R1w7R1g9
l/PCnYjHr4U+9UPAn37pfubEsaU/bwn/2P9PX/r9fa444Db5haus5b/zAyBc
+UW8/EfKGsD/Rg6xiplXzqMJONTsFKzP+8Iz/0kriIsJfSEudFlS5Jr06ABq
ZpyAhK3KMrNi+JQ0cVEO5AKktFgOKVdEKyQkJebExWYkhRCSo4rzUvKSA4pY
EfTymFSmf0ZxaIE4oqgihloSmsteE5v9VB7bj12ZGJq2KCDh72nUtWRhNEUc
m0nzI3FCmCXRNFEoSRiczwkmcEPzOOuZVeF8eQRXFprOfDqfvRIi/Azqc/F5
/00VrRXVRZbIYypVyRJZorAuViiPZVcHsWuD+YpIMLY8TETP4VGyRPQ8CRtD
fgmLClZMKSBlZ1Dysin5mYD/YnYRgD+HSsBcALOglEetKWFXCOnVIqZUxKoV
MJoqRYoyjkLCVkrY0mIyAH49v7CSnV/KyilnZdUKqCI2ScynUShZJHKOEP7x
SgR8rljCH3D2HD+5//xnRz/99MiRgwcmh6Yg9gArr6jCYL9BLVdh+1919XIE
/oj5AfD/key7Hg/1Ef6jXjA6/z/xf+HqLs63gLa6cPxfSPiPokSk/LVwBAj9
QpRH4GrvqPiD7xrjw0Jwp0bXCgZZAFwtVnSyd0NuDmZssVisbRCnwT2QqvuK
UZhe4b/C/wWD5dMLV03xHVLUGsDRHm/+4udoABLABA0l+pqeHuQFMMo1l8fR
N9DX7wQDOOzp7esfGOx19A90dryjr7tCiX8Y9czv8c/cy1gxx4i6Xxxxhx//
oCxnrqLwVyn9lwnd3OltP5/ZfXD32ItDgK290929x+tK7uasmsv5y23Gshv8
hLv8/Dvc7DlJzpwk7Usp871u++zosNvb5VvymkDNaET+47ukyVFMtRJbAZ7w
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
ajQ6PpGY3Lp5+8FDb7z25pHDR958/c03Xti2fRqSg1AskUBbA74wovggPn28
WgifNea7Gxr2pZadYx53IBSKwHsEPx6P5/nnt7x8YM/Zs+9++eXFK1fOfnj6
xPNbN3q9bsjQURbQ4XR0tNtsFkgE+vs6+7qdDpveolfaDQpA7F6A3BQ/84DN
3G8zOPTSTquq3SDtsKh0SrFaJoKwudOs9Pc7gn0OSAGQfLxT3+PUDbqs/S5L
j8NclJtBqauARGCoGw32Q/oQ6LMNO3Tudh24gE4jgtxuhxoeYbDDCPg/3KH3
dhuHnBp3p364Q91jkQS7dN4OTVe7qr/bZpCL0hcvyVyTtWjx0sWLludk5JYW
lJLySwvWFq1Zlb1s+erFzy569tlnH3vyifsffODB//jr0//+//j5wkkBf4DP
EJIKLUxaj1rm0okhv9DKOUatxCDnqYRMwH94UQ6jDM38q3ntBrFeyZELaU4z
eh8Q2ZFO2mPXmdUCGZcqYlNMGoGMT1PJuEJ+q17HlsnqIKRn09bKeaUyWmG8
Q6KnFZv5VTLmOm5TCbulkEnL4bStq21Ir6/P4HMrhFySQlEmlq6jt63hSLN4
6hyaLL1VtrpRtLRFn9tmLWIac8nSFRXcJWW0pwfomefqS35avejaisW31665
WZR3Ayw/90Zh7u3KklvV5Xea6m4zmq8xKD/TyNea62+Ta36rreI1VSP9x/Jc
ZmUu4L+YXCJrKpe2VEio1XxKGYr8qdWSlgrAfxm1SkApMfGbVKxqBaPSKGhU
M6uVLWXS+gJ1U4mFTTYxqkytJTZGmYVVoaBV0WpKqkuKWDQ6ncFporGa6HSR
lDc7mzx7+vipU8c/+ODUzp27nY4upUInECggBVAodRqtEfAfjCeU8UVyCP4B
LVHb13B37Ico/mMWaIIIgmj7Eo1ggg5uPvhjzCcI/OcnAoTaF67/42Ip5ojA
vTOiwk9UgTDLBAHy85fOsAPCN8OuSm9yWOxdJivyBXAz9DidPYD/AP5D3jAi
KAglAtGxcGIyObkBkB8x/KTif4z/uP4DdrfyP7NxbHoD7jNi8p//z/oPnnIh
DK8Y4O7w7/g/RmQBv989iQjTfIg8H7IAwEwATFSlHx0HoPMH3Fs2JM4dffHq
xYM3rxz+8cKrx1/dNpX0hlDhxLd189iVkwevfXLw2oWXvjv70tsHZuLRAXCn
EH1HooGAH7DE5w/63N6RWAzxVwLcJ+MAlwnkZvyRYCAaCEax9AAuBMFPEF5E
1B/xezZMTx1xe45y6adrSZ9wKFe5jG/5rO/ZzK/pLZ9xmr8UM75U8C9qJK8E
3cFBl6urY3DAPez3eyDsDYZ8Hj84L5zO4EQA6fym2gHuANIC9qXm/wEYEVm0
H1XkBvyuXS7leXr514VLfi5dc7Uq50Z94fXSzG/INddZ1O80kqP9naN+b78v
DO/bVHIMZRlRRKCBajVjqOYP+A8JGuA/gDlyBxu3oPHO6ZmUTf3r+j9kDXD5
XQWfeZryk4kJlBjGYpNjsfHdL+w6ePDgq28cfvP48YOvvfrizm2z6ycjsXB8
bBycKfZrnnmqZ/hT7kkVf8DNjaQELvt6hyAAgxRgYGCgv28Y3O7GTTMHD+49
c+a9S5fOfnTmg6NvHgZn09WFGOG6+/uGPO6+gX6VStFuNzsshr5Oe5fdaFAK
+11IostlUbos8n6NpF8r6tUL+80So5QB0b7DoHSa9HDiMin6bVqwPqsGfEE3
xPY9FiwT1uu0FOdn1VYUe4e7vAPOgQ5Tr10N+A/xf5dWPGBT9zu0fS6dy6Hq
sWn6HfrQkCsy5IyNOJNu12C7YsihHLHLfTZluNPk6TWB6+E3N2YtXrx84cJF
SxanrVyRnrEmJzc/Nzd/9eo1actWLV+6cvHC1U88+ey9Dz/4wCOP3vsf9y7+
0/29ZIqvttxVW2mvrxmSiPr1MsgsOu1ys1YIOQ5gPjzscLcl7O4a7DT1tGvB
f4FTU4joEm6rRSuFBAHMpODDK9WI6O0qrpzVKKaTRYxWhYAn4NDEgmahoF4k
rdMoyHYlxcauMFPytfWZHivdIC5VtZW1teYwWjJbW7Lra9dUVawStZVx6fnM
tlwGL5spWMVTZvA0GWzlGro8o0WU0azMreYsKWc+U9z8eAXr2Xr6k1Ha6ssl
a66mPXdjxZK5tdm/5eXeysmZyymYyyucqyj/pbECYv4breTrLY3XKeSbjQ23
6+puVVXKmBRxSw2vgcSuzmeV57ArclHzt64InAKzphAuFzSWcWoLueRiUQu4
g1IlswrAH466thpxY6GSUqxrLrXSKzq5jXZ6ua2loJNDstCL4Sq0O1xZQqcy
WqnMZlYbjcPRGVV7dm289PEHJ0++/e47H6yf2azXWZQKg1isBvAXieVyBaJ6
APDnCqQSuebuwq/RAviPRmiMtt9p/y04kMZcEHgFmGB+hnO4iuD/n6//O7/4
TzC/EeIvBPMDxn9M+wBHrP+CRzrx8i/eKSMIpbFP+YNTIKin8X91RqfDBTcb
gCwA16ks7R0d3X0A/hD8j/ij4AIg/gf8H53aiEneiPo/0fxNXb6FaAHgkUIs
/j6/BDR/4IfQupqP/4g9PgSR/2jK/tksTglLQfpwlyMUFXxS40BIgSWRgIA8
EPRs3zR64Z3dP3186Pqlgz+c23fsleenxvxBxKnm3zQ7evHd/dc/OXzr45d+
vnzw6MGZqWlfKOHzx/z+cAip8cJ/fB4wBPvJ0UQ4Hg9BxDwa9UXDnnDQHwEv
gCeOQpFwJBKBZACCcUBlOk+wtKQkfcny0kVPNj33aM2Cx7mLHm9Le0609DnR
kqcZyx5rWvpg1cL7sp+5Z81jf13w+H00CmV4yDsUCfX6RnweL+IyioT7h0cG
3WisPTXZHkbqkCNeiNoRTroDfl/E6wmhwDiSHPbByfBLTv3HjIpfCtPmSNm3
KwpuNJB+qCuYo1bMseq+lzGP9NpjoWBnKOmLTwMgg4uEdwleJsT249OzhArn
7/H87PpNWzH+T66fmZj5l/F/fHQ2OT6bEojZiGeK0BDR1PrJSfhirI9PbgrF
phKxsf17dh987cCBI6++duytXS/v2rJtfWIsNOQfio0j4Rikep+q+WClewj7
8dAX7v9iTUzAf3i3vV6/2422huHlQ8YUjYZxFejji2f/6/NL58+cOvDy3lDY
19PX2zeEOgZDI8N2u9VsMrQbtGHPQF+H1WFSQZDf32kEnOywyj0aYcQqH9Fx
OxU0u4yqF1JVXKpZITIr+R1G+YBdh10AquE4dA6zHLyDw6DubjeVFOTkZa1y
WDXtRnkfivDVEOF7XEa/yxQddPr77UF3x2C/BXIHwH84ujuNni7DmM/ldmkG
7PIBl9LTrvHaUToAzoJPbczJWPXc0qcWLVqwYlXamtw1SzPTnl2+6Mnnnnr0
4Ucev+/B5c+kPfHwo0/8/ZEHHnjg7w8/uebJxcqqCnN5rik3S1uUZyDXDhik
7Xqe0yJpN8n0CkGnVTHgQmoFAP4dZsVQlxlOpG2tUiEd3oFeJwA/U0CjGMQc
tP/LaHAqWSZhs7atRStgS1ksSRuLRattqFvLbKuU8GstosZBSXM7uaCHU+qS
VrrMDSpuIY+aQW1c2UJZQ23KFXMrNdJacsVCUs1zpXVPseUZIkOWwJAhta9j
yHNqmCuq2MvLWp8pIj9Sy3yqRbKkTbRoip72TfGKb1cv+jljxZ3iwmvFRT8V
Ft4oLvm5jHSVXH27tQ7i/zly/Vx9Y8rIt2pqfq6q5JDLGJX5TFK2oCxXUlXI
ry7k1K5jN5SwIB9pLAbYF5BLJI2liuZyNbVKS6/St5F1rBo1vVzLKFOQC6Q1
OerGYkVNobm1AryAiU6yc8p1rSRJU2VNcVF9PZnNEdSSGxltTCqrBUn9Hjt8
9vSJ0yeOH9j/imfEr1Ea1Aq9TKoWCeUyqUoqlUuVmrvkD6mC/+9lHyvE+XCO
KYBw8xfrvGAJMOwLMCMcBl7cn8WtW6IU/4f6z/xGMG744uI/FnnH83LEnu98
7QCcR8AJ/u044MfZB9yRoJvGZX9CjIboFODkBS6BGwP+AyoGY+NgofhEbGwG
8B8M139w/X/+/D+e/5zZ9Dwm/8EKj3jDC/+NA57jyX8C/Im2Ly4BYVppohBE
qANgv+D2h/BEECojpGZmIFQGqAxDRB6LQpy/cUPo/SNbfrj46rXLr/94/vCp
t17eMBaLRkKhUGDjbPz8iZd/ufTGjXMv//jhS+fegITAHUdt7XgoPuoNIi6d
YBCAPQaPFo8n4SQUQhTKcA4xP+QGXl8AZQh+NFAKoSm6cTjoHhky6PQ0Gq2y
shqHcGvSs1ekLUtfkbY2Pb0oO5OUl1O2Lr+cVFhWWkQikchkskwm6+7u9vl8
/tRPMBiMJ5FSI35RaDZyxDsw6O4fGPIBZIfjYCNu/9CwFzDO60PUyiHv8DGT
6rPK3BvFq34rX3O9Mn2OSroO+XVz2R16w0889on+zkg8AG/aZHAsMD6KZ6Ug
+E+MT0yuB7TfPLNx0/SGjbObtuEyHeQCGzZvx8vaOLYnNL/wRhieIJqY3gz4
j1vAaF7od0FhePaJ5MTY2Cx4zE2J+LEdW8/tfeHcnuc/fPXIO3v2HXh+83Qy
HACYj6K3FN5H7MGJ7UL4fFNOH15mIBROeNxBCPh7ugfgfYbcIB5NgBeArGmw
f2B6auLwawfee+/IJxdOfvnZ+bPnju3dt3XY09/Z22d3Qco82N3bY7HqO42I
6rnDoemGYF6psho0Nr10UMze1SH9atj5tcv8klaYcGr6rQDOxoEOS5/L4Om0
RHodoT6HQy8FUB3sNndYlUY5TyvhGtTSspICSAHQKlkK2yFHQJw/Vm1yoNPr
NJllXKT81Qm/1BIc6UKK8D22PpvK22mwK9vcDtVIu9rdoetPeQ1/t03FZ+Vk
rVyw9NkVK5cWFRXlF5QsW7Hm0SeefPDhhx5//PFHHnr8b/f+9REI/u/52z0P
3vunB/786GP3NeRmq0hlzelr6pYtlddUDuk0nXqN06rXqfhSPsWo5rtsKjha
dIi/DoJ/8AUyXquI0WxSilI0dwLIBTQShphF1gio7UIKIsBhNlu4DBWjxihr
kfMocjqFzaynU4ocDbn7mkovC6n72ZXt5FU2VYW4bY1YkCuTVbRxStRSsl7S
yKJkU6qWllcsKKtZ0NyWwdbmlHOeIrGfKm9bXM5ZUS/LIrNXr6U8W8lMq2h5
hsF8Zktj2j8yll5fsvxaVvrtkvw5UuGvJYW3KbVzXPqvbNqvTQ1gN5vqf20h
32lpvFFXfb2y/E5tDUL7inxOaTa/NEdcWSCCmL9+HZdM4jaXcyllfEoZ4L+Y
TJKSS+VNZeAFNKw6fVs94L+Mso5fmy2oWqtqJGmRd6jQUcuN9FILq8LIqOLU
keoqS1voDMD/JioN8F8o40/OJE6eOn7xo9Mfnf7gxRd2dji7AflVSr1YpODy
xAKhlC8QCSRyiQKpfWHlR1z2AeQXy9SQEYAvwLQPeOwHx/wY/3H9h8D/+eNA
BPCC4Xo+nuefvwIMfyY44CdcAPYLcCRiewz7xPAPPoEjlobBC8K4qg+BvasH
Vfhtzk6z3WmyOfBqGNG2xkyhaL5o2I8jfzDA//j4egD/8Zm78z8E+N/d+d22
C4M/mgKd/d/4n3HNn2j1EjM/f9j8wpdg0pv5NGjEVQD4KfqF8UAkPuwNDLp9
d4noI6i4HY4GNqwPn3x7+8+XD9/87O1fPjny4Vv7N0/GR5PxWCwyMxU++dbO
qxcP3jh/4Kez+y+8tX3LuGc+/gdDsUAglEiMIm8SiQHsoz3jKIDmKCC/2wOh
uj8QDIP5kAgNcgFez0gwgLyCNxWlDg4Od3Z2A1L1dPV2O7u62l2d9o5uRweg
kmdo0Od1ezyekZEROAL4wx3wOZIECIdQiyLV2kYBvy8IIA+OBo0DBSJ+XxgM
AmA4Bw847AuOD/ef0sq+hsi/aNVcWSbg/x1q6S/1pdeayuZoDdfbmKe7nKNR
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
dvZL4QV/C8z429bUF7YXRxTZ16TI16aItmWJE3gmpqQ6gmPJEpiNZpPHpnbb
1dUVmiqdghCQasTwzDh9TFOSwp/gfSqM5SoFRykuMCi5Np3SYdZplWKplKMS
5/YI8q4LiqbL8meLUx/kxE6nxj1JTJhOiplJjp1JjZtPT4SwfCEzaS4LLHG6
IH26gEUsj/k4N3EmK242K2YhK3Y2KWaOGf1TfMh3rPAngux5XvYPvKwPuanW
wkiLOd0pitxVHLp/8zOXtrx0NTP2VFjgOxHbbrFiv8hNvivIn5OUzvLzpwuz
HuWlz8VHP2ZEz2SnLHDyFoVFfjlvtjR7tiSroCA9JzMpLyOxJCeFm53CTU8S
ZbO0pXkQ/0vYpAVUlpesKUrTFLFkOYn81EheSgQ/PYaXngA3ETrofEZpZnTs
9lfj48OzszOzsvPASrkl9e7qEyf2X7t2+eNrF65fvXjw9Z0mo7aoqIjHFwD+
g5Xw+BTbJ5n5wioQTQcEyL88/kfYx/1fekeV1vzCk9hyidu+SPhP9wXRLoBW
gacHuPD/PN3wTyRdql12Vx3E/5U2x1PhGFLeqbLXURsBRMwRkJ+0hVeYsf5D
hfp22u/QxR96ImA5/pN+oYoqvE54RcI46m1Gc/tawRfgFkD/yATN/I+wv3wL
AHeE6b0ArBENDE9gCgCYj+IjtBAVdoTSuwM4Iwywt7Ql+rQiRLNGAEJi/E8B
MgF/CN3dEL23twLyAxIS5rb2xtOHx7756Njc1xdmvrrw9dWTx/ZPDPQTrAac
Hxnpeefsnh9unp754sz9myeund0zNdLd1tbibW3FEWO6CYfe+UXMpydnsbeH
APv/gv90gWg5/uP4MJ0ILO1rdPch8TX9NpH3BotdgN6+JiIEAEgOyA+oDmAO
eAh/wsJV43a66uvqIR0g41GwgPvAebxPtaMWQBUNmXYIlTRxBJ3gRwD8AXWX
qFmp2QqqDYl0SeEsADZ5ju6YHJvcOb5zF9jErqmdu/aOje8YGRsdmZwc2DHR
P9i3f7T3nTcmr+3s/8JTdU+WP89Jmi1L/aWMdZ+f+USUf1ec87Mw47Es65GM
fd+u+Lyj9nxv82H4RH2+vq7O3uHBvjEiJdDTO0hNQ/SA+4ZUhWLD62qFr7ut
21VDnBp8IKT5p6EJVWNQBYmejl/SyCCUoaTM1eB17xkfufneOz/8+NX3927+
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
IK7AEp9leCLHPGcDL34Tv1xOvsJgbhpcpkavA2h/0KyKuCx+gzJk0QYtGotK
6KGDKeH6HUYyudjvMMDt1AWc1KLp4CJh1fhNAYtCL2TbdEKLvsIuzW+oyHrD
LL9iF3xtEtyQV9zgF/+bm/sjJ/2HgsRfcjbfKNh6Iy/1Rk7SjbSNPyev+j5h
6b+emPe3eY9cm7fwp8Xzv1oV/272xg5ujp6fW569vEab1Vye3Jv4uGPKpFIW
S3g7y3Qbq2nZY/2iDK9io1G60WLIrGCv1Ao22hWJFnVSOftxIXs9v2iVoHgl
O3fJls3Tk1Y/mLrsgS2L7hcXZxDMZ2cC4EuKtoqKtopLMwH/JUWpwpzNstxE
NV3awhQ1O11eskVenKhgpwsLt4jyUiQ5m4uSVmUkbywsKuGDAyCWlAu5Dpf1
5ReeOv/xO+dOv33yo4OHDrzW0R7VaDRlXB6bxxNIFUK5XKxUIvkXSmUylRo4
v9Zo0hiMKp0eu4CxIgg184E2W50uRkiTyQUz4m9MmpXuhygbD4xn/kxxPjOu
nRkBjwO/iDtQ2xCua4QFO5XVdVgCxEg60zB+rJ+XWIRgJSB8MFwNLsPvJUah
aiwcpepAHsR/gH1iF4j+c6z+B5YnGA7VEuVnnPmCY18A/HHbM7idxnP2Ycwf
I/xY8I9sH/k/Cf4/9cKuvc/v2P0s4D+mOJkoNw4i7+kfidXv0aoeIvlIo9Ow
cMg7pgAYUSAUDh2rkyG1OgD+gM91kcaqSH2krYXQcpogBhq7Y7Dpo8O7/3Xh
9R8+O/T9Z+9c/ejg83uArva3t3UD/j+9t+fcccD/wz9ePvDtuTePH3xmZLiv
uasH884kjNzSTrtQW+DDwcog2iOeI5gjt0czhBWbYyWpsTKh/0gfYHsXMx3g
P6qDmOw20nJYaAHx+WArNCl8IkGPrrrGDvTO4CWG9+EljkIGPg+ADwBYXd8A
C2gD+IxwBKfrIv4D2qOEDhyEI0xQCPwpeptwkWTkDV4/9vmi8zKyg0h9Dm/f
Ae92DQx0D9LxNz19pOJ0CO6lt729tastOtDR2tvS2Ano29rQ2VBHVmNDZ6Sp
E5h+O5Ezgt8C9qnBtqu7F6tAW9s6SFFTcxNVJeqhUkgkAwK3T5zfQLg6XN/Y
ECWDABqiDfXNsGCHdsE0/i6iFaoG/K+LRGtqI9XVTcFo5PX+1qsm6Vc5q3/e
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
UgSweof6Ovu64I8JPmHbyM7BoVEwAbDQBBBlI/pIwacAK4YZbZIzoqLWWDUE
JB9xHrbhUG1DXVOkIQrb+toG4DpBfyXwp7amjkh7pKfJdVVddmP9/BspM68n
zfxx7ewbaxbeSF56I2nWz6seuLZ6+i/rZ95IfPzLsowus7mnurG7e1trV5/N
pnPoBR6TrMprDzjNgP8WtcRnM4uFIsD/8pJCi1qml/FNSpFaVA5vgXWodJpg
RykosyjFVpUk7DZVuYwWldCpl5kUPLtWbFTyzGoBLMBbh0EKO3a9hIhIWKWV
VkmdS+43iQCWAVvmLU+euzZ/2uqcuVtF83K1cQXWddzQ4gzNfYszWQ8sWZPB
1gH8aLlVNmW10wgIH7Bpqkw6nEcJqO4wyQwKLhD+pmo3WIEGv7HGrYfVUuON
hFzgmAQdxhqfvcZD2geCLlIjalYJrRoxWDGnVaNR51qlxX6Z0C0Twx3JxEVa
YaaVm1qZt/qqRfarXvCtuuAHTdlfheznlRyjp6LWuNWXvEx6x+2Be+96csad
Z+fc9tnMmy/MvfncdNaVONb5ONbZ+MmnZk04PZN1bhrrs1kTjs/+4+isu7h3
sThzH9RvXmPMSC5JWltSmq6W8Ng5qdmbl+amLtLKU/kVyw2aTWrJGjEnXVqR
LS7JFhVmSYuypPlbJNmbFNkbNAXJkoz1qsJEVdEmdUGCvihZlb1RkbbewE4w
lcK764uSVhTmZeYUluQWFpWUFBWVFQB8vv3OmwD+pz9+9/23D+3cNgKcnlPO
xVVewePyBED+RWIiAS1Xq6RKwH8FU/xPZ4EpFWqT1mDXm5wavUWtM+P8X1iA
6jgOmBF8QBUI+IVSB8GGeQHsySIR+P89KX7caEgSgfFXxoL/OOoF9T9DNfWB
qpA74HH53d5gAAwBHf4bSxYwIkLoF6CLga1eVge89Jus8BP9Y2Khlb+PJKPX
Y7ZabHanyx2LU8EPBetTByjW3Y8NWbAzvgX4vyf/Ykdw3/B2XL1DMcE3ZO9j
IN8JC4M/YAXAFjRGWlHmsTnagXpfqOWLAX/AMaxyxL5XzBQQlhttwxFgNFzc
AqeTqE0rqf9pae2srYu0tgHdre/uj3zwxsiXn7z4A/D/Kwf/dvrN/c+DA9Da
NTDQ0d++d+/gewf2/vXU69evHv36wqFPT+5/drStK1rd0xkB2g7IHGkFw0cN
Sn0DugAMqjPThxlkjslX0qQAHv8/1/hJwQCbjMAp9h1Qi0DKL2kMqok4Aq19
7V2DYPiibb2xCp8mMqqG/HboeBQsAUXZB3jUcBCZA4rko3dANSKiGEinXWDt
1Itpweopor3fhZ0U5B7hXUxhg1XCGiQg/6Q1uH8EvDmw5jjEE4w7LCLiNLId
LQWOsOymASJs34Pze/pH6ZEhgP2h7cOwQ/yIbXvgZPgnpAMabAf9t1gBhSkh
MvyFpq2pi0cy16hr2tHRhYGgurqGSKQZ9oP1dX5/sCEM1L25srHBW1tVE6rq
ronsHxo4MNh2oiP4F5fkm/LU7/NW/5i78vstS65vWXKjbOMv2Yt/TJr988ZZ
PyQt+mvumj8L01/xmp6ua+hrG25qH/YE/DaLnExX9Fitco7NINEbZRanWSqX
zJ87S8Qp9dstToMS3nVbNEaVCJg/bHVSHlgEMAFmlRjsglkp0EsrLCqByyCD
rZyTL6soMMgqPCaF36r2mpWA/wDUdlWZhp9TaRKFzGKfQVxTHZRbXHGJOY+n
i2atLrltauKtM9JunZ9z55Kc2Rs4cWuKeOUyk0YHRN2pFTp0IrAjYF8CZpVV
xnfI+QGN0C0pCesEjTZlQCfxaaU+g7Tapask7Wkyp0FuUAptJqXDrHVYlJU+
s4UKRAddpDcNEwduvdBlFHltModRqKjIEbLTheWZUkkBN29Tn6rshEX0r6D2
YxNvpyRnyMiJyAv8Kx4X3THB80fW8wv/dGjO5A+msS7PuenSdNancRMvxU+4
EDfx/LwJF+ewLs5inZ/FOjObdXI268VpNzU8eAf3dpZ85oPVOYmCLavnLHy4
eOuGgpS1Kk52eeZ6FW+LqGyd1ZDhdeVWFCYJStOERZnCwgzAf0leKuC/KjdB
W5gkzdmgLkrSFCdrS1JM7K2G4iRzSYoqb7UiZ6Vg67L8xBUlBbn5JWXF5eV8
IU+qEg8Mdx3/6MiZU++cOH7kzddebIk0inkiAeX/JP/L5fP4QkL+ZQqFkij8
gwkAwo85XyT/gP9ylVGjJ2MTAeoR7RmRTyP8UYyTgMAiH3QQgJBTQZ5YTxbx
EcbqLRnmP5YIrqHgH+P/40e9o7YP4L8n6PVVBgNVNVgLigYCUwPYAsaIvI0p
S4RwRgwaF4e7crxOKfgLxIWxWkzwv9UOlweWBQGEzv/tiLSCF9Ad7ehBCWhg
+Kj/zCg/j58CA7QfRX5Iqy+d9hUTNKMLEB6hnrEC6AiMiwK1U71HUqCIyB+L
+Y8tOIISELQ+JDb8lwTtSfgoSiWOu8B9aGpuaWyuBfw/+mLfZ8ef//bC/u8v
v/XV2QNHXtkzBEi2bVt7X/vu3f3H3tjzl5Ov/HDlyNeXDn/x8cEXd3e3R0Kd
bfVd3W2k+L8FvB4SycEUMMIm8naM/GCSmrohbcj/MTSELcP/51zIcROBB3Co
PVJ9Ug3VhTPCugD/4b4aoy0kD94JD7C/ubUHwR9nn5EyzjFsR1U01EOLyaDR
t8abTpJeb4rpBcGDpSmVbpTOQAMKW+xxw5AUZeBgp4bgTLg2wHls1qDIDz7d
rv6hmHYfmAbUi8b7ogoSJF+AU37gBCL3PTA8uG2kfwReAeaTKWNgGvqHtqNv
CItR/4NFu5ixCLYTLSAtwWpG8o/gX1NTV0tnHgDmB2tqyJh70t5cVxNtrorU
11bXDDd3XH3jpetHX/vt6f7vqrQ3PIKfNTk/CJJ+qUj8d3nWb9y0Xzgp1/PW
/ZC2+vv8pH8KC665lH/b0XBpb/9oXT0Y8mi0yaiTWnQin0UdNMgArl0Ojcmi
VCiFC+Jm8cqKTWqpnFeq4LMB+YG0e206n11Ptfe1AP5gGsAWSDj5wtIclaBE
LSyVlucrywv0QrZDJXRrJaQcVMaFrVFS7tPwgnphlUlmExcbeEVui05nc67L
Yt8xZyPr3qVTZqc8uqzkwZWlD68rm7q6ePaa0pwcttNq85iUPpPEqChTi9ka
Mceo4KvLimWF2UG1wFKWE5CV+SVlYZ0spFfYFNw6rxEMBLgJpCvNoPA49BYw
BBqh16kLOPU6OddrI2KkGDXSyUudJpFJUSEoSrPIyk2Scrh+p1luNyv8Ynaf
uORFk+hZk2CbqrxPWGxeGme8k9Xy8J0vzJhyfNptl6ZNAoYPyP/Z4slX41iA
/+cWTDg7f+L5+Enn4yafjb/l1PxbPpnDOj715lemT6l+4A7pbRND8+fXZGxN
WTZ7y8qF6+Y/lrNhaVHKSl7uBjABBnkGO3cJJ5/gP+H/RZnigjRhdpIoc6Mq
Z7M0dx3gv6o4RVeWpuekq4s3y3PWaAvXaQpWS7JWlCY9XpC6gVNWCvifW1pW
xudaXebnXth74uNjJ08e++DdQ88+tcvncnLLecD2Af+B/JdxKsALAEMAR8AE
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
pKwQHByX3WA2gO9TppUUVqrLIwp2bc5m08O3197CevnhW07MueOTGTefnznx
6hzWZ3NZQPuvLp706RO3Xo0n8Z/z8azz8yacn8M6O4v18WzWR3NZHy6Y+Oms
m//86M0npt62e9od7rsnqe75g2P+opI1i4Vb11Wkr09ZPj9l9ZLkVUvyk9aX
ZSQD+KuFxUpuPmn7zUvmZWwSZ27SFWzRFCRqipPlBYmwFCVJqpKNhvIEt3yL
XbSVm7UuZf0TmRlpQOkL2OyCcrbSpN21d+gjIP+fvHPixDsHD7zW2FAnEAhE
IgmKfOLCmh9cWPk5JvVgxlIfWETwzUryuUwmF9GeGfWFym/MOHjyLs0IMwlZ
7NhFZv4f4B/rYWcmf1Hmj/hPajipOD+YAFrbTzq/MOyPtUAY/4kVBQVIhH+s
3dhD5SZCVCDCh0pxjOw/loPCJVlsJPgDbgBJGdNPJhOXGqPVDc11Ta1gBZj5
v4z+JzP5ZfxijMLg6J6BYYIV8KVGRje++J+J6qCo11jtyu+LgSymLwCZKpYv
ohgCoBnTzQruQ0srGf9HEsEtHXS/taU98tLTvafeef4fFw8QFbjLh0+988rT
e0cxRQscfN9Tw+/v3/s/Z/d/8+nb/7p89Pyx5/Zs626L1jRHG4iMGOAk1ZNk
ov2YAkYhIGzmReRkRqszoR5Ebxxe/LvOPw34MKNtGMFPWiI7SElvH/a1URMz
gElhNHyke5dCPdoCrP9hSoDgJVVJ6sTBiIxCJlMphK2+8Oiw/wvtaXV9A1rS
6vpIGFyvWHabNGFh7SVcITJz2KJOKaX0ZF7DwMh2UudPG4RpVH90bOTxNuos
gKXYAb/6XXufHd1FZsdTSzGC1UQYHYLTiHUY2IYSr3gE+T/xGdtwHE8b7rS0
tGH9J5J/DAHBNlRVDYagoa4xFAqHq2vDNdUOh8NqNJn8Ditwt7ISXUWBrDDV
XpJty9liykwJpyVXp6e0FGQ/o5Wf64z+Zffwl8/vPLOn//mg2Z2e4M3LrtEY
68Jt4aYuj88rF5S4tFKnQlBjV9X7DHpN+by4h7MzEh1GtdOgdJtIqaeovFAj
5QJOasQValG5USYAE1CelyEuy1Nxi3VCdtCiBrQPOnU+m9phkOrlFRpJGeC2
UlxaVrg1ae3SVYvnLY2btXze9MdnPvTE3KmPx8+aOvWRKfc+lJGZKxZKMlO3
bl6XkJVZmFMkyC4VG6xOu9ngNctrXCqblmfUimTiCh6XrdFKrVY1oLfLpgp5
yVgZMF4WnQA8Ba9ZCfYCwB+WUcEHFwBgH7ZaWYVGWm7WiMB/MWskPrs+4DS6
7DqPWaPmsU1yoVTIForZAjFbpRGqBVlBWWErL69yRbz17kndD9zyysMTzsye
/MnDrIuzJ12ImwhU/8KiiZcXTbqycPIXS+68EnfTJbouz2N9Opt1dRbr4hzW
uXmsMwtYl2ZNuvLYrR8/NvnI3NtGHrlZfztLfP/9hi3rtOnrreVZXi1PVpGX
sHJRVuLGtHVrYV/JLwT+Ly5OExduEeclyXOTjcXpmrwUffEWkv8t3qxhb9KW
JZh5m6yCRFnRhsKta9NTk4pLOBUCcRm3giPkuMOe/W+9dObc8Y8/ef/D4+88
/9xTLpeLy+UD7S/j8jg8foVAiIIPsGAHXo4pP+vGF3ySsD/8adnsWDaPwx8p
5nsx8o9WgJkFwIRisOUKFuwwtP//BH+m8h/nPAaqanDg13jBH1rAQ+qLyBH6
z/HTmAmPWESEn0/dkyDl/KTCH7foHeiMNo2emDPSnuBxW20Ok9kKVwhOBxYg
BcJ1wep68AIAGprausAFQP5PGf7vMZ/xUyCHtu/F9f+D/7gwa4kj3bELmDEH
MeTHyDaRsonUNDRSqh8B1KL0tZUq/bbQt5qo4EMnwDTxADraO7v6cBRsW0f0
uT1dJ48+89WFN77/7OB3nx66+OHrLzy7s7ubMluiAtF/6LWdX5x68+urR7+9
cvTPJ155bs9QT2cE4z9NbZ3tBK57egYGMar/H3EeJrwzXvxnbC5wL4bQAe4I
4vUPYSVPLOBDmf/4RZO8A3QUYw8iHsaF0Pdh9H8Q/7H5i3lQOAIA2T4K4+O0
RMyexEpoOrqxHAgT62hVwXriXF3aMkC6BsCQYScaNuJhJRK5cjqMgAR2qEWj
lH4UM79Y3UptAXlJxEUB5GlUn8z6oalheBe7BnC+JJyJkX+MAo3Fi4hdwBQ/
fXq9+CjwxgH/0QREwa+jozAB9gH/GxsJ88dyUFihUMjj8fj94ArUeYAIOTw+
jzfgcQed9kqXw+Ow+p1Op9kcsDtaa2te3/fchdMnP/303Kefnz3xyTsDPdGQ
y6rT6AM1Lc0926prGrRiYMgyu0LoVogcKqGQW7BqzcKC3C16mVAn5cEC2FeJ
yxH/DXIBKQqSC8EEgAsA4A+2w64SAv22KvjIsfUKHmw1Cq5SypEKSwQV+elJ
axbMmzZ7+iPTHpgy66G7p993x/QH775nyp23TWKtW/m4RFAKboVOwJWXl5eX
ssUSmVqtthlJB3HQqiSqzlaNUsIT80vsOqmCXwLw7jEpg3YtsH0r0Hu10KGT
Vjr0Tr3MrBIGHXqbVgJnkgFhZsLzQy4jOC9qSYW4okQpqrCbNFqtGGyBW6cg
H6gs1xlEJr3ArubbitKqcxK9cx913cwauff2QzPv+STuDx9NJdneK3MnArYD
2/98yS0A++dmEIS/PG8igP/F+JvgyNV5N12Nn3RxwaQziyadnc26OH3ihbl3
vD+bdfRB1vsPThy6/w72ZJZs3tSqnKQQL6dSWxF2KgUlWWBG5WUlEk6enNR/
5khK0mUl6WS2V9ZmVU6yJmcLeAGK3PWS3BXSvOWq4lUmboK2eG1p2vLsresL
S9kVYnUFX1LO5fCl5a29ze98sP/UmfdPfvze20cPgsOq1WqFIgnt+eWX8wUA
+Cj4hswfFp3/pcZWL9iSHY1RrTOrdFq92QImAMCfxPYJ/hNeDaYBbQG6ABhd
Zybt0qEqnnGC/P8382eK/Eluly5qBaphofg/BvxjESeXF6g7fBTGf4DtM0VE
TFkppoOR/wPsY/AfFhb8Ywob8J9gfsDvcLrBBYB9cDpiNUXBcExfnQ7/wvxv
3/B2muTdAyDPhH2Y+e8M/g9s243Nv4BsrR2xeML4zl9mygkK3WNud3xoCF9i
kAegqbaxARagFoFBRH4KcUhxm5pIB0FTtLmFjIXso0AG5qD5qdHW42/t/urc
a9c/3f/DZ4c+/+SN11/c3dvTASapp6dv1/aBN17cduXj1wD/v7v69len39z/
8lNDcEVdpAuptau3h9S0EDE0psgHAZ8J9fx3nAej6BjhAajERirGBcBsLzlO
4Q7ro+D5dPaQ/W4qoUP9CwK8pKqHNP+20RRDF5YJMTE0ZhIKEzqDlzgbEcfB
YDoYQ0Dwb8N1jfDQEP/BaKLrhJ+DITX4WY3RFmw0w6Q2+jU0cjWE2tFjQf5h
DPXEFk3gDo7shB1MAdPjxB3AG0cPAgfAAfiDRcCFTwasCVoNHIIJV8hkookZ
IqKm7Yj5gPaYAiCR/+raysqqGuBIgcowNQHwV1sTrq6pqamtr4vWRQO+UNBf
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
EUJAJNifBIUUgkfaou2HnH8Cf9on5C8uqSwrJ9NWTYEAWQG6SVagsiJQVlqd
S79cf3Z+fiHXiCnmXb+1eXl5dKSivKakuIIXgstramo+//zzb8+f6b/Xfe9B
153+m1euXli3bk16OiPaqqqqctnMfocx02XMcpus6iSXUUUmwGXVe5yGTL+D
8J/lc0yabKfRZ9Pm+2x+q9IiX+QzJOY5FPl2ZXmascxn8+lTMqyqbIc23aby
WRR+u5rRRGilqQYFRQFMBVincBsV+anWAq+1xGvxmxUuXZJDJ02zsfpvmkWX
bjfr1DFKebTRqNQrkqzS2DwXU5y0qeX0OgH5OxsTp27969Sc5x+rnDD4u7mP
9c2RdM8J75k96M6sQYT/96cPujc1nJuAsL6Jg3pfi+iZQPgfRosMAVuTIjpf
lnS8LLnyquTiOAbXt14NPzd+2LZXh2ifCI9/bvQLzzw1avQTiudGVrw+fuoz
g55/cvSzzz775tPDv5z5bM+Mx+kFKbi4NpHsSHjXa4NpdU4YdGt8xM1x4bRu
vBpGy6mY5ZDONce+Hf/hWx++/94nCyMjY+NiYhdHxsaQIZAqU4pK8nfs/Pr8
hVMXL58m/3/f/u0rVrZnZWTqNHqlQqtQqhUatcqg4fwPrPNTrtaodFqj1UL4
b3XZIPtlsFgh/gLPH6wIBI9w773+XNH/ickvpN9pG5wLGKCDEDxvoktTcDWI
/k848/8T/oP5R7SPInckev4FrdAf7EMDzG8CsUM4P5nOL+wFlH+R/ye0Z62t
vgyyDnQTgi98xpn9uay8QtDE8V6g4FhZbmERKxdytOEzoc21ja31LUuA+Szb
Qw5/2zLssJbs1j8cVMHn9kifP+59pO0HXhztQNcJLF6E//X0xEAr/d1AQ3tj
S1A4DPYFcCTkANDQSFBGEMrKmtVM4hAlbEK52pryHRvbey/u/vXm0f+8feIf
nUdvnN6+46tVK1Ys430469uXNG/dtKrj3PZfbu395+29v3bu6724a8uaQF1F
UUV5EYEKyyY1NlNEQT41QaTo7QnFf0D9AE19k7iXQBIUEKGWAgdbltCzWhAO
4Ck8cFgWmvAXBRRx9WAHwfNDd6FxlMVHrKRbQ28VVAkE+MVltRXVjUGB0fIq
+kBR4oEWAJo/kf9BIoiR4XPB3PLyyvp6xqhcWVHL2JUb2kEHxxqNqgNIXoER
FAEF2Ln5G8ZaAqgXmR/k/GEIBJ0dBrvoUpDtwNQzY3nlWX1kEUNzR4iARO1b
jJDjJowgfXMA/qD9FPw/tCXkJ/ynhclKsgLMEBSWV1fVcyIgdu48+Z9Nzj9B
PfnzFBFQaJCfV0zb2to6OthY37Jl89e3bl7t7791797NO3dunDxxuLysJDun
YN26z5saA5k+u9uiyvaYyUtPt+ozPDa7WWXWy5jz77Vmp9kJh3NSLRlOfYZT
m+lQ5LiUPn1spjGhwqvNMSUWONk4cJ5TQ6smz5NhVeR6dAVpxiyHngyKl0IJ
h0krS9DL4l0GOa1ct5liDY9ZZVTEG+QJ5P+TddAlxxrtapUixq2VZpjU3CgY
nGqFzaTUahNdys8qTPPPp3y29aO5qlclG6YOv/zGyK45g27PHXxnzpB7swfd
mxlxf0Z4/zTJ3am8IjyZVwQmSW5PDGOSYVOH9E0bSqEBmYMbk8OvTwvrfC2s
e8LQc+Mf/+qlwboxo995fNCYZ54aMzi87JnHv5r1wlsjJa8Mffzpp5+dNWLQ
2omjb0967M6rg26PlXS8KumdMOzGWEno6ng5uCzy2ca42YpPX58/b/Z7736w
KCo5Ni4pOT4uPjlJqpBbnNbW9qbDR/YR/l+6cubbb4/t3rOlqTngcjgVMrUs
RSWTK2UqpUKnkqt1mALm879avdlEzyX8px1O/myDCaAd8vxRBSCEBN66UjNt
Ti/r/PFlDEyEMeQHEQQoQDFgG4r/wPz/V/xnETrP+RD+i9qBmCZGWBFa/w2l
fRCqXijjkgljPT/csae3anOlwudHIygtUANBDt7tJWNXCNNDZgJTYLmFBWAM
o4XxZGgTkDNZVl2HEjD9NGlhHIBsAW6y47zJB9ke4fMP8Ak3Ctcd4C9+y/Bj
WUmxoY1+j+VlLKam+L2+vr2ujsn70p9GQhgeIPL/DBsbmukdkt/Lc90ss00w
S14d/H+0tTDpw6qSTWubbpz5+tebx/7vnW/+q+90z4V9B3ZsWLWaKzmuWrVk
WevmL5dfPrX5x45dhP+/dR/ov7pv++d1rbVlrU2B2rqqmkBte/vSdj4FQOgt
1NIF/iMRtGTFSowGg2kT9D6C8wcNP0Ishh7M/X9mAtCQg6wRY1rgbj+sgBDE
wUHBlSqiJ9ph/aJ1jVzht5HT++Pca2rqWgn/yYCS+c4pKAbIo9UH+R/0+uIg
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
uqSctcA0EezSCzU2BzEfJV3BAg2Xnm6C6hnmADUCQQQXohcZLGsuWxUUwEIa
HFVOOkE01XAsDVY9eL9NIzjuUBNnQ9C8/MG3DZg4EDQOA8w/ZAiqWRNXJSsH
kDUfIB4ph8I7LTyeHpxbWIRwIKegEDShKA1wyXhGVELWB+JrSEahAkv7kBsG
AkO5jFkKJsfQIkreLNUzwAoo+jZDb6KPFN4+HRG0cuCSEp1F2IfwjUiFiSkA
stGE6tU19WTD6GvBxrcbm5naY31jbaCRPkX6eZLzTzairLy6vKIKzZ8E8lVV
NRT15OQQ9JcS1GdkZNE+LeC/x+Ml8Ec7KJnNhvqaHds33+q4SCbgp4c9D+50
nTh+iH4uhYWFzNaUVqQ6HRluR6pFm+k2ZXkY50+qTUfee5bXluNzkEVgOu9u
ltVJ1UtT1fGZxuR8izzfJGvKdZf5jXleTbpVmmFMLnbp041yozxaFfuZx6Qk
YCeoJ2CnCCLfZ7drk2081kDnv10nJ+efHuPQSV0Gqcskt5qUer3cYdXRY8oy
HJXptuJ0TabXoFbHe8zSOlvcZsuivfIP6iaMzH1Ocmre8z/NG3Gf/PzpQ3tn
jeidEX7vdQnAH/h/d5YEegG0KATonCG5M11yf+qw89PDHk6O6Jo6uvXVke+O
eOqVZyJGjXzM/eJz56eM+nbKY7aXJDNGPDVq5Jh3Hpd8Pe7JW4T8L0tuvTqk
Y+ygm5xWtGv8EHL7O8cNpv1br0Xcnjns7psj9FHvRr0/86N35n4y/6OExJRk
uSouIT42PiY5JcFs0be3NR09tPPSd0c6rp26cOHYmbPHN23a5PP5VCpVilyW
kJSYIlOQCaAt8J/An7bA/6D/b3WZbe7Q4S+Hx+3xpfkyOXkOT/uT/w8iOEJF
Qekfiv/I/Pxb/Md+wQDzsyB5hiONlh4UhemISP6Ith+MjMEEiNIzUkk4zsvT
foJ39HOKrn5nqhetm3QTVWw+wpbJ21lxUswo0F3MrmUHz4u9eU74RtusvEIy
ARgH5rzB5ejk4UjeXBloJBMAFiCR/6clPH80roiWftQoBdU/4T/KB6GVX5HT
YPkf3v9DgE+/UPRykAmoZ2blj8YhwJ2QMkcqgzAKzZaEOQzNikoKigqLS4uK
yqtyi5gO7IqWqrN7V//QsZf8//9z++RP1w+fP7Jp85fLV65oX7Vq1YpVKzes
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
gQgwBlFmOxr+YLzHU9DvgZEfhBKCAAGhAeR9edGTKf8GyA+orwPWIe8NVxYu
K+t7qawoLmWJDsL/0qramtrS9WsCV7/d+cOt4/+8ffrXm8e6v923Z8u65e0t
y5euYk1NLc0bv1hx+sjmh10n/t576tfbJ37sOHRu3xefL2uorikvq6lhDTNN
jU1NLbU1DVy0dwVnb2tFCEBO/sq16yABBvAXM1+8yWcpiCtB7yMAUGjloEMe
tAks+7E02C3Z2LI8yJjdjCnjpULmWKhxlVcHeOdns5D0oiU0f0H7j8YeJPzJ
HBDU0yLMhxWgRQ5zbl4BvVt6GGgA6ZGoAojXQTTBxoo5ozXTixkg90Z8Bz+c
f7gM0snY0fnSubAJX9a6s04IR6LUK6a6CNVFww9aiZD2R1GY7kVySbD9iK8N
YkOMg9HfbW9fjcnBGjJP5TWc9rmqtIQseIDwn6IDWoT/2TkFlSw4ZPVf1tVJ
V4MLRNI+qEDT08kOZIMUAoGA359BR3hwnZ+VV0jRBD29sbF+y9aNFy+eefCw
98ef73z/fc833xxpX9LEZnCyC3OKay0Ou0IpNerkUGkn2Pc6zakuK4j9fU5j
hsuYZmUTXm59cpo5JcOSWO5WBlyyQGpKhvazkjRFnk1eYFVlmmSp2gSrMtas
jKWogV7NppWypUuUxy+gHbsuhVA922PymBT0ahZlikmerImPdGpkboPKpE5W
SKPVinirSmExyE2GZIch2aeXpxtVOlV8nHyhVpu8XPfx4fi5X7z+as2fh+1+
e2THO0PvcHUAlvYJln0j+qaH0+qdFvZwRsSduZLeGZL+iZLueZL+aZJTc/+U
MObx5557ZvbQiK+mP3V3/LCu6YO6J0n2ThodN2LQn0eMiHoq/MDkkYT/bI54
fPiN8eEPpz3RPfuxhx+92Lfw1Vvx008snrryjRc3zJ+zW/rZO2+9/fHHH5Pn
vzgylqA/MppMwaK4xChPmuOLL9edOHnk8qVvCf8vXDh1YN/+QG2TVmcm8Cf/
X6UzDhB+qhQ6DZkAugmdd9pC/xHijyj+MvznOEm+MMP8NFZRpZs8pVNI8Mj6
Z6wOgf9iIYH/v+R/sP6b/kthMMkPtCf8J1sAP1+AP/BfFH9DRSdhEchXZwfT
gt3+nPM/nff8p6J+QSaAAhnCf/L/6c3zlUbgz0ebPWQmEArRTSb+OFACQPlY
mBX6+WNWCP3/oCQqLqstKK0kSC2tCtCiXxVty2vqCdVFM4/o5xdIHkR+FAXq
mujBZESEHIDI8wQNB+8OIrOCP0GPJHtBR6AIBv13jM2i0V14vELNFvlwFnEE
aotLC1gnfE1dEXmAdWVrVge+O7v93vWjv3We+L3r5L3rx4/u3bxq2dK21uUs
KmlqXLt26bH9G+/eOPZz94lfuo//dOPw1aNbNqxoKCtnDSJV9fWcTaipuamd
0B70DugCGnDy/9D2Gkj4iLUcTT4MEgccYOSxRRuMGJhlqe8lwj0OJj144LAS
4I8GIdoh8KdVVlVLxhpGELQPtE9wzdM4LG9fWVtD25KKcvLhaZEzT2DIvP3S
ckJ+MgF0k0IAwn8MfRDy0xeALAi4Q3kFgTFI0BapJ5QJ2NXmcR8EnWH08Wk2
NK8Azxs+Vp7MXxVoWCqkwVDbxeQapCGhGU3HAebAdlEXhp+PgBGXKLTHQMyD
L126NhBoLS2traxsKGDavozqrbqqvqKqsoZFcXUUFJSUVublFzOai/KykuKK
vNyinOwCpghQVO73ZRUVltFNr9dHJoAMAeeCY7VgtANx41iYnc9SaRVkAKoq
6Ftw8NCuG51Xe/quP3zYdevGuZ07NzU2N+WW1JTWLUvNzpJrFCajJiPNxjVc
FKkOk9mg1iqkHosx2+tOJwTSK2yaZJdB7reoy9L1xdbEeresOU1W65PVZuvy
7bJ8kyzHrMi2KDIt8rIsZ5bbaFEl8ppCik6+yKyOoyhAL4s1yOPoRSyqBHns
p4rYaE1crCExzpgUr45bLI9bJE+OSkmJtsbE07M0+hit9jO7apFfn5hqVSn1
yTKD3KmMWZ784eHED1e/PSXwsuTM3LD+N9gsmMB/gH/P9DBaP04b3Dcnomda
eN9rYZ1vht+dKjk+58XoUY+PfeG5D4ZFHJgx8t6fI65Ni7g+SXJ86lPKJwaP
Hf54zFOSg5NG3uYkEp0TIm5OiPhh1ohfFo79Ifq1vqRZu95/oX7aE19EvrlL
F7smbv67774bGRm9cOFiAv9Fi1nnf2x8VEJSbGFJ7o7dm8+eO3T+wpGLF46d
O3N825btRfllhOoGi53gXaFh4M+lvnTYQTqIdjQGI3JBBIYoCqAiQDhJ4M+G
qrKLhGYKLAIW7Ytqr0i5A7e5TGQeGKH5KxSgpUfQtYHPXxABCSH4UPF3liPi
jfehE2RYgvBNqMzA+oiZL0HgDM8/1e/DFLPNlYoeJ5uTEVmj55OPAKSB5oKW
M9WTlpGens1mh8EaR/iPugOmEjCVjP5/NCbRFr2dYO+HyIggc0Y2QPT/gJxT
DK4SkiNlRBFEKC+E0BARTEGY+hF68SL5w1cL771H8icI+4R16H6Eo8uJ7mtK
mSJKTaCJPay2roZAeuXKxlP71z28eew/es/9fvPkT9dOXjy2c+PnSwmq6bmE
0itXLzt8YFPftYO/dh36vfvQTzf33zyx4euV1VVl2RWVJTU1VRUVZeQrktVB
siWUBUI08A+8w2bB+cwb/pvRDAnFW5HKBnMaWHGQ7kYzPMBQmAnsw0NGVRRJ
D0GyivQLXVXMkiA5Q/vZ+Xl8Fqw8pyC/pKyUVk5eLi0md8j5jYuKSkoJB8sq
aMs0bXPzyRZUVdeSXSA3nwwET5vUgCAITUdisA6XeoBxog61G+hECLYifKZC
F6C5bXVjCyscIzdIhgyT0a1LmRADN+78ErGxgqVCDFREizCdYjIawyNoBEIl
uqF1KXSBq6rrKQCnmK2psb2inPUB11TXo8mTzihQ11BYVEYYjnkcNpjJlR+z
c/IKCouzsrIyMrLS0vzk86Pzh64SpsPoipFdoHvJQEAdgLbt7UvPfnOyq7uj
p6fjTs/1zhuXNn31JRnTJvpc6hsJZxQKmdNm9NiNXlpOckDVBq3C77GZdQq1
PE4tjdIrY51GWa7PnOVUZ1qkZW7ZkmzdEp9sebr88wJdS2p8uz9lTZGxPUvZ
lKFYlm+qdkkLDdFVtqQMY3KaNtEmizQmL9Qnf6ZKWCCP/0SRtIDQ3qaX61Li
rOokZfxCfUqMIn6hTh5rTopyyOPdWqk+KdKmSXKZ5C6LQquM1ZgURl1KqVb9
lfKjQ8nvVU+QrBonuTTviftzht5/a3jv24O7pksezAzrej3i5uzwH8ZK+ieH
335L0jVT0jc1rGeapG9m2NYZT/1lzGNjRoxyvzSkZ86T378cdvslyZ0JkhPT
n9KPGvrK86O1Lw0+Ofmx/nESMh8d9Gp/Gflb5LhfY+dcWjDh8788WzVr9PoF
b2xMWFiZ/JlFvuDTTz9NSEgip/+zhYsXLoqMjY9JTI7TGpSNzXWHj+09f/7o
xQtHv/3m0ImjB9avXZfhz4awL4F/ilKTLFdIKehSKGkHnZ+ggONykBYsUREW
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
D/r5wV8N/EfyB86/0DWjHTxMFAi4yfBgaowLB2TBtOUWlNNZpGcV0kJSC7kp
dEqLLlBB7CZIPlGUhB+I0ADuPca+aAeUQegCBYkEMkKYKWaBwICoHzrY8dNG
SzlDFU6DPEB3zKaACe7yikrzi8uE/8/T0YRKlfnFRVzcqiKngPUu0hsvKC1c
2lp9eNe6nnPb/3nz0D9uHPzh+qGb5w9+tb69uZXpuhBa1tVXb9u8+uLJr3++
eei/+k7+enX3ne+2HtzeXl2ZlV+YR3+ONTrWBCsOyO2IGTSw/WDyC4Vp3vC/
gnOTMjI0zAJA9JacXmR4RCAgGj4fET0M3Rdz1sLUwvWFv425YDpZXA1mdwL1
Im/POlvI2ycM5KO+tIPSAI6D2YyAzu1OxegrMBDdocj8wBYwXRgeTXB3ugSB
QKCuiYIs/tE3VAZY6Deg0VAdaGzg/bHsDcOBR96G3nmoaRNzH/yMVjCxufo2
YfWQ3keTJ9RwcNFQMkDhCcLTeCnBSorm2MKCMsJ/3sOfm5eXR28bgw8l5YGi
UtYolZNblObLpCtQyOrjZcjw0Fakeny+dDQFoRcUR8hQ0mvS5fJ6vXRJmUEp
Lv9y46YrV7/r6bnWf6+DTMDly9/s3rMtNz/Ln+HzeDxqpUotV2jNRkIjQnu3
RZXqMOm0So1a6XFY/S6TVhZnVEmdJo0qOVaeEBW3aL5BmWzSygm6090EVRoK
Cvw2k1urMqckGWSxyZEfK+MXkgutk0Yz5n+7zqFL0SbFGOQJ5EsnxyxQS2P0
igRVYlTy4k+UCZG6lLjExR8pExbZ9VK7PinNrspM1ZLVSDMpvRaF05BIFiGV
YgplkluZotQucEvnfSl7f8vc16pGSNqmRJx8b3TPxKH3CfwnSm7NllyZIbky
UXJ32uMPJg57MC6sd9pjPdMGdc8JvzE37PoUyb3Xn/y/CbPvJUw7tXD6lnlj
j0V+eEQRv9aS7JR/ZDfF+SwKik0o5LGZlCZdikGZqFewaQiDMj42LjI6NurT
BQsXRcckJklVGiXh/44dX548vvvU8X3k/O/etXXpkjYyvnqKnPRWkPwT8pMJ
oAX//98Wf+kmLWTFkRjhPj9jBLI5g4T5oiMUQvCgXEBpgHEv+LPTM3IF/iNV
MtCuSbBflJVbEor/j3C7Af+F2pcoBCNS4CJc+RBhJ+ccgI+pXs7qwHx13t7v
FZ2cIHyAD4/ZXlA9wGrA2xf4L6wGrEBaRjr6f+i5jERuQNSeTFh+EYtT0L8q
3jl6y0OVZ5HeR10AEYGoUbI8bVMbIXxZdR0tcAeBNQIJ/6BkZH0zmYDSqkBx
RQ3SSsKIhJiVBlBAE4zQQrKlKsDmvJhCcW09PG0k//lEUoBMAARQmIQBI7Fh
JqC9ufLgjjVd32z7/cbB3zsO/Nhx+NaFQ19vWMYS80uXMMbItsbNXy7/7sTm
nzqP/qPz6C9XdvV/t+347hWNdQXFJfm1gUYCunpGPdGAzh80QCIKGGj1WQbN
F/rraP7nNHENnLOiifPhsGQIWuUJrAgAyfNfsfpz6N4KW4B9ACAeKRTBgg2x
/Lnwlukcaxua0SIraLGZ8CXHf4z65iBNkVdAXi7BPm1pH7YAdqGQVwcI+QnQ
kP8ndK/gJPlIEBFg0gPAjYmgAPjPLEJ1XXFJBe+9JIMOju4mnp2r5UwdLDfF
NMJCtICRsaH3v3LNFxh/wJbPvhGw03kFp/+gC4PaB04f5kPYBegOoKQiisKi
LsxihPLaCqbfG6iqqqquri5j/yqYOSuppsV+g7mFuXlFmVk56RlZ2dnZBCzk
28MIEs6TTaQjYIGgm7RohxaKI7w0kEdXuKS0ki7CuvVfHD128Pr1Czdvnv/7
z/29vdcvXzm3fsPqMro8VZWpqWkaldZiI99fQU64WZVoUKfYbSa9TuV12TO8
DptR7XNbWQnYqtfIE1Up8Q6zVi1LsJs0XrvRqlMY5ElOncquUfisRgv587GL
bOoUpvyiV9JOUbqHtnppnNNAUYCUrAl5+06TSi+L1yXHuk1qqybFok5ym5Sp
VvLwk226RFra+IV2VaLfrvbZFWZlrNeoKE5zpNErGJNsyoUNKfP3RL23atqY
8pckW2aMuDHz6dvTH+uaPqhrdsStaUH9365Xw26PD7s9VtI5XtI5iYUAv73z
9H/ET+tImrF5/ktL5j59JO6Db3Sy5cmL/dJPkqLeVCfNd8lirTqZw6ikkMdj
1dK7smqSjYp4uy6F5f+joxYtjloYFZ2QlOh0WZuaqvfs2XzqxJ6Tx/YeO7xv
86YNFWXlZrNVqdCq1AY0/KPthwwB2j7/tewbKvhLqMjJcMCTwJp/nB6W3hEh
AJpCMfwLE4BasD89h+E/4aQ/G9z7okWf50wIzMtCMV/0/CPz8z/xPGMf8lvQ
9iJ/JMRRF0l7HxgecFPgP91EXPCIrj0tUD2gKMxrwezEwf+D/n/I/voyc1hx
mVs0YP4fzKU8VYW3jSkA+FdYIHmGOYDHDieN/fQaWgj5Sypr4f8j+f9Htofn
gshAgESC3TvwyxWswgMC6EGad+C/6K4hbxwECGQIkI0f4IVmxV86IujR6Ait
5sayvVtWdJ7d+lvHgd9u7Pvp+qGu7w7t+GpFc0ttU3MdhQDt7a2fr2s9c3DD
9x2Hf7t5+O+X93x/afe3B9evaC0rKy1gTGI1NfX1ASaJRa4eRQKsGakBbT+w
QVBUYRwUXJJgQJWgia8WfnM58B91TJCeEQZiCgwVAdwVqqqAAShhNcSsBLxf
5HxwHdANG2w94g2cYHgjhOcYVV5QyPgfaEtWgLawCLACqAUT7iEjRE4++oKA
/Oh7p3tZEYFHB8gdMVtQUkHeL31V6AtAHze9n0BjkCMIppDwnyICEe+Etv4y
N36gLIJgh5MItfPVCpdeAD7GikEKQU/HVRJxBL54+B4K3Wr2zaQvank1XY3K
6ipeBmFcqmyueSD6zi8oKSgsJfz3p2fC8yfMT+f7hNi0kPYBFzSdMsE+WQGP
x4sCCtlCupiZWXnpGTnVtTXLlredPXuUQoC+nit3+651dl8+euJgWXUpOSF0
QcjnTEhIMGoUTj1rznFbNA6rQadVOG1sOtiiV9Ii/Gd2waTRKpL0KqnFqCK7
gIM+eoxalpvmKs7yqZOitdJYsyrZZ9WTLTDJE9MsOqtKSsuhVxDUkwkwqphw
MO07me1IcBrkqRY10yOwa1ymFAJ/igJUMZ/6zCqPSWZSxNi1iRlOfa7b7NUr
PEat26DL06U0ST/YsGjGyunPNo4J+3rCyG+nDr4ybfCtKZKucZLeCeFMyeW1
iJtTIn6cPrx3ekQ3gf+8Ub/97eXehDlffvBy5ZwnT2kit6pjalWxWeYUdeRf
k96ZGf/enNio95hgpSaFohKXUWXXSj0mJQUvtHjzP2N+WLgokvA/M8u3fv3y
40d2nz118NTxA4f27V69agXZX7lCkyJTKZRI+6tQBVDrycMnkLdxUgjrQJ+/
TSwcIYTkIUAqd/UJ/Anbc+H/ox0UCR/4/6GLYJ/A359O22xeis1gPZkDKl1o
BMKC8/8Itz/2Aa2C5w1lVmZEOAOnLzML+R9g+wBdg1cUfAWNm8j2A+RB8kNb
5H9w4igBI/MPE4BX4/kiL6eAyOH4n4X6Ap0OvYfcwhJRpxBSNRhVCGGEC04E
CEddmAOwRgvPH8Q+IIsmt1+0LwoJYJC9IJxHzh+FY+R/RMcLMy68yx2N7uh7
5MrmJeQDA/BpMW+fiwIgEwKaUDpeV1u4bWNbx+nNv97Y+/eOvT93HO69dOjA
tvWrV7cSVDe1NC9Z1r5+bevh3Wv7vtv9282jv1898OOVvVdPbPp8eW1FcW5J
MRueqqgsAdEELAs6f8DGj+Q/ekEhCgbZL/KB65oa0RqELne4qaHNP48k/IFv
giRNoL1ooQHrJi5RqB2EFEJQF4CR3tRSCFBaViGoPtHAmZGZjWlfhAOwCATs
qHKKFiA0BaEThnYIBgkDoYpF+F/KWDBZjZieTt5vQUk5fSj0iUObjBamIcg2
QbYS2p3cNLAEESTP+MNaoSAPSIffjkyRGAFAo6zIhol+IfSR0pcEE3BCGRnf
IsSkrHuhrJLzV9eCBwmq9/T6aJQtLWPEzqleXzov+NJFYGz//JRpB/tkDpxO
N8IflH3pUqA1lLDIk5pGtoOuJBnSoqICpg7Q8d2d3qsP79+iEKDjxsWNW75k
c4u1tanp2TJpik6WrE1YrEtcbNPLKRawGDU2s8ZsUBLUO6w6rSrZoJXRTb0m
Ra9J1qmldovWY2ckEm6bIcfnyvDQw2U6eTzBu00rMyoSCdvJ7Sfkp0CAblrU
UtoSwNK9hLHk+aOUTPhPPjaBf67PyjTCtAlmdZxNEe/Ry9xsZDjWpIq3aZIM
ydFGaYxbLkvXmjKdVqtyfiD53R0fzm58alDps2Gnpg+/MW9k9/Tw/ilh308b
3DNpUNfUwTenhN2aOujmzLA77z/24JNnOxe8tuvtV7766+ST8gUbpIt9H75p
TlqcmLgo6qP3jJ/Nt8YvkCfON6SwqIS2To00w6bz6OWpBgVFIgsWLFy0KHJx
ZHR0bIxcKSNva9u2L8nzP3l0z9FDe3dv30Ym3+X0yuRqmUrLxn5VelpKjVGl
NWn0Fq3BqjPaaIUC/iNWQDRG8v5PNvzlcGeK5M+ABKQfIwBA/iAJgy+TFjnN
tICWYGAW7aAE4//q/GPs63/Cf4wGsPQLJ2Eb8PPTRJMPkvxcpyaI+cB/ePXI
+cBSwDTQI9HvhLOGsROtoXgY6sUE+wg3UGtALyiTvMzITidfr6gUgjXolKA3
iVQPUv1YmD8Fzz9AW0QE0IsH7b+o/2JIHw8QE6ygEYP/JsJ20Vkqul/++IFz
/Ke/yw5yE8BlDSvBb4lJVeA/RgAKS+lIVXVl7qb1zVdPffXj9d2E/7/cPHT3
8pGTu79ctqSWfpqcJKFq6dL6fdtYjPCPTob/P13dR/tb1zfWVOQT/hcXFzJG
tCrklCqgPok2JML2tmXLxQgwnH/e80nObVNja8uATOQKQe8mVA5D9RAf6XUR
OIb6O0wt8m9/tIZyOjja8i7ZRrTlC9IeyLtQwAJOV2i70KJ9uly5hUWY7aUH
ELKhEAzMR/cLbAGtmpoAHSTcI+8X41FoBKUHwL4Q/rPPgmvECKliVu9uaYf/
D/CntwojyGiumbBOO5pF0SkU5DsdaI7FFwCXQiR/0FomGs8wEIEhaMFJIqpI
rG+5oiavuCyTzriyvKiiLLswPz03t7iykt4V/86UQw7Am+Zng2+8FRbzv3SC
aPhBKYR8fofDRaGBy+Whi0MPoC2qwGm+9Dx+HchCZmdnNjUG9u/b2XH13P3+
G3fu3LjVdenMuROty9rcfn9OYYnd6lAkx5sU8Q51EuG/1aQl599hZlMAtExa
OZbXZbQY5FplAjn/8qQYn9tK4E8xAlkBm17pd1l0qkSFNDohcn784o9lsQs1
idHqhChVfKReFk/+PwE+GQVdSpwmOcauk5NFsJN3rZfZdMnpLn2G2+BzaP1O
nV4eY1PEZtp1mS6DSZlgUSdRgGBjLaOx6XqlJznekpKkVsd7lQtWJb2/4d2J
RU+G7x4bdmXuqP+/r/dwkuPMs8Rmb2NvVlJMSHc6nUI6nVYKSRuK3Z2d2Z2Z
vb2bG3JIwrYr77KysrK8r/bed3VXe9+NhiEJkAQJAoQ3De9BAgThHQk6cIZ+
Zmcj9B/ofd+r+liL2VnEF4nsrOzqqqzK93s/934P/+qPPvvRH3/0V9/76K//
+IO//KP3/+J7H/7nP3n8ix88rvmzi8//z2/81ffPrfvhDcN2yFHdtu6/Zp1V
mqM2rHlDllqjek3SUxu2rw3aa2BlAP7NcSNnenNBd9xryRqu2mprXa0d6G+1
2yLRIGjd6ur+yxeOnz919MzJo/t275kcn0ml671+E7Tf4fNhBwsmwG9EjFAc
+B+JZ6KJEgdWwX9lAsrBH1ESE0vmInGRAo4lG1UvAHV+KmZslYatiAhJYyt4
AhY+cQ5MYa+usAIyeF4pCv1U/vcPxX9YKSTyCKL+s5uAL0dStjB7y4C/CgFV
tnrhICk9+T8rnbDlQVUISgOhAkG0Jvh1+hpMMQD58aN0BODcdAEuOFmmWygp
jHb1DjMFQM6v8r8q28uDatqvCE3IPC9WcVLYAmxLO2UPvXI6PNFMNXyR5Vbe
8pUjI/kniIeC4AnBN7EIO6D6UqxYCNcD+sSEdNGatFAotL/64tTN869/dffw
b+4f+e2j06IE6OSeHS+Cu0+DLQ+PjS4sjB1+a/ODy7tF/efto1/fPvLR9YOr
b60sTRfGRgujQg5tlAO2qDtB8KeLwXQAu4AZ92Cqgt3KOCiLRQUMkupXaj5v
felV6kLQBCiFH9XtVQqpld++0oUQARNZ/MOx7Gw6YB0U7SDHfin1HkpkME1M
W8BZnzD9AD2Wd1IgiIaAtUBMB7ANlvhPW0AaDN9BpBL6Rc69s78f7pgg1VKK
gQqfQvh6ebMalIwtO6bL+kgC/Cn+IK5P2eWhP0hWgC8JGIiSSKL7WfqalRVI
6FSW9AbLRWgUxADO4z22Sa3P3kExEwGfF14wJf3pBDEINjo6DraPS8H4P5k/
A19g+MlUBvc+jAUsBRb2Be2HvejuxUG4D5lctqOjbXCgb+uW5Yvnjn/w8Maj
+9dhCG7fvnr8xBG4HiL02tQWC5l+e3XIUwdU1D2OmKlnE6GIodWn4zABIV3o
BQH8g357IuINaU6sTNSIBjwxwxtwW7226ogu/IJoSDP9LrdlYyYc8Fmrqfwc
9jtgAkT8x+8Cu+aYsIZUKBPxAvxB/ruaEgD/RNAZ1W0RvzXiqkr4rIazOuiu
hdcABwFmoiUdqjecaW9N2mXN+PWgr7bBfPZF/7M7f/Tnr/yH753+f79/52++
//DH/+re337vxl9/7+FP/uTDv/nXX679bx6v+d+O/t2fjf2vf3Sy5oc3zBc2
b/z7bmtV0rkR7zQZ8Cedrq5EKOa3BGwvJKwbPLVrfDVr8iFfOuCCAxJyVOl1
a7EcVg/w32Kx2Z02kNYd27eeO3306pXTV86fPHty9bXtO7q7+sORpEcL2j2a
1e12uP1YTo/u9hmwAnABAP5A8rLsc5xpX/b8KvynTr6cBVDK/5L/S/H/NqUC
KlX022kCRB1mfXMu35Cvb2xoaiRgcmYiR7EwmPOH4j9/KP+rJkICb6U30S7j
PI0s/qlU7C+Pd/8O/xn/Ib2vTP4ydgTmz3y3SnkwEETToJLLMhxELTiRd2jt
7CD+40bGS5LB/9Ge/iK1QCvbwSpDQEqU4LsRsTLnOzG7iB1KRlM1Wg2IV4Nj
uCpDuErThj/yhIouY/gCi3TtWY8E6JNDskTYoawLCtLbT/nioZGpielNAwNt
L28eu35u5xd3D3177/A/Pjr15Z2zt88eeHlldnZyAgAt4vbTQ3vfmLt7YSdO
+Ob2oc9vHfjoxoHTB7duWoD7LkR/R8bHyKipuk+Ep+Q+ExBK/JPRD1kgBNsw
w1yA6P/aLAIam7ftUA1fVAHlUDAeZFCIvVE8h7EOMl6aD1YBcSYy++NwEVQ+
ggWxnOcLE8AIGJUr6CJxKCRzGfissYBjLPVn5Ae2oK+cFKAV4DAsNpExTMQg
Sf/AkFCZkBpxwH9OjsY3vFCcnpxZZuJGDUdjcSwVs/kjVUDl1MhlykFQHwmX
QqkecSoEHQH6g8oJ4jcER/h94DeHHStKCgnfDVwNyQcKIAbidfaW9K6xAyQn
/nfJli6GuWgFqPYJhi9+7O4tEb+WtlQ6CxwA+KczOdEU1tldwoTmJliLttZm
eIu739x5/857X/zqg2+//PDJx/dv33p3//69sCo9w6NdXV1eRy1MQCyghXRf
PGRko6GGZDwXC9cnorm4KbO9vlTYmwx5YronGzHiAW/Y54QJgC1ImBpWNhvN
pSO6z657bHAH8jGzPmrCBLTm4wnTC86fDvqSAU884I4HPXi2pOkSE2TCnnzc
35gy6hN6ysSTO2KeGlPKhOJMr22j31kjBsdkzKzpTIad2aA7Zas1PXWRmKXD
+8JLa3/+xk/+931/+W/e/dm/ufGT79/4+z+9+OM/vvaz//b23/3g87X//r2f
/x8r//HfHlz/3MWkd2LDjxPr/zYctLr8tb66DTmrvcHrTMVdeqg67K9udluT
oqm5ym/b4N74nGHb4Kt5IWjfaDqqLDWODeuqbTbRCDw41Hv06N5L508A/9++
cOrU6hF41NlMo6aFgf8ePegOGi5v0Okx7C4dC/s+HV5AMhTNKM0f9oKpdLCK
inNOigz+dza29DL+T0VoBf6y7auN42BE+1W+KZPN5+rFp80QCsevl7R6KsR/
fr8E6A/VfwJIWf8DsJUxJWZ+G1XBp/ICpG5nqxJ8Y1yIER7sqNpOPMREsHqn
qh24bPjqWRckZlVI/ec03hO+uviO9/dhYUeqPhaFJIVoBCjK9c/Xf6r4D3e4
z1Qg0B5ewPTCJliBkYkZRoRIX3kLl4fLl2YEKGU5Yr5SlqgcJSxrgeAmrNDQ
0HFgxytesAwEjcjifCF9xnFgMi9f7OtreXFT8d2zr31+5yDx/6u7Z+5fOPTG
9i3A/8UlQVCnZgpv7Ji4eeblb+4ewDmf397/0Y19Jw9tXZ4HMsr8KaBOMmcG
WCpbj7GvRrGT7dME4JVMzc2S63IQAND+xe07VcG/0vlUutAM7FQKoOG4qKss
J4LVVB02x8mxyAuwdMR8tsWB33L+C5CZSv74EQYCrxxoTwCkCaA5A5KT/HOH
nB9LDUNhrJuJUTJkwOOgrCmFaZRxpOH23m48rbS5E919sAJiwqkUpljg/Pqy
ZNwsR1iygRrWgTVCpQBRucyVeR9cLto+ZsCV4VM6JIyJUQpbSZTzu4qTh0FX
hopC0WhyQsoXFTn+pr8whCWuz8AQALxTfOVLgkh4p01NLbRu9IZEwafk/MB8
WApYgXgihX3xo5j60QNEgInoHxxobm4GQezq6FxanD92eN+HD29/9vHdLz57
+PDO9QvnT7/6yvahyTlc8PpsAmCeS0bT0WgyYgL/m1PJtGk0xKPdTTmQdqCx
CNeYHqB61OdqTIqOMGxTph+2AIQ/lQqZpjeouyKGN+x3pUN6LmykDC0XN1Jh
TVT7BDwpwxvRHI3pcCaqdzTEGpIB4H9LNgQTgGcGzieD7oxmzQScmZA3prti
hjAWhqdWd27MGO5EysjmzZSvKuGqNj12o+q57tpfvPjzv9j8f/9gz5997+IP
/+TsX/+rMz/709W//tfnf/qDa3/z707/+H95z7buZiK21e1q123JhMMM13i9
dSGvrT5qxCNOQ1+fDlR1ZPxhXWjQxfx2+B1hb13EXQsTgG3YVVNdXbuhprrO
afebOu6nM8cPXb186to7py6eO3Zg7+sD/d3hcNgIRgJmzIgkfEZYyv6EvHrQ
4zewsMO8QCAkWgtCsSS7X6PJDEfAKM0fpfZJzZ/KOn/G87EPV6JsIDpLJkCm
fYHMbA1jjwD1fxjGUbkA4D/RnrI/lX6BkommanRJMqiTmj8d5Rbg9sohL8R/
HGRVpwrpq2p/mAzAeDILwM/G06lQDG8/ZEaFJh77ndn5RSPCloGyrRFPy5m/
+HJ39PQzriWywAMFStJxSAEAltUmdMOBP7jF8O6oPIzFO1GZCdUmpqY9Kv3e
SvdclX0yoKRKgGhHlMqcioGXfn2iBH1MB8iaQ9H3NDgKUzMt0m1SxJL6xkL0
YKh/abpwav/mD99966t7h3776PiXD049uHxg/86tS7NTk9LuTEyNvrxt7MKx
lS8eHP7N/aPfPjj25Nbhmxd3vwxrA8NSHOnoHRwcHR2emCiMCy+gIOvhZW1h
qQFZSQDhNWCxVQH4zypQPsoE8bbtr25+cTssgjAKZcIPfOMFoW1VUTJcCmI+
VQvU5RKF8eXQ+uDIGPO/zE2wSAkvkin+8kyfEYX8OMLsD9MB1LcEsFMRDtgu
9O7GJnCQ1T4MAXV0dDE2UpBi0WDF7R1dote43ItHWQnA5sjweGFodLgAIz0/
PjaDV8UiKCpm4zowXa4oPcuiaBDpBMEnYjCQHhALgcgcVMiRDgK/VKxBwnak
ONnVjZeDi7E0PT1Lj6aynW1IapyKSV5jEwUJ+KztYeBL9XYxD4JHxTsaHsHd
oZJlJFq4ffCLLBPFlklhptGnp6dfe3XHjauXP3pw69P3b3/6kagF3b33tf4x
oU8+ONifTyajuhbVfaLyJxoI+KwR3Z0I6iGPK2XoIYc1oYF+e5qivjzA2Wv3
W2sCTksy5M8kjEREy6b99TmztTGWi+uGqw7I3xiPJnxwGXwA9nYAnkzviqyu
3x6w18AjiPqdsA7wDkyfLSMqfIx8yN8Q9Ix2NmRldjgT1cTgYOe6mFEXcdZm
DFcu6solXfGI0IgLas5MPJK3/2Lwuf9n4c+/d/Qv/+jS3/73N9b9X4d+8oN9
f/unB378g0vWn+1zPz/pXZv3ralPONszwd5kLOquTvgt8Dh0V7XoPoYbEnRg
BX3VAdeGRMCWCzrTuiOnO5ui/saItnFjdVVdrcXliGcSL760cv7U0cvnV69c
Wj176sieXa/29nQB/4Nm1AjFA+G42x8E4KtFFTjAfjAS51AYAH48LUY9xlJZ
Nf/xKfwvS4A2suZHCT7QI1D8XwSF5LBIVn5SGprBIs5/UXNbKAqk+n+Z7a10
BJTMMsfHlEaJdXTLaFKp/6ss1FMK8rPOh1aABF6lgznYC1APzI+BReTxEExe
BlYAPzLkRZeBoSR+e1U0ifuAAn69KTqHF9PVBwe5QFVS7JSHQAnIrcRkwBGx
CBjFg+ysJDpVTgRQodrKCo2nmshU17DyAhgDV03HDC6x71W2+k4o9Ruh9lYc
B/5TI4iDDr8TNxjsnZ8eOr5X4P83D4784+NTv3l09sNrRw+8vmVlYWZCvhfc
5VtXimePrnx6a983949ifXb7yL3Le1/bOj5e7AV7xHUA/g+NlQIpQ1JLhzj5
lOwn59TgZSjBuvHpKQoBsTSIopdEb5J8kttKMb1K34fWUKlqKIVVXAGaQvg+
nPxLK8D0BN0TzoXH5wuWLk18L8dB0jXAFvgvTNjIqCr4BJoxIyxC33IAoor8
UEq0X6pDq/JR/CFmkyk0JKzJwAjW+Ng0bOukbN8rd3AsqoaFCdEf/JIahVkp
+0BvSAkEcQqYGh6Ei8OOY56AI6r4U7iQ4zNT0wtDhTHRCyw/Hfo1LFgCyAsb
1z/I2Zc9MsfNvAasG3bY5MWeaNXygAuI+4UpA9yMLLoWLTkNTbhWjY3N7BGA
44B9XC6hGT49eWT/Ww9uXv3k0a1fP3n0+PHd6zevLG1baulsHRoa6GzviBpG
UBOab6mYHgm6TZ9DFPb43GGfM2H4wl5LxGdtTASimk2zVRkuK3i+6XeJwTGa
LRqyJwDOCT/QPuS1ZEwtoXt1Wy1+K226xbzgoCOuW+NaXUKzwY6kg7643wUT
4HfWeG0bPXXrg26Lu3qta/0zOCHsrqqPeCKe6kwI59REtOr6sC+t2xpD9gbT
Wh+249mysQBeare+fsrz96+88B+P/81/d/+n/+7Wj/7t4T//k4M//R8OrPvz
1zf+eNn+bI9rTb1enQtb60PunmQo6q2JeS1Jw2WKfMfGsM+aDXuTht3UajyW
5/HnWhNGfcgbdlYL/TdHDfC/1ma1uu3tPW179+26cv7khTNHLpw9unrs4Msv
bWltbTZNgf+U/XdKzQeOffEFDDXqiwN/zWiCtgA7WLAIrPlhnEfVeXJaYiyZ
k2jfwsGIqu1LCYGKoqAGOSOSLkBZBY7nk/CrhlmV/1UjHZ/K/7K0vpT5ZROZ
FPykICf4Pwt1GK5R3VuVk19UFIgmIJpMAPATmTS2agcHVREUYz5M9eI7jL/C
55G9YKXZAXQ3cAJTAIAFFopIlCgyx0q9LzUIDEvxeVV0oXq4lAREJf5X3qqV
g2N4gkp9KoGXyiyAmikzPi2kjxnz4QsDAe4dHAb+A3SEQJwsfeSNL1CrMDA7
VTi8Z/n9a7u/fXj0//vw9D88OvfZ9WOnDu149eXl+flFPAOI4bYtE+ePvfjJ
rUNf3T0M/P/8zuGHV/ftfmVmfATIIDwgMH/GVeRU2VHGzOECyFzzGL0AmYSd
4qILoMg/JUMpB6fqIVVUX5V9VipgqICbKrutHLhAzR+gq6yDGiHas/eB9T+s
jAU4A/nxadLQswoIO4C1UixLNvkS7rhDHkujwC4wVSBEj4AzYmgCGEunH8Hf
Euf3D8OwTgo1nlJbn2rOVU0QnIDAbDiNoKr4VbVAKjKmBJ/5NVBT5Dg7kikk
kTmamJ2dWwb/LwyPT05OY7FtuSj5AG2cGONeHIMJ6JLvhVI/QPJyV2+zinTB
KIDk01nGjcNMHC4j7hRRepGrx8lsE8hm87Qd0mnq7u7qWJ6fufXu2598cO/J
xw8//fTRvfvvHTm6d3QMVrULNqixvkH3ehJhHcQb+I/VkIlFDK/bVp1NBk3d
FvbbEqZb99bCOxCSDiG/z1nnsKzzOqvDWm026mlKB1pz4bhuz0U0gbEuS0p3
pAI2sO6Uvy7i2mBY1+rVzyU9lqTf1RAJ5MJ62O/QHNVVL/w87LPrjhpP7Qu+
2ufC9hcyWpVrzU8TnvVtSX/asGeCtlygriFQ1xl2tgbtbXFfJuINBeydkboB
s3rW9l9e/cn/dPWH37/7w+9f+S///pztpztcz0xbf9HrXt8csORD1paEpzXm
7kwEWpJ60m833bVAftgpMa04pkW1uoCnWoiXBhxZvOuwL6O7WuPBhGavqqoB
/nsCPnzCx08cvnb57OVzJ86dPnro4N6FhblcLufXjYAR5swv4j/Bn+JvFH+I
pdLhWDpgxvxGhKWhWKFoSon8qCZfgr/IF8czMAEMBLHmU4k/qLkAlNMH/mMp
Fbin8L8y8q9CPQr/n9J/VmKhxH+p+UNtz2bV56WGdtEjoHgRTmOcnzlf7rOw
R0X+sVTjG82iyg4T7RlWwnPSpeXzN7biS97e0dPdMwD8H2DWTI4RFHk9ACC2
LARV0KSYqirVYGC/Mmmr4j+MWhPNKt0B2gXe1zQZPJOm4SnvgJWfUup/rBz2
ZwnoSGF8lHNvqX5P1BKktDA4MTW49425e5ff+Pr+4X98/8Rv759+8u7RK2d2
73596/LyshiqPj2+dfPk6SMvP37v0Jd3Dn1978gXd498eP3gkTeXpopdA4M9
QH7gqpiEImWQRYOtxH8gDAWoGdxWOnUMAckWgAX2i0mlICGPtmnrSxTJEQ2z
Uue5cvhjJf7zjSuHi34WybDAUhn+wpOw/4sJXwb8aY+48MoZ7YdZxw5TwARt
znzHhQLQgcFiC3jEYhkkF6tA2SCmMsIcItze0SUKYLq6WRYFjMUFwaLksui9
hdtSGMNHxogNvjzM2PK7UR4cs4VQzxwHh2Mq7VOlMcVcMJ+Hx0kYcD6ek7YD
/GoS1w3fT7lo1zj4QA2+7JQ1P3jx8AK6ZCGTkv2kLWAICMdZDioUgeQ9AoLE
u4ZkSUTPpC4QTs7nGxKJFPg/jAieJJ/Pd3Z2DvR0v7nzlbs3rn360aPPP//o
q6+f3L554fDhPeASFN+IRcOJsJGOiOHsUdNTn45mkkHDb8fWNOzZtJHPR5Pw
DkxPLOyHCYjCQQg4I7oz5rc0xLWmpJ4KujjkC4wdTBusO+6qNi1r8wYA3Fpv
OPO6vSXs7UpGW2ImvABRHRoL4Bka02HDYwl6akznBoB/3reuQVub921oiwKQ
PQmtKmdaG4KWlGdjVq/NBKzJoDURcoDYJ3R3k9sxuvZHm//qe4d+9r3Xf/4/
zj37FwXfxg5/bcxTk4/74zAcpi1vWDL+uhYxrRjOiDsBeg/yH9HihiOq2/B3
s1Ex4CDpdyS8tnTA1ZIIpk1Pba3F4rDHsrFtO7acPnP0vXcuXH/74rnTq7t3
78KdFo0lPF7dpxlS8834Fzp/gfZGKI7FdgD2BQDhORtXNfkq/Bclo4ms1IJr
pvIbQ0Dk/GKVyoFKi8MZif9qLiTwnF0A3K8c6asAv3LII5Ya70idT8b/m9vb
ylqgJWRWMg5AdQpBAMxVeT+OMwus4vycdAyHiH4EzsRlYRUQz/99/GdoCPjf
1tXZ1dfb3d+HLXdgC3oGCkRaUU4vb2FV7VNZyUn87x8arRwWpvBf5OOkzgOH
oDGYo+aIKVkJhW8caKv8CzVrTIrCTTHryoJGgp5AvEmR/BXce2JqpCxZLAS7
erqGCt2vvTh+/cz2L+4c+IeHq7+5d+qL945fObNr145Ns7Ozk3OLQOzZ2cL+
XUs3z+36/M5B4P9X9498cmP/+YNb5sd7Bge6h4sig0jBBHbUUhtBaGPKXHBF
FmCWaQg2iKl5AZwCyUIgFr0IF6Bc76pEfpQ3pObsKL+JvoAaAcNWuJJfVmp5
mFCeCCWy1bheIj8vF4M/sAjwAvAFoL49sY5QDxwD+oHN8rhaNAHCI5CdxZQS
YnwJzzYyAttRIPiX5KbhJA4WWbLLT5/i4ZVlYARzZQvoCtERUB0inIxD8s/v
DL9g6nvILwaefx6OAE6A0ZyY5afPev4R6a/Ru2EHNGX/KW2Eh7BlUSt9gfr6
Rhb/AOFV4BR3EG9J7OAtl1oAmlpwcjqdxQ48AvxuLBFPJpN9Pb0LM9Orhw88
uHvj/Qe33xeJgBs33zv/8vYtza0t+frG+vr6UEALB3yxcCBiYuuPg8nH9FQq
GIn40mkzlQolEsFwWAsZLhiIZNSfjgQSptaUFm28AP+wtw7btrTRFNeSujUT
sAfr1mBl/Tas5rC3I663RnxNpp4zfPlIoDkNKPQB//OJYEx3eazrwt6azpQP
+N9qiLFiw03xmLMq6lmfCVqSIVvQtzGoV4f1mphRBxMAW+NxWvxua7O2rvXZ
/zC94f8srvmL9uf+U0dcS4XcmmZPJISCaMpXk/BsCDvXRzVbJuQFsIPqA+3B
/+EFwBDojqqoX/RBNET8IWdN0F6TMrwxzWmx2Dx+rWuwa/eB18+cPXb97fPv
vXPpzIljL+/Yjk8qaEbdHr/Lp5en/WqaEaTmj5r5gi0WaD/JP5E/GE6wO4D4
ryZ/EfxxRPYCiMYBOAUK/0U7mMz5lsI+kuqzOlQpv1UO58V6Kh3wlM7n7892
VCKi5VKiNrlaFPIreWeCv+pfYFCI5T0g+WKcfU4UtQpdo3QulgL+p+AlMeyD
bVn1uoHpANoUmhIaHeV6EP/hAsgB8e3Y4ojU0plkyF2FoFXBD3kpmSqAnVNj
SkJwFS2ZLNJTsy+JY3wq1b+j4jzEOsX8K6eMCTdfKnCy15WYRiFQ8H9B/kG/
xydHZJsSyWpje3tPb/vW5aErq1t+fXv/7x4dB///6s7pt8+++frLS0LcYXax
ODUxPt67a8f0lROv/urWwa8fHIWn8OTG3msntq/M9BYGOgsjw+SHzIGqInkR
9JBwqsYjMudbFsCZLevFiY4nWQy/hYaA+V9yfiX4oEJeKoZG16kyF6Aa6MD/
8bnALuOjYcxHhf3pBdApoEXAhQJEd/cPAK5FzaesgWTen9yeNT+MhAPKeiU8
CninRhyock8fCL+Uyu/CPieCialhEv9FiqG/v7W1FReFKqPEWxF4kR96ZWEA
xdyI5Kq2nySf6kD0BdS8S5Z7MSikwl9qFAUPskhsCbYDzyNngTFBwzH3cNOm
pmZKsanBAvujB8quDfuaqW5BV4iD4CkEh3sQdxD1shgL4j0FtMci8mcyObaJ
1ctyoLaOdjF7YnRs1xs7r1w4e+/29Y8+uPvk45v37lw5deogvDHD0NPpZDgU
9HndXqctasIE+AOaIxrSYAhS8WAiGtT97pDoEQ7ALsTDPqxUWE+G/C0Nica0
GdKsiaATBBvgn9Zt4O1pwx5yVpv2jVFXna/qBV/18/6q573rfxF21Jm2GlB3
toaFfYBiLWNq0YBDt2/Im468XpfTqjvi3r5cJOqujXurI77aYMBqhl2abomE
nFHDGvVWpX12zfGC0/4L3fW8XvVMYsPa1Lo1bQ5bfcpv6o6g7tE9NrykrGnP
Be2wR/b1z0V8Vr9tQxAvSbOGPHUBZ7XHugFbHA97LSndndCcIbcV4G+4RN9X
OB5b2DJ/+MT+8xdXr10++/aFs8cOHVxc2tTQ2KybkXKpj+7wuF0+r0r7suCH
swCwfHrIowWxFZVCoTjNAfaB8IB6ZgG4GBQi/8dxcH4l+AxboIT3RdpXQn1D
c1e+sYM2gpjPWBDTvhTSVPivGgFUIEidzPPVhN+y2nOLDMuXFBtUry7rDQjd
queL2WGqWwPwo8kMFnaA/8x6wyLgISaI2fPFlgGmrhhTYjqAyV9aHwZysWUy
unRfF4owAVRdU3exkoNQME7UUpXYKm5Px58dZGopq8FSIgb22cuj6kJV8lfV
iPJ8DuGlC8CgN/BflOKPFOTwr1FOLWSnEratXb19/Z3bloYuH9sK/P/2wbGv
7pz44vap9y7s3/PaFsCCEKMD/k/27d45d/nEq09uHfzm4bFvHhx58t6e2+d2
bl8aGhnqHBws5UDVtBQaFxFMLitCsOyfsg+ziyIpXD64yFgNOD+TvxTGX9n2
stJG27TlZao6swKK71pNxaL15HEmTUQuYGaecbDixDSDPGxPVqlegjyZP7Zt
Xd0AfFoEnomD4hxZ3s/yGEZIgHt9UiMOzg5V4ygWR87cIQVz8CNYNOws4z/Y
AvmbmppgBcQw9XLKdVK019FDEQPaKM3HxL1y6Crn2jM6xAnyFIZlJ6DqCFBT
YPh9Y5swBT/xbVlc2jI5NQ8TABeAnB/4T9NGNewe+aY47H5Q2jtOeOQoZEpA
5PMNgHSVz2U9Nm4HVfyDe0q4z1IjKJvNwxHADn6LtUAwm61tHc0tbXjyqYnJ
N3e9fvfWu8D/Tz++/fj963ABdr/xkpj/Eo/id/VAyAteq3mDfi9MAJbmskUM
fzoWliuUjAQE8sd0KekfzSdC8bgBo+Bz1QS9dUFXjWHboNU8V2844QskDSdg
FlCv26r9devsa/+rt/r5kLMOK+yxAfnjAbcUXvC1JEJCe81wifpPr4VDJ5Oa
LS6TyIarRnNZwPZ1nzPgs8aCjrBWm9McqYAlqK33eKpNPRDxhUy7vTnsD+q1
gPSYx+mtXgucj+oWvJKU7tRsVSL1rDvSAdFNIAo+ffaQZocXgFcYdNaZjtq4
zxH3e0yPPei1A/+zjblXd79y/OyRi5dPXL105vyp4wfe2gNWA2YrhnwFowB8
kH+r02H3ONxaAOZAM0J4qBL/cZpqCgb5pxUA/38K/yvJP3ZY/1mZ/JVNUiUF
fuJ2Ywtcg06cQLU0jn1hjzD5P6s6K9t7Vbcv8V+BP378Tl+oYrwX+L/q/CXO
K+hWqm6MDvF7KDTf0vV8X0xq423C6wnH0qFYnPPumTjAjhmN8dkY8McC/jMO
zKJTgD+JYiVLbO3s6eob7B0cxiKRY5eNcucZsSE4q5COIvyq5UFZiqeyAKzW
ZmeTIvk8/lSzMC0ChQtUiJtl+Vjdg/0AfyHzIkM0FC4TJRyFYnFkYPvm4tvH
XwT+f3X38Gc3Dn3y3rGblw7u37V9elq0J4OrTUz17921eOXUK5/ePPDtI+D/
oU+v77538fVXVwAcXQMDIk5OMslIsogbyHpywilTALLQUcg+zyzMl9MB09S6
4bhbId05X2oHFqPtZfCHjcCsdVRzfon/1HxTjoDqhmBzk+hxlviPa4IPsZSe
HhtX6Xsh7yD3YRHwgTL5i4M0mjihUyD7ECAdF4oISQPXJWk/4+QdsgeK4I/T
u2QxPIP/OMg6Ujx5sVgUce8BfNIjFAjFwuVldSj+IpMgKjyl8jsk8ErkH98f
fLuYC6DaA70D0VBQNgd0D1U7mCoYmIX5wHdsbLq3r0D+z6nHLF7iLAB8aiz+
6ZGNbCxwBYZz2yC7ubCA5Jz5yypZvEHcL3izuE1KylqZHPg/Z8Tgiqn6T5B/
XJ9UOitNQ9um5cVTxw8/vHP9V796+Nmn9z54cO3apdWpsf76fLq+oSWRbQoF
wzABms8VjxgxExzXFfXrqaAZ0fyZSCgbC8YMdzTgykR1yvvH4mY4EnA7aux1
a33W9Z6q57xVz2X9NqB0JuwDkc7HzGzEqI8agNxs2JsztWzIH/U5dIeoBTVd
IiPcEjMbEwaId2MSKOkTaQhhCzxJv93w1PqdNe6aKlD4kMsVdDl89g26tyYT
sDclQmEj4HS7AmEjkQ55tdqAURcxqlO6I+9zZ7zOjOFyW9fAfIDbJ4Ma/mjc
Z4v7rHhaDS/VusFjrbJteM658QVPzTqQ/4ClxnTZQl4H7JrN5ewe6Dl0eO/F
i8dZ9n/s8L4d27eBgQcjcYn8AVZ72lxeu9sno0AGeD7gPRzLAvGA9rAFATPx
1DJCSSwO/EplG4GWOJnmANtIPBdPNVAOLpNvxZJDIdsr5uq2ZuqbOEtRSsN1
SbX/fxLVwQ5VQ0nyKe9DmUGcTFF9lfZlpSWOt7T30YLIQFOjDMi04VZlkpdl
n4z/0AOVoUgxw1f6Ba14/eJl55qSqTxWGu8uXR+NpSPRVDyRhQsQSaThBSiZ
IPoF5UEzpYIiZgFgU3oG+hnzp0xWd/+ANAGFghipPim7aUaHCmO4ucZloZ3q
4VJpSqXhpsiqqmDhBDElz0iUYy9/cVwsaj8Oj+KEGfb5qkCQUpwoOQKTk33D
w539/R19fViA5oFicXRaVKGzFl2Eo3GD9/W2d3YIiBKBmr6VxbGLx7Z/fPXN
r27t/YeHq1/dO/7o+tHjB3cszAu1OkDn8MjAS5uK549s++DaG1/dP/L17SP/
+P6JD995a9+rQkFufHKsWASNHAC1HZL/hoeFQj4BE3xyfmFp08qWhcVlOap+
Uo5Hh3kqReOpdUOFH4474T6rH9kXLJRwyioQarBCeQjCPKuDKHYkfZ9x7LAf
TVXy4AgWi/CZjWVjF/sg8ACF/eEniOFoIxNDQxPNzd3ERmAdu7qIlthnW1O7
iAF2s48AF7ZnSPwhVosNy3AKZ2b19fTzjzKQQv6PPwoTDBcAVmB+fhGPzszO
47fGJ6Ymp2Zm5mbn5helWt00I/azsyvT08sTk3MqhoMd8Hms+YWV6cmpubm5
5eWVubmFopQbVfUDOGFhcfMczMfsMtY4rMPo1MTEFJw7bJmSYPiOZU54d5yD
xrA/vbl2GdoChwduM5IPbMejrVLqAYutYaWkgGT7rBTi08JS0Atobm4U3XJt
XWBdQHh8+V7Zse3q1fOP3xfScJ999PDmtSuH9+3p6WiHhejo6EgkEm632+fz
RaNRn9edCAfjhmj1iplaUHPGQ2I6WDjgEQ2/PrvTVoWDOBILaH6bJWC3Rt0O
w1bdEPGHDUfM8IY1bz4aBvEG8oec1fVhAf6NcTPktYH856KBjKm1JsONUaMV
yBdwpkxPLupvTAYjmq0hYeCIjNg7o/AFAk4YFL+zylHzvNe23nDUCulpZ43D
XmeYwVQm7XVYvbXrTXdtKuiG3xHxWU13TchTG3RVR3yWXMSXCDhwHE4KDAHs
Dqh+2OPQXRavZUPALia/YznW/RL7ooTVDI5PFo8e23fu3NHLF46fOXn40P7d
K5sWQP5B8gXUy/YuWAHgv2T+QaUC5zdKdT5APBJ+kn+18KMa8sWaT8b8Gf8h
eX5qCjDDL0/hP4C6jP/l6p0y/leqQBDtmfmVQ1W+C/5z5GJHT78E/16Cv7As
UuoT/J+epir1Lxd5phj8AfjLOn8R8Je0vxGwD/BPYD+ZA+zH4hks7IgxlyId
kGYoib+Cg4xhUhFICYpKUbg2Wh/ZAlwKa4vawsEiYH9ITlSECSjKKruxslZD
pQRcZXuOwn8V9udplI8oyTPKfgHaAqUszWegf6Fi3aqCFPRPQH2xCNgH+Lf3
9mKJ2R5jYxT/FCnXsQkBTYUhwFffgEj29ff3Ls4Onzm07cOru4D/v3t0/Mu7
q4+vHzm+f/virLBi8ByAnZsXhk8d3vbw7Z1f3hMSQL+9f/zx23sO7pyZGusd
A/wXxSwwiuAX5T+Wu8jpkGLS18rmrTABajqAUI6YGFf4L7QuJeZXCp1R/434
T0eAevgk/GypK9tEEe0X5nh0bGoO+6OM8JPVg12rhLgqd2G5o5rhgn+Eeon/
I339w93dhfb2Egdm6aOKgQsBnPY2mIBW+ZVg75hwFmSTNWOGg1InrVRC0zug
xKIJrcy/YJ9xGMA92DguFOj39MwcdmSjnHCR4Bnh4sgQ0MrM/GYgORYAH9vl
TduwpS2AVQDyLywszc7Ow2RQBhbfFjyKNcv5j3L4Y2/XYHdnHxO7NENM1rOj
rbuc9lWlTQzrMQNOdQsmvjkCgJaRPhH2qQshFB9kjIj+Ak6AvYDVkCe3iYEC
XX1t7UIaGs+4vDR34sTBm9cvPn50E/j/0aM771w8u3XTYjaT6O5pr6+vD4fD
mqbBBERCYeB/WPME3bb6ZBh4TmloAD4MgcdZa6lZ67GL4AzOifl9EVBuU496
LI1CUd8NJh839EwomAx40qbbdFTFvNaUIRSBgm6L6PPVXXgI+A+nIOyzgvMD
5IH/AWd1QvR8+UHqm1NmUzJI/IdFMD11MUNMacHzwJSENLvu98STiUwu63c7
gs46BvNhBWA1AP5RzapZ1xnOKmaoY36737YBbF+3VRsOS8hth4fit1bBL4jA
cMAvqF1rOmphXMCst7/y4pmzx86fPwbyf+r4wb1v7ZqaHAeICZyXcR5swfxr
bU5YATnwPeI3InABvH4R8BF1numcHowy4FMKg8gSIJgAJfIPhMeW+M+DFH9g
R9h3WtBlYJQVOJX436GmpaueL4K/mv+uCn5U8U+p1bejtyQc2tpRGf/Bj0zL
ApBZn8OSTuZ5Wc9ZFrKIy/auNCyddGSy4PxYMAFEfuUICJmjTJ7VoZX4r+YL
qLnwrGfLNTaw/p8OrwwRjIvkL+Aa1F2oqQNXJ4D8LLEg/quhwJWxHYX/ivwD
x0rRG9kvTB0hFrQzvsGkAJ+EvyKVZCZ/v0AUcMrYhVqARBxk6EMU4UzNiP4v
wWQLQGmJhL3TE4Orb6188Paur+8cBP5/cef4pzdWzx7csWleaLSJdzE8uDBX
WD300t1Lr39+++g3d1axHr+9d3X3pqmRbtDlgugAG4GpGRkRY0VGxb9xwgv+
HHgsyC28AI6AlGGfKekCwBGYovSxErumvnHl8Hel/8O8p6p7oQXk2y+MTvQX
ihw3QLEjavswws/GNOA/vBJV+oJXCOBl9TtdFYF+A8PwIXr7CgColtYuZj9F
obtUPAbKsSsWRgCrraOdIm/MCsEK4OvBSEj/wBC5sfAy+kqT01k5ib/FwDuD
ZniIQyRxlYpiRM+c6NEWl2VOyuUtMhTG1gDQeBAMuJz4yoHYC1Y/vwk7i/NL
wH8seBNjUm6avQ/0HXCy8FIL44MDRaz+PjG/ni+Dr4SzjGmSqPbAUB6DQsyA
0Ecovf2OLuzwyjAQRFEgBfvYJpPpTAYedROrhpgFFo4D7ijgAO73NtEj3N/X
8+K2lbOnjnz4/p0vnjx+8uGDezev4sehIfgIiXDYbG5uzmQy8ALkvHgjaQbi
ugb8T4VFzCcZCYDzwx3wu62GzwFzAPxPBPWo7hNyEIY3pTtzpicd9Qpd6GAA
dgEgD+4NgA3ISTFwB8I+O0yAUIfWnAnNmdE9APmk4aICP1h6QzyQDfsCjirR
ERz24UhYFu377RthGrCFEYnrDsNjCegekH/gf8DrxEHDWY3fwkOZkFe3b6iP
+ZOGE/wfJkD6AjXAf1fVGpD8qM8F/k/xh7jPaljXJjVLwLLOdFTDEegf6j5w
cM+lS6cunT9x/syx1SP7X3v15Z7uTiMco8g/U8DA/zq7C/gviz/DrPCXcR4Z
548miP/CF5AIjy2tQCoHIl2vSmWYMBU/lgk/236ZFBbjIOsbKqfrSoouoi4c
zq6yt6rsU+UCaALYDlBZ8y/iRZ1C7bm+uQ12RPw65eM6e0ioKPLT0Ci05nB9
U+kstliJZDoWF/gvTUAsmc0Q/2GtiP+ZbCO2Jdqfbczh7eRI/rMcCkPhCI4D
VsOFldA0cwFscmHOlzX/WN39wJUpxlSJ/9/ZgrJSgQrmM/5TKRCnTIBoFgOI
ySfhrY0tfpwq13goQSGeL4oGZdKZCm8cbs6liG7ZQxGwD1QUajbFMdGZJevz
QdR7enqAerJ3qW9spG/vzvn7l95Q+P/l3ZNXj+96adOcrOGfGBkdnp8fObB/
661zO391+/i39898ffv4p9cOXjj08txo39gwcAyWRrQ5CU9A/gOeEEaEuIxM
KQrXQ1ZdYs0vwxbMs/mLKpeVA9BXtm7n8BeC3lNC99xhxxPQD3AnIh7FCXYf
jOHvjoxiC4tDY4cfqcY8JKteOcOLSc+pqRnaKfxIeg887+sX06/ATpuaO4h4
TIMC9EiSRWSjp7u9swMLOC+q/bt7mC2CLeD3pE8CPpus+3r6VagEz0ZcJa+m
FSD+C10OKR8hhhQDj2dni1NTcOjGpufGZ+anF8RgoMUlEP4Fjl3Dml/YhIUr
8BT+c94x8J9n4uIUR8QaGZ6YnJibGJ/Fx6oalmmk8ALI/3kd+Cj7HRjJYS0Q
xe4Y2CeesyaKC++OMSLsRyIxgj97gcH/GReqb2iR5L8blzefa2qsbxguDL65
67W7t9598vHDj96/9f79a3dvXz54cGc+H45GQm1tLfQCgP+m7o+HjEzEjPrd
AP/OpmxrPglHgHPB2Avmslb53faAyx7SnFGfI+yqSQVs2Si8Bksi4I9p3lxE
y0e1plggY3jrwxrJfESzBd21gF/Yi7TfiXOA2C2ARs3GjmPNut6x8Zeu6ue8
dWsCjo1YntoX3DXPA89Nd00q6BZxHs3u11zg/9F4zGNnAnpjyFmTDXqwda5/
pimmZ4PutpQZ8tWlQm4YDq9lnadufchrSxi+mO6J6/aopw7Ib1hfSPlqIq6q
iKsGb2FsfPDI0b3nzx8H+J86fnj/nl3zczPJeMLu8DhdPr9u+jSDLQBYRjAC
/BdOQTAKbh+KZkDyYQJUOpjjYACSwHlssUCGSYCF/rMslRGiEJk8gR2LhFnp
RaRyYlq6mqgo3YEWjmKnYj/FnwH4xH9sWSak8B/rO+QvM39hOzq6ZZF/F55N
GqMcQzSltC++Xbl6Ij+tAPEfW6xkOoXvVyabT4ly5NZksgGYz/hPJJqKxtLK
HOCNy/eYVUKgpXHw+VIvM2yZsm54Mum09lAOsbtHQERv3xDc2J5e3P4jA4NF
bLFULOipXmDVF0DtI9L7yiwArQa2MAS0BWJE+9g09SVIbktdBiO4v8VNjVt7
YlLe7HIB5bGIHgQlShBjW6rJl4NOiiWmNyAkGdvaJKnDzd6586XJm2df++L2
wX94cAL4/9WdE7fOvrVjZW4EpkQM0CrOzI6+/sam62de/ezWid8+PPft3ZO/
vnH0vVNvbJ2DFzQI/BeNwBLaYFCwo5QTqCczPgFDOUlaC4q+5aUXl7cIcTmp
dSYrP8tzfsH2OQKehJ9ov7Ty8vzSttmFLSX8lz3CQuZIXgG8ccJ+oZx3xl8E
+PMg/jSptZj5K1ULKH9UjvyLiS2KmeO6SQWzTny4MAHkuhT8pwwCQ9y4euC4
+B+Xd2CwICp/ZO4Ypq2rT6R9KZtZyoYPjajCISrns2WYeAvsnZiYKko71ScG
hw3TUDKDPz2/gCWrWMUEgU0r22ACsObml4V89uIKjsAEzM0szs4szs8tT4sm
rwmld4dnhkUYB5eA0ySTBbCYInEAsy75P20fvhI4k7F6Wjq+8hF5xRj8V+OP
sdgCAIbPCh+ewFmQ4Pls+E2ns5wUQHOAX4EhEH3BTW24sNjCo25saG3IN3a2
d83NTq8eO3T31tVPP7z75KM7j9+//vD+1YWFYmNDtrm5EZcaLoCmaU6HLRTQ
TL8nZfqTQS3kdQTdNtPn0By1fmed27IR+25bbVBz6x5xPAD6bV2fCzo78uFE
AITckw76AdS5iKDx9WE9oYkIDEA+5AUnr8Y5OdPbENJgF2AIOjIR7ETcdSTh
Sb8DpD0b9nqqnrOt+blh2wBk1i3rQs5q2Av4CKmw1wh4U5lkPBnTXDbgv2Pd
M/gtWgGcDKfDdFSldAfwPxsVQnampzSwzGet1h11MChwE+JaXdwrWpUTvjqt
dg3ewsrK5MmTBy6cPXrxzOrp1cNv7nxlaLDf0APAf9B9zR/E1uH0AvyxrwfE
qF8REZIjYIJhEeQB7ZduwncdAUr8WTZMZYn/QEWYA6UOpBRy1CDFMlpmJP43
VOB/E9kyE6ZAchG6keWgbZ3fhXoqAz6loFBXL5eUjC71dlUqSikqLqJAsq4Y
3ygufNlSuNzSBMQTqUQK38hMMpVJJAXzj8VKsM+0Lxa8AO6XvJuy7L8M9YtA
1nd6R7K0icwfi/LmQH4sjsbDAviDyXR14wh+HAbsk70PS8xXgRrGagj1lfiv
ovrCQShODQ2OFobGiiPCT8fCDg72Dg4pJk/mzHIaZgmxWKo3IALXRcIdfyTa
A834EM7H/mCZ+gL/AfvwrGVcurevt+OlldGrJ7f/6saBbx8c//ruyc9vHblz
ft8rKzOF/oGe3sGCCGwXtm2bvXx8+yc3V3/z4KxoE7h19P7Ft97YOjMxBNzo
ECPEBwYKEk+xwwByQYL/1PQs0ZjloFLoeNPc0iJF4ahvST5PHZvfj/9s3vbq
ytZXYAKYSYfLMDm7IMpuCyMMLinazz+EtwncA70Xow3HJzmunVSfsKzGdSn8
B+4NyrpN4H9HZzd2WmVMg70M/WU+Tw20rq4uXD0RCpE6P1TLF4LJ/QMsGMYX
hj6FyIF291EgDk/CpAAvDm2Q6sXmYGKGy/AWuOWnLFS2ObZsaBQwvml56/LS
FqD9AjwjXLeJ2ZmpeRyHCSD+swdEFIANi1AP0H5udgkmg8kCeKwM5tAJUvPr
eRGI8Iz8K8+IUSBWwwLwqedAws+wD70AMnyG/TkgnsEfLNytOIi7FRSusalF
KAbLUtL6XENTg5gX/MqOl9++dPbJR/c++/juJ49vffLR7dMnDsxMjycTkXg8
2tjYaJrmhvVrvU6bqfsMh4UmALQ5HvB6LVVg+wD8sOYxfK50IhzUhSKQ7qiK
+Wo7M0ZLRk8EHEGnFSbAEDX2FgH70jsI2jcC1UnpRTWOZqsPeRujfqHAENFi
XktMVOM7QMvrw76wt645HgCM40eB/6K2sy6tO9KmJy960HzAfzBTsFG8DJiV
qMdC8PdUPQ8kx3MS/73WtUnTlQmD8zsYffLUbdRsNYa7OuipCbo2BmwvBB1r
8eJhX1JB11t7X7504eil86uXz504vXpk547tbS2tMIgc+AjYB/jb7G5YAbgD
OAJ4Z7WnXPFS2ldUgQoTILMDIaULIYE9Q0VQ4j9dA2kU6tX8LBZMUnIN+J/O
57INYOb1KhbEPqmyRLMYDSCH5/YS/xntIfirsk+cBtjv7B3o7h/q6hvEvcMW
Qj4bpZiVIL/4Q7L8gF8zGgLQDKxoLCFMQDIRS8RhCGLxtBmKh8NplfBlFRDA
PxxJhsIJvDvgv+oLllmAZuA/Xq0sZG2nnEXZqDVLnds+Mn/wYcn/BeYD/EH7
BwHpQyCf42yur8R/ShspFejK+A8jP+wLHhudVviPLRbAH4tRa47uAuyzeEYM
MZFSjeS0FOyi4DxD7gJ1Ze4VoIclAHBiik2pVPoCCQZf72zv6BEpOABXx5bF
kctHX/r03b3A/2/vn/717UP3Lu57fdv8OEhiQSJncXB5efrsoZUPrh346s7J
390/9dWtw4+u7D346vL4AOhfG/AfcD8qQ8nCGZCYVsn/hQsgu4Cp/zwyXjJn
TFayrlUlslWoh+VAc4svLiy/CP7PYni4DBMz88Iyyn4lQOWQ1K7B1WCgCVdg
ZmZubm4BtJawT5Rj/F/F3lkAyVg3Y9r08tjL3Ca1nRkhZwKU0W8JidhvF2I2
UgCZsyOxQ/kgMTtAknw8p5DBzNYTIUmVqR3NwIuaKUnhoDH5SQlvpTgG0Cb8
Mk9dsmVj04sLKwB/4PzE+AxYPRbwf3pinppC2AqrIQNruMJ4OixcCiw4jEB+
fFGFo1p+Wiz8FeK/0jJSs4wHK7rAiOeEdF4KejTU+eH8d5B8mgPGfHiQrgGr
hhIJuOmwAdkU8KOhXhD7FJiceGh6auLA3l13blx+/PD6J4/vPH50++b1tw/s
39PW2hgMBkRQJRrVNK/P69bcjoBdaHsmAwL8o3634bLCFtTHQ6bX5XfbQ4Yv
GPR4nNVx05kJ2jqzetS7QQrp15p2C/i8BPyqmOYEFAPGY34blqf2BYBzJuBM
eixU3ezORVN+O0C+LRnszIRF/X/A2RTTc6YHC8iPI1F3bcprhU+RNt0J0x0I
uNLZVChi+mTyF+Rft6yP+2xBe5WsOPJlDBf+iu7cGPFbwz6r0H+zVblr10U0
F95INOAwtbqwZgl5qpOGPWk4Neu6hOFaPb77yqXVi4L/nzh++MBLWzZn0yIn
Aqrv9vixgP+MBWFHuAAC3mOs7QH+s8krGIkD/wH+mhGkOgTMBCGdfVKM7VAj
LhRLSpL83fxc4L+aop7IpP8w/rNLt70S/6UXIAg/UwPM/wL/qRoKE9DRU2qW
p5YUnra+uVTM/x34NzQS/+tFh3gjTQBcgEw5HYAHhQsgQkP1APl4PM/6n0y2
sb6hNV/fogJBVMDmpMiyURMZkIbmrlyDaHAWBVEi/NUgGwHaZVO8GIo9OFQc
GBwB8yftx60E2BeAXxhjCSi8ADyqin+Y0mUvgGoNZsyH4E8pVID/QD/u15n5
uU0z04vYgSEYHCj1pRL/WSiOJY7IaDbj+QxxM8LDqAvldzisvDSRUBoIJVYD
/O/v7esSCu89xP+V+cLFw9s+vrbvm/ug92e+vHf04dv79+zYtDQzMzO9ACwq
jgj8P7F34cGVtz6/eex39098cePg++/sPbprZbSvdXCwv1AQdL9YLIIuM/5T
lEITgDURdJqYEl5AeSj88NioHDtblOKcc9S3Z327anpSg31l9fvWielNxfE5
Jn/lePRFPM+0/Mf4CQ0fdoTu3MAQ0Z4ydHj99AKY58UFYcQDJ5OEE/+FrIFU
vMfq7e8DtRd6nvKZGRIB6DFmAv7f0tKCLSC9Q846wcVnLphRoF7JnykK0drc
xm4pakcwxk4zpNqvhA8i26+A3tMzcwPlD4tRGiEZJEqqRosjEyD8+ERglEeG
xwXyS9o/M7kACjFanBwTIcRpSq3iIgP8wRImJ8V1wP/A/4IsNlZvX6nY0SLg
ojGly2AXXy1hn8YLO6T9JPZKEY5ZEjaIYeFHKj9gy9OYKchkMvDX4bjj9m1t
h3VowX0LF0AqxbUtzE6cP3344d1rjx/e+PD9e4/u3X7n7Qtzs5OplLAaoUgY
/1xOu+51xTR3xtSxhQmAI5AO6TAE2GajoYDXGQ3p0ageMlz1qQDwP+bdkNRr
wO2bYsGQs64pFgCNBzmPeO1Jv4i3x3U78N9wVoHYZ/FbhhtWIGjbIKYAh7xA
eNgC7AQs60Dgk3I0MB5K+KxCok2zt8WEGClsSkizAv9BS8PiZdizQnrICvAP
u2oTmvgtID+sgLf6edNb67MJYAf/N1x1uqPG9Nh1R13YcHlt6z2WNc6qXwoj
5aqyrPuF7qo9u7ofV+bcySMXz508vP+t4kghFomK5jjd4PL6/A6P1+72OL2i
+J9FnuX873eLk7+oBaFGwHD4+z+7Ermcmo0i9F1zjK5n1dgUBk/U4EXZpfXd
8Bcl46DIP+t8aAvoAkjJ6M58o5AMkunXViA/7QgW9qnbTA1/+I90MEUiqb6R
WSdpCHL4siWT6bRA+4ZcvhmYn5Sda0lpApKJXCopEgGsdFXSRkryIpNvFgKn
TSVRU9Hj0CDnnYn0RyO7e7AEx2vv6e7q7+0Z7OsdIuBzwRbAIxgpTk6Ve76U
gDM5vxzJOkVfYBL8bXJupCjGcAwNiqoMmIBy2GeynK0bV6F7ZlFZr864ChCD
WDc7O89abrXDkYXEQyLM2BhwdnxC/gOMyHJ33Nrdnbh3u7oGh3oXZobOHNz8
+J03pcL/8S9uH31y8/ix3dsWpgExC9IrGViaHzuya/bBlT1f3T36uwer39w6
8sm1I++s7lqZBonFRYE16evtHpDdssIBEe9CvhKgCqj4/PwicZjikzhBqBCP
T+MijI5NgZ2O40/NrXDNzG+W0f4tc4tbseaXtk3NbsJBbHkCbMHw6AwTuGpE
IxGMpod19TiBLJeLcKp+RWE7GS9JvprkRfRW8v4s/qdmPtkvteCEjJIsceQz
EDNVhYxi1IyrU/yBDpr0xbrxC7AHUh1IfEywnvikaMj48SkxbbwX0n54AVxz
s0sL85vgAoyNzpI28FGhvD09yx6HwhCcrVmcg4fgUcK1hKWgW8R0Nv86/m5H
Rwc1LlixT7PIzLVyXsj5Cen4kQf59nlXMkKLI9zBcdyVjPwzBYBbGCwO+3yU
LlIynmlv7RoaGNyyedPFC6c/eHgDXsCTxzcf3Xv38IE3WltzwLYkACmV8Pl8
Xq8W8rgSuhZxC4LdmY00gOR6asK6VQxPlyo6nrq1YNE4ngrYPNXPUmMhF9E0
y8aU4c2EvGDswHwO/02bzqi/JuGvTmhV9UF7Y8gZ81SlddH52xjVsZoiektE
bw5r2aAnpTuB/DFnVYPpaI142iKuvL82rtVpdc8HnNW63x2Ox/xBw+O2Bb11
YVdNc9zw1azJGF6YHsO2ERaB+O+1rgW8y/i/8BRYKRT22PAKdVu1t3a9r24D
LJTpsmD/7MmDIP/A/9Mnjuzc8VJHe2swYPg8XpcbRsCH5XR5bHanxeG0udwi
DyCbfEn7We1vRpJYlcMfK+c/Mg36+6vUzSfj/6LBNt/A8huF/3QQiP+Uzfkn
+C9NADt/mQVmUphGgUoRCv9FgVAZ/5vbRbdvvqlRphjA/OGDwDdJ88vDEBC/
TvwiZbMiCoRHsQX+Z3NNzPOWapYS2XgsgxWTVU+xZI4qduxrZlMzFSpE5lq0
IeNV9TS2dJcGHLe0kptRF7ezo7enewDg399XAOcn+HMHJgC+wGRZ1Ue1gCn8
V+2rsBEyEivRT9bmjQwD84H8kxwRMjgwMtA/TLkGUn3ObWHRCLGLGpus+uAO
AbZ045fBXwJXv4zJl/6Rogs5gh6hSFAY7gf+nz4gS0DvHfvNwxNf3j4O/D+5
b/vSLMAa8AL+X1icGz34+uy9S7u/vHNM4P+do59eP/zOyTe3zII9dg3Ao+gZ
7O+VaYABGUPoKglBsNIG5gmLhmBmZo60XAYlxHZmdhG0VWkXs+xHLXZ+qXZX
uAD0oWhHiOe8LErTmFulRM1SfyYC1EgvmlEV8VBV7pVaFgTzyqQtQZI4yTwp
uT3rIRVn5j6fh2Uzimyz5EZW13Qp/MdLUfjPl10ZtsISFk1meAHmQju6OMkh
AtIXmAD+T08tSFswxXgRLg4uOM6kUSiLTs/Mzoj5LyzQklxC/Gl8K2CMVJqD
k+7JN4jwNILc4ZZsn/cd9kvOTms7yz4ZDsJOJBJjUxhhH0fos1MUlC0DmVS+
tbmjp6t7enry4IE97107/+jeVeD/gztXz585snnzXDgSSKSi8ThW3Ol0G25n
2OvOhvyyjMcFbi80M02X4agFYGq2KvvGX1rXP+OFFXBJpX3T5bWsMz3WZFCM
9EoYHqG6HPaIwe4hd8RX66l7Vqt7Rrc8m9Zqgf/+6mcCtb80rOsZvQdoZwNu
eAEA/6jHEvPUxTw1TWFXc8jVHnW3hp2+2uewhDSEzwmYiqWSXo/dKQuE8Brs
658LOuvifhcgXbOuh/cB5LdtfAY8X5gMR5Vu34jT8BDsF87xW6s8NesA+/gR
7wg7IP+Xz68C/w8f2LM4O5WIS/Lv0xwOl8PpBvjbHS7gv9XpghcA/k/wp8hz
ZcMXpz1WDn//Q8jPRW1k1t7nRO1WExZ2lMCyGsWr8F+ZAFUIRJxXFaFUh+Mi
/ku9UHlESr39y/hPkFeJYNYbAP/hWjIXIPG/kfhPqi9ov8T/uGxqwxFgPtsZ
lN6dmnEJQwDkb+3o7+wRc2oGhoV+AgszsHokrIH8A5yxyPmB/HCrsZgFGJOV
n5VzG5UcBJv6RXv+zALWxKSoYBEBlok5Lt7XwH88OUxMSU5ZbsfkDUuWS4ed
oQNyOUaMK/GfUe6ya/9P/gEoR+Q/lqYPDPZMj/cef2v5wYXXv7h9+Jv7J76+
e+rJrVNnjuzcND9dHlYytjA7tv+1+dsX3vr1rWO/vX8c+P/Je0fePbP7pSWQ
6h44CEMD2IzIEqAeERtp7VJtVsxCAvmXljYtLi7TZom49KyoYwT4LyyuiGrG
5c1YHAEj6t7lYBQsjkFk2Q8X62FUYpeBL9XYq4ob2XiL04jzzP8SkMnP2dyk
8J/7TIASyVWsm+cQHgn+zJYyLkTCTEtRKiWVgM+/RUvBti/Gmvi54FmAusIE
V+A/trRZNG38WPEjLtem5a2LCysMAYm07/QCFr4wwH+AP0yAmCkzKn4R+I+F
XxHuxtAofEzwCsk0xoSbMDHF5IIkEviqDOHl4sXw4vAV8gUz+K+YP5O/vHSA
dNx9AHBeDZZ6sjAD9yZTw9iJxRLYJ2cj2itpOOqCChc+29hY34J/A2JM/NLJ
1QN3b1759P2b79+//vDeu+fOrS4sTseTkXDYTKVScCgihj/ocaZDouoG4B8F
tzc96YArrfuiPlfI6wDU644av7066nPkQ7644QDMwi7guLN6DXaqnvt7ILCr
5gUBwo71umNNxLM+6t6YN2zA/7B1Tdi6DvivW9YDlgUzF8F/F3wBbGFxMgEn
Z8Hn/LWNhjWpWTJBRzzg1CX+wwVwOurs1c+B52u2DRt/+Z/X/eLvvJYN+Lt4
GXBV/I4N4P+wF/jRLwcNA+eB/DBe2GK5qta4q9cG7DW0BRfOHLl07tjpE4f2
7Xl9bLRgBgMul8vv97tcHrfb65EuAHwBj1fz62LgixlNBCNxLCr/iF6woBgK
ySkwzOQqkWQqof2z67vpKvWNWI34yJpbYQJEsB3wm6svTX5vbMZDWGW1/DY5
CF6APwd4dfT0Y7V397HOh1Md+RDxn41jsvmr5V+I/+Brk0iksEgh8E1gm0nm
u3854D+XaPXKwWFpygHkk7lkIpsB8ueb2F9AkWqaIaVTVJ5TMNTVO9zdJ1K3
lPdnBKYgByQB/AXzl4OcWAg6MDgCGo9VGB7DEvsSneSI7Vlq0chBtGLYE2cy
sn57EjepDFMszOOmFrUcszOLpHAEcBa0M6c5Lkmsas/hliEghf8kipUYyGAR
ObmI+vf2irBPJ25nUcTY09UrPJrutpFC28HX52+dfe2z9w5+fffkN/fOfnb7
9KWTe1aWZkUsZWp+ZnpyfmZ09475m2f3fXbj6G/unfjq7uqTm8feu7B3xxbQ
1J7hwuDw0MhIAa+qwFqgfqkzg5dHtMGrAh0l+a/E/2n8OL+8tLxFmIDlTRyG
OLu4hCXj2AtycPDC1NwsttPzcxwcI+UjSsCuxk0qTRs1sYWXiwF2LOUvkF0z
KERir4BaKTkzaEP8F5oPsvpd9T3RNNBH4AmqWYC/y4vPGkhaInWc3oT8i53E
/5JHV8Z/vC+G8kj76d/hcuEbosp+8FWBLYBFmJtdgoMm+YMo9aS2g0yLTOCC
swRUKErMLMJYiATB+AyjQ3QTcCb+uhSm62PDF0de8urxdaoIPy+Cavhi0oSi
QCoYi5uU/B8HYQsYsAVtA9uniBDzd4wI0UY05JvzcAiamjo72yfGR/bufvXm
uxc+eXTro/dvffTB7YcPbx489BbQRdO8yWQSTxKPhcyAmPCbCDhFxb7uAD9P
+51Zwx/xOiOai3KgMd0j8qo+F0AYhB/g767d4LNWR/1OID+WbcOz7to1Ya+Y
7ZUKWBK+Gk4HqPdb87o9h2cO4NcdQbcl6K7FM7RlIy2JYGvSrA950z5LyPJC
zLE+7lyX8talddEpENBcsH5mNAJHIBvzmz4LvABHzZp8ImSvXvvMf/qR27I2
6K0D7JueOtgLmoBkwBPTnLqtGm4CwB+E37nxBZgAzbIR4I/1/wMhfrav
    "], {{0, 340}, {512, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{723.2499999999114, Automatic},
  ImageSizeRaw->{512, 340},
  PlotRange->{{0, 512}, {0, 340}}]], "Input", "ImageSizeLock",
 TextAlignment->Center,ExpressionUUID->"835457d1-7ffe-40eb-a801-8c683a5053d2"]
}, Open  ]],

Cell["2", "Subsection",
 CellChangeTimes->{{3.8000343041301537`*^9, 3.8000343051121163`*^9}},
 TextAlignment->Right,ExpressionUUID->"9569da8b-6ca6-43dc-92e8-56e52240f4a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ba3d6aee-0d33-47b8-adc7-2b985cbfbc12"],

Cell[CellGroupData[{

Cell["\:0413\:0435\:043d\:0435\:0440\:0430\:0446\:0438\:044f \:0434\:0430\
\:043d\:043d\:044b\:0445", "Section",
 CellChangeTimes->{{3.799428941422896*^9, 3.799428943639271*^9}, {
  3.8000772274722137`*^9, 3.8000772378916845`*^9}},
 FontSize:>Dynamic[
  0.038 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"60dd1757-a634-4c44-bbbe-ac63e83797de"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:0421\:043e\:0437\:0434\:0430\:043d\:0438\:0435 \:0430\:0432\:0442\:043e\
\:043c\:043e\:0431\:0438\:043b\:0435\:0439 "
}], "Subsection",
 CellChangeTimes->{{3.799429500760493*^9, 3.7994295108314285`*^9}, {
  3.800077212156576*^9, 3.800077219779833*^9}},
 FontSize:>Dynamic[
  0.025 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"076e352a-3a7e-4a00-8317-8f18640c7022"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   StyleBox[
    RowBox[{"c", 
     StyleBox["a",
      FontSize:>Dynamic[
       0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
      "r", 
     StyleBox[
      StyleBox[
       StyleBox["s",
        FontSize:>Dynamic[
         0.013999999999999999` 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[
        0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
      FontSize:>Dynamic[
       0.013999999999999999` 
        FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}]],
   FontSize:>Dynamic[
    0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  StyleBox[
   StyleBox[
    StyleBox["=",
     FontSize:>Dynamic[
      0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
    FontSize:>Dynamic[
     0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
   FontSize:>Dynamic[
    0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  StyleBox[
   RowBox[{"carInitialization", "[", 
    RowBox[{"5", ",", "5", ",", "2", ",", "0.4", ",", "0.8"}], "]"}],
   FontSize:>Dynamic[
    0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  StyleBox[" ",
   FontSize:>Dynamic[
    0.013999999999999999` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"countCars", " ", "\[Rule]", " ", "5"}], ",", " ", 
     RowBox[{
      SubscriptBox["v", "max"], " ", "\[Rule]", " ", "5"}], ",", " ", 
     RowBox[{"laneCount", " ", "\[Rule]", " ", "2"}], ",", " ", 
     RowBox[{"probabilityOneLane", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"W", " ", "\[Rule]", " ", "0.8"}]}], "*)"}],
   FontSize:>Dynamic[
    0.009999999999999998 
     FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}]], "Input",
 CellChangeTimes->{{3.799428969667792*^9, 3.799429036681408*^9}, {
   3.7994290735528126`*^9, 3.799429073703926*^9}, {3.799429521554303*^9, 
   3.7994295288955708`*^9}, {3.799503799271434*^9, 3.7995038038891068`*^9}, {
   3.7995127917081585`*^9, 3.7995127996782303`*^9}, {3.7995143390758653`*^9, 
   3.7995144549847574`*^9}, {3.7995145281954627`*^9, 
   3.7995146003364773`*^9}, {3.7995146734895983`*^9, 3.7995146965875487`*^9}, 
   3.7995147618463073`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"64149950-e78e-4d5f-bc75-c6fe73c42454"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7288235872539444, 0.3496717937071221, 0.2743557947466475], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4858823915026296, 0.2331145291380814, 0.1829038631644317],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7288235872539444`", ",", "0.3496717937071221`", ",", 
               "0.2743557947466475`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7288235872539444, 0.3496717937071221, 0.2743557947466475]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7288235872539444, 0.3496717937071221, 0.2743557947466475],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9143858552588069, 0.209314867280759, 0.719068125679748], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6095905701725379, 0.13954324485383934`, 0.47937875045316536`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9143858552588069`", ",", "0.209314867280759`", ",", 
               "0.719068125679748`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9143858552588069, 0.209314867280759, 0.719068125679748]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9143858552588069, 0.209314867280759, 0.719068125679748],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8834507920999513, 0.10522323408288714`, 0.03198113388087731], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5889671947333008, 0.07014882272192477, 0.021320755920584876`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.8834507920999513`", ",", "0.10522323408288714`", ",", 
               "0.03198113388087731`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8834507920999513, 0.10522323408288714`, 0.03198113388087731]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.8834507920999513, 0.10522323408288714`, 0.03198113388087731],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4480355116645536, 0.3690107869559871, 0.8165270837379905], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2986903411097024, 0.2460071913039914, 0.5443513891586604],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.4480355116645536`", ",", "0.3690107869559871`", ",", 
               "0.8165270837379905`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4480355116645536, 0.3690107869559871, 0.8165270837379905]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.4480355116645536, 0.3690107869559871, 0.8165270837379905],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.38019872555409906`, 0.5515669690446843, 0.600525380120202], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2534658170360661, 0.3677113126964562, 0.40035025341346797`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.38019872555409906`", ",", "0.5515669690446843`", ",", 
               "0.600525380120202`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.38019872555409906`, 0.5515669690446843, 0.600525380120202]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.38019872555409906`, 0.5515669690446843, 0.600525380120202],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.799429032146826*^9, 3.799429037046027*^9}, 
   3.799429076490805*^9, 3.799429177217952*^9, 3.799429529404069*^9, 
   3.7994297694889455`*^9, {3.799503792809712*^9, 3.799503804301014*^9}, {
   3.7995127965852337`*^9, 3.7995128001150613`*^9}, 3.7995830065440454`*^9, 
   3.7995855148789682`*^9, 3.799588784743314*^9, 3.7995942009297605`*^9, {
   3.7995963721881123`*^9, 3.7995963788528423`*^9}, 3.7996730821076345`*^9, 
   3.800079651354121*^9, 3.8000814982502975`*^9, 3.800094495641579*^9, {
   3.8001146791662216`*^9, 3.800114680628319*^9}, 3.8001150600475087`*^9, 
   3.800115120954487*^9, 3.8001152450265284`*^9, 3.8001162760325303`*^9, 
   3.800117077813054*^9, 3.8001184849837694`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"08925bb9-4870-4416-a4be-6cc315233eb8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:0414\:043e\:0431\:0430\:0432\:043b\:0435\:043d\:0438\:0435 \:043f\:0440\
\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:044f"
}], "Subsection",
 CellChangeTimes->{{3.799429785151623*^9, 3.7994297941916428`*^9}},
 FontSize:>Dynamic[
  0.025 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"a4a692fd-fbd2-405e-aef6-914239330626"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"carsWithObstacle", "=", 
   RowBox[{"addObstacle", "[", 
    RowBox[{"cars", ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "30"}], "}"}]}], "]"}]}], " ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"cars", " ", "\[Rule]", " ", "cars"}], ",", " ", 
     RowBox[{"positionObstacle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"start", " ", "\[Rule]", " ", "15"}], ",", " ", 
        RowBox[{"finish", " ", "\[Rule]", " ", "30"}]}], "}"}]}]}], " ", 
    "*)"}],
   FontSize:>Dynamic[
    0.01 FrontEnd`AbsoluteCurrentValue[{
       WindowSize, 1}]]]}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "carsWithObstacle", "]"}]}], "Input",
 CellChangeTimes->{{3.799429806931958*^9, 3.7994298561074424`*^9}, {
  3.799514751866478*^9, 3.79951475803934*^9}, {3.799514838246476*^9, 
  3.7995148828382473`*^9}, {3.7995149753085947`*^9, 3.799514979002822*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"cf2308df-5e17-49e4-865a-3e4a51fdb82d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"15", ",", "30"}], "}"}]}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.7288235872539444, 0.3496717937071221, 0.2743557947466475], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4858823915026296, 0.2331145291380814, 0.1829038631644317],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.7288235872539444`", ",", "0.3496717937071221`", ",", 
               "0.2743557947466475`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.7288235872539444, 0.3496717937071221, 0.2743557947466475]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.7288235872539444, 0.3496717937071221, 0.2743557947466475],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "2"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.9143858552588069, 0.209314867280759, 0.719068125679748], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6095905701725379, 0.13954324485383934`, 0.47937875045316536`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.9143858552588069`", ",", "0.209314867280759`", ",", 
               "0.719068125679748`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.9143858552588069, 0.209314867280759, 0.719068125679748]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9143858552588069, 0.209314867280759, 0.719068125679748],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "3"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8834507920999513, 0.10522323408288714`, 0.03198113388087731], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5889671947333008, 0.07014882272192477, 0.021320755920584876`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.8834507920999513`", ",", "0.10522323408288714`", ",", 
               "0.03198113388087731`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8834507920999513, 0.10522323408288714`, 0.03198113388087731]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.8834507920999513, 0.10522323408288714`, 0.03198113388087731],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "4"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.4480355116645536, 0.3690107869559871, 0.8165270837379905], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2986903411097024, 0.2460071913039914, 0.5443513891586604],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.4480355116645536`", ",", "0.3690107869559871`", ",", 
               "0.8165270837379905`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.4480355116645536, 0.3690107869559871, 0.8165270837379905]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.4480355116645536, 0.3690107869559871, 0.8165270837379905],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Velocity\"\>", "\[Rule]", "1"}], ",", 
      RowBox[{"\<\"Lane\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"Time\"\>", "\[Rule]", "5"}], ",", 
      RowBox[{"\<\"Position\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"W\"\>", "\[Rule]", "0.8`"}], ",", 
      RowBox[{"\<\"Color\"\>", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.38019872555409906`, 0.5515669690446843, 0.600525380120202], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.2534658170360661, 0.3677113126964562, 0.40035025341346797`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"0.38019872555409906`", ",", "0.5515669690446843`", ",", 
               "0.600525380120202`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.38019872555409906`, 0.5515669690446843, 0.600525380120202]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.38019872555409906`, 0.5515669690446843, 0.600525380120202],
        Editable->False,
        Selectable->False]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7994298466835904`*^9, 3.799429856572173*^9}, {
   3.799503794621894*^9, 3.799503806479188*^9}, 3.7995128073081794`*^9, 
   3.7995830067806234`*^9, 3.799585515016571*^9, 3.799588785054296*^9, 
   3.799594204167095*^9, {3.7995963724144497`*^9, 3.799596380024728*^9}, 
   3.7996731015136123`*^9, {3.8000796491430335`*^9, 3.800079652976782*^9}, 
   3.800081501502029*^9, 3.800114703848195*^9, 3.8001150564122524`*^9, 
   3.800115124827103*^9, 3.800115252313014*^9, 3.8001185155021276`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"d80582e2-c0f6-441c-88f2-9320389556eb"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 6, "Length" -> 6, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{
           "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], TypeSystem`AnyType, 
            TypeSystem`Atom[Real], TypeSystem`AnyType}], 6], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Velocity"} -> 
           1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
           1, {All, "W"} -> 1, {All, "Color"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
               TypeSystem`PackageScope`AtomShape[34], "Time" -> 
               TypeSystem`PackageScope`AtomShape[34], "Position" -> 
               TypeSystem`PackageScope`UnknownShape, "W" -> 
               TypeSystem`PackageScope`AtomShape[60], "Color" -> 
               TypeSystem`PackageScope`UnknownShape]]]], 6, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[360477770], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          
          TypeSystem`Struct[{
           "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], TypeSystem`AnyType, 
            TypeSystem`Atom[Real], TypeSystem`AnyType}], 6], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[360477770]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, "Velocity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, "Lane"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, "Lane"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, "Time"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, "Time"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, "Position"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, "W"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1007750801][{All, "Color"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[All, "Color"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[0]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007750801][
                   GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[0], 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[0], 
                   Key["Lane"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[0], 
                   Key["Time"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[0], 
                    Key["Position"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[0], 
                   Key["Position"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[0], 
                   Key["W"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[0], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[1]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007750801][
                   GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Lane"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Time"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Position"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["W"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7288235872539444, 0.3496717937071221, 
                    0.2743557947466475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4858823915026296, 0.2331145291380814, 
                    0.1829038631644317], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7288235872539444`", ",", "0.3496717937071221`", ",", 
                    "0.2743557947466475`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7288235872539444, 0.3496717937071221, 
                    0.2743557947466475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7288235872539444, 0.3496717937071221, 
                    0.2743557947466475], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[1], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[2]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007750801][
                   GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Lane"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Time"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Position"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["W"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9143858552588069, 0.209314867280759, 0.719068125679748], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6095905701725379, 0.13954324485383934`, 
                    0.47937875045316536`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9143858552588069`", ",", "0.209314867280759`", ",", 
                    "0.719068125679748`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9143858552588069, 0.209314867280759, 0.719068125679748]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9143858552588069, 0.209314867280759, 0.719068125679748],
                     Editable -> False, Selectable -> False], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[2], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[3]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007750801][
                   GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Lane"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Time"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Position"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["W"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8834507920999513, 0.10522323408288714`, 
                    0.03198113388087731], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5889671947333008, 0.07014882272192477, 
                    0.021320755920584876`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8834507920999513`", ",", "0.10522323408288714`", ",", 
                    "0.03198113388087731`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8834507920999513, 0.10522323408288714`, 
                    0.03198113388087731]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8834507920999513, 0.10522323408288714`, 
                    0.03198113388087731], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[3], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4"], 
                    Style[
                    RawBoxes["4"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[4]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007750801][
                   GeneralUtilities`Slice[
                    Key[4]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Lane"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Time"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Position"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["W"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4480355116645536, 0.3690107869559871, 
                    0.8165270837379905], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2986903411097024, 0.2460071913039914, 
                    0.5443513891586604], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4480355116645536`", ",", "0.3690107869559871`", ",", 
                    "0.8165270837379905`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4480355116645536, 0.3690107869559871, 
                    0.8165270837379905]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4480355116645536, 0.3690107869559871, 
                    0.8165270837379905], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[4], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5"], 
                    Style[
                    RawBoxes["5"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][{
                    Key[5]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1007750801][
                   GeneralUtilities`Slice[
                    Key[5]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Velocity"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Lane"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Time"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Position"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["W"]]], "Mouse"], ImageSize -> {{60, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38019872555409906`, 0.5515669690446843, 
                    0.600525380120202], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2534658170360661, 0.3677113126964562, 
                    0.40035025341346797`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38019872555409906`", ",", "0.5515669690446843`", ",", 
                    "0.600525380120202`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38019872555409906`, 0.5515669690446843, 
                    0.600525380120202]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38019872555409906`, 0.5515669690446843, 
                    0.600525380120202], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
                  GeneralUtilities`Slice[
                   Key[5], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1007750801]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1007750801][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {385., {92., 101.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7994298466835904`*^9, 3.799429856572173*^9}, {
   3.799503794621894*^9, 3.799503806479188*^9}, 3.7995128073081794`*^9, 
   3.7995830067806234`*^9, 3.799585515016571*^9, 3.799588785054296*^9, 
   3.799594204167095*^9, {3.7995963724144497`*^9, 3.799596380024728*^9}, 
   3.7996731015136123`*^9, {3.8000796491430335`*^9, 3.800079652976782*^9}, 
   3.800081501502029*^9, 3.800114703848195*^9, 3.8001150564122524`*^9, 
   3.800115124827103*^9, 3.800115252313014*^9, 3.8001185156477656`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"0620642e-ccec-4f6e-9a55-a66d11b63925"]
}, Open  ]]
}, Closed]],

Cell["3", "Subsection",
 CellChangeTimes->{{3.800032417041664*^9, 3.800032419497053*^9}, 
   3.8000343270501633`*^9},
 TextAlignment->Right,ExpressionUUID->"76235a15-f1be-4098-ad62-d543e9c63dc3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"40739e40-e35b-41d7-9798-cda2d4d25c98"],

Cell[CellGroupData[{

Cell["\:041c\:043e\:0434\:0435\:043b\:044c \:041d\:0430\:0433\:0435\:043b\
\:044f-\:0428\:0440\:0435\:043a\:0435\:043d\:0431\:0435\:0440\:0433\:0430", \
"Section",
 CellChangeTimes->{{3.79942874563806*^9, 3.7994287635358725`*^9}, {
  3.799512737391224*^9, 3.7995127439155855`*^9}},
 FontSize:>Dynamic[
  0.038 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"6e42b1fe-0822-4d30-b33f-6cdbf9e0e374"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:0423\:0441\:043a\:043e\:0440\:0435\:043d\:0438\:0435 "
}], "Subsection",
 CellChangeTimes->{{3.799428767135256*^9, 3.799428839271347*^9}},
 FontSize:>Dynamic[
  0.02 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"d8b16b6a-21a5-40ec-9557-523103432a7b"],

Cell[TextData[{
 StyleBox["if ",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],ExpressionUUID->
  "8ea76dd5-dc69-4c3e-a58e-ccd9b76b9aa7"],
 " < ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    StyleBox["max",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "69432cb2-515e-4d46-86bc-f30fe91e626c"],
 " \t",
 StyleBox["then ",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],ExpressionUUID->
  "453ec312-2f1a-4920-9af6-e50b2dfa3a73"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],ExpressionUUID->
  "09a8470a-7db7-485c-b695-96ac3b817e9a"],
 " ",
 StyleBox["+ 1,\t",
  FontSlant->"Italic"],
 StyleBox["\:0433\:0434\:0435 ",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 StyleBox["v - ",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
  FontSlant->"Italic"],
 StyleBox["\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c \
\:0430\:0432\:0442\:043e\:043c\:043e\:0431\:0438\:043b\:044f",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]
}], "Text",
 CellChangeTimes->{{3.799508009792583*^9, 3.79950814219411*^9}, {
  3.7995093768234344`*^9, 3.7995093841935277`*^9}, {3.7995096481458015`*^9, 
  3.7995096924715614`*^9}, {3.800118593495767*^9, 
  3.800118610412986*^9}},ExpressionUUID->"2545ee46-7de5-4b56-8566-\
e72e3a88dd58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showExample", "[", "\[IndentingNewLine]", 
  RowBox[{"carsDataSample", ",", "\[IndentingNewLine]", 
   RowBox[{"acceleration", "[", 
    RowBox[{"1", ",", "5"}], "]"}]}], " ", 
  RowBox[{
   StyleBox["(*",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   StyleBox[" ",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox[
       StyleBox[
        StyleBox["i",
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
         FontSlant->"Italic"],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       " ", "\[Rule]", " ", 
      StyleBox[
       StyleBox[
        StyleBox["1",
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[
        0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}],
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[",",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[" ",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{
      SubscriptBox[
       StyleBox["v",
        FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
        FontSlant->"Italic"], "max"], 
      StyleBox["\[Rule]",
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
      StyleBox[" ",
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
      StyleBox["5",
       FontSize:>Dynamic[
        0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}],
     FontSlant->"Italic"]}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.799429951204419*^9, 3.79942995287379*^9}, {
   3.79943001094005*^9, 3.799430106335676*^9}, {3.7994301381366158`*^9, 
   3.799430143055377*^9}, {3.799504235825959*^9, 3.7995042439926167`*^9}, 
   3.7995047508658895`*^9, {3.7995074216100883`*^9, 3.79950742486397*^9}, {
   3.799513727203909*^9, 3.7995137672911367`*^9}, 3.799514768752529*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"72461aed-3600-4943-878f-646c759d0a8b"],

Cell[BoxData[
 TemplateBox[{
  TemplateBox[{20}, "Spacer1"],StyleBox[
   "\"\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0435: \"", FontFamily -> "Baskerville", StripOnInput -> False],
   TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[394208123], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[394208123]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    360527563][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    360527563][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    360527563][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    360527563][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   360527563][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 360527563]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[360527563][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[360527563][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )],StyleBox[
   "\"\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\:0440\
\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f: \"",
     FontFamily -> "Baskerville", StripOnInput -> False],TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1352970287], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1352970287]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    769240999][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    769240999][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    769240999][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    769240999][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   769240999][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 769240999]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[769240999][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[769240999][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.799430030271018*^9, 3.799430056417867*^9}, {
   3.7994300883652334`*^9, 3.7994301067342005`*^9}, {3.7994301385452733`*^9, 
   3.799430143582762*^9}, 3.79950424695613*^9, {3.79950475414307*^9, 
   3.799504760963994*^9}, 3.7995070421331377`*^9, 3.7995071441072392`*^9, {
   3.799508344958802*^9, 3.7995083708917084`*^9}, 3.79950847530894*^9, {
   3.7995085069447174`*^9, 3.799508521019948*^9}, {3.7995085597670116`*^9, 
   3.79950858326721*^9}, {3.799508674277043*^9, 3.7995086981370316`*^9}, {
   3.79950887589392*^9, 3.799508905927637*^9}, {3.7995090101884937`*^9, 
   3.7995090471388793`*^9}, 3.799509077258668*^9, 3.799510708836913*^9, 
   3.7995830077782035`*^9, 3.7995855159069705`*^9, 3.799588785351367*^9, 
   3.799594212553085*^9, {3.7995963735545597`*^9, 3.799596384968788*^9}, {
   3.799671747869109*^9, 3.7996717731356416`*^9}, 3.800078155153865*^9, {
   3.8001151293659935`*^9, 3.8001151320109196`*^9}, 3.800118572819846*^9},
 Magnification->1.,
 CellLabel->"Out[10]=",ExpressionUUID->"484bcff1-570e-4677-a532-780bf69ec475"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " ",
 StyleBox["\:0422\:043e\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:0435",
  FontSize:>Dynamic[
   0.019999999999999997` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]
}], "Subsection",
 CellChangeTimes->{
  3.799428859005663*^9, {3.799428897207881*^9, 3.799428899918268*^9}, {
   3.7994302763131094`*^9, 3.7994302807209873`*^9}, 3.79950715735128*^9},
 FontSize:>Dynamic[
  0.01999999999999999 
   FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"3a1968a3-e24d-4fd2-91bc-20567c06cba7"],

Cell[TextData[{
 StyleBox["gap  = ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", 
     StyleBox[
      RowBox[{" ", 
       RowBox[{"car", " ", "in", " ", "front", " ", 
        RowBox[{"(", "i", ")"}]}]}],
      FontSlant->"Italic"]], "-"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ea782d22-ab13-4b10-bd7f-443d8b7e2319"],
 StyleBox[" ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "-", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c2c5cbb4-8dd5-41be-a4ad-9a48f42bd496"],
 " ,\t",
 StyleBox["\:0433\:0434\:0435",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 StyleBox[" x - ",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
  FontSlant->"Italic"],
 StyleBox["\:043f\:043e\:0437\:0438\:0446\:0438\:044f \
\:0430\:0432\:0442\:043e\:043c\:043e\:0431\:0438\:043b\:044f",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 StyleBox["\nif ",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d9c5667b-5596-4eef-958b-bb6a42228ea5"],
 " > ",
 StyleBox["gap",
  FontSlant->"Italic"],
 " \t",
 StyleBox["then ",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ff8ab2b9-950e-405e-954b-2d1bf554e565"],
 " = ",
 StyleBox["gap",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.799509394152359*^9, {3.7995094356309776`*^9, 3.7995096387443886`*^9}, {
   3.7995100546484284`*^9, 3.799510066151574*^9}, {3.7995122199080324`*^9, 
   3.7995122277098236`*^9}},ExpressionUUID->"fbe3b4f2-f0b7-4d21-b51b-\
a30067f740a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showExample", "[", "\[IndentingNewLine]", 
  RowBox[{"carsDataSample", ",", "\[IndentingNewLine]", 
   RowBox[{"barking", "[", "3", "]"}]}], " ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     StyleBox[
      StyleBox[
       StyleBox["i",
        FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
        FontSlant->"Italic"],
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
      FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
      " ", "\[Rule]", " ", 
     StyleBox[
      StyleBox[
       StyleBox["3",
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
      FontSize:>Dynamic[
       0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}], 
    StyleBox[" ",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    "*)"}],
   FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  StyleBox[" ",
   FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.79943023347816*^9, 3.7994302384549303`*^9}, 
   3.7995047801528516`*^9, {3.7995067348158216`*^9, 3.7995067470177593`*^9}, {
   3.7995074146027966`*^9, 3.7995074166399856`*^9}, {3.799513712466299*^9, 
   3.7995137234972486`*^9}, {3.7995147729627266`*^9, 3.7995147762573566`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"1ba024a5-6c91-42af-a357-5555241b6d96"],

Cell[BoxData[
 TemplateBox[{
  TemplateBox[{20}, "Spacer1"],StyleBox[
   "\"\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0435: \"", FontFamily -> "Baskerville", StripOnInput -> False],
   TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[760685248], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[760685248]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    549607208][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    549607208][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    549607208][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    549607208][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   549607208][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549607208]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[549607208][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[549607208][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )],StyleBox[
   "\"\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\:0440\
\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f: \"",
     FontFamily -> "Baskerville", StripOnInput -> False],TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[69076151], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[69076151]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    410374766][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    410374766][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    410374766][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    410374766][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   410374766][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 410374766]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[410374766][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[410374766][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{
  3.799430240425084*^9, {3.7995067372081723`*^9, 3.799506751673212*^9}, {
   3.79950703527205*^9, 3.7995070389580755`*^9}, 3.799507130648582*^9, 
   3.7995107136239276`*^9, 3.7995830078151207`*^9, 3.7995855161288853`*^9, 
   3.7995887853822546`*^9, {3.7995963735834827`*^9, 3.7995963907936563`*^9}, {
   3.800078085767265*^9, 3.800078134103198*^9}, {3.800115140096297*^9, 
   3.8001151415563927`*^9}},
 Magnification->1.,
 CellLabel->"Out[22]=",ExpressionUUID->"388b865b-1fdd-47f0-bcfe-32c9b820c32c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " ",
 StyleBox["\:0420\:0430\:043d\:0434\:043e\:043c\:0438\:0437\:0430\:0446\:0438\
\:044f ",
  FontSize:>Dynamic[
   0.019999999999999997` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]
}], "Subsection",
 CellChangeTimes->{{3.7994288937850437`*^9, 3.7994289054406986`*^9}},
 FontSize:>Dynamic[
  0.02 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"ba894d4e-5193-4129-b418-cb63e7ede403"],

Cell[TextData[{
 StyleBox["if rnd < ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", 
    StyleBox["brake",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "1495429e-40af-4cd3-a8e0-23008e5985f3"],
 " \[And] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],ExpressionUUID->
  "ce78380d-992b-4712-a719-9dd134ebf63c"],
 " > 0 \t",
 StyleBox["then ",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]],ExpressionUUID->
  "7b308d49-a2b3-4c7b-bde6-3c9d83b697d8"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", "i"], "-", "1"}], TraditionalForm]],ExpressionUUID->
  "da4df3d3-4429-4b41-8f39-b16948dea9fb"],
 ",\t",
 StyleBox["\:0433\:0434\:0435",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    StyleBox[
     SubscriptBox["p", 
      StyleBox["brake",
       FontSlant->"Italic"]],
     FontSize:>Dynamic[
      0.011199999999999998` 
       FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}], TraditionalForm]],
  ExpressionUUID->"99e399ee-41b9-43c1-bbc2-9b70d2c590f5"],
 " ",
 StyleBox["- \:043c\:0430\:043b\:0430\:044f \:0432\:0435\:0440\:043e\:044f\
\:0442\:043d\:043e\:0441\:0442\:044c, \:0441 \:043a\:043e\:0442\:043e\:0440\
\:043e\:0439 \:0432\:043e\:0434\:0438\:0442\:0435\:043b\:044c \:0434\:043e\
\:043f\:043e\:043b\:043d\:0438\:0442\:0435\:043b\:044c\:043d\:043e \:0442\
\:043e\:0440\:043c\:043e\:0437\:0438\:0442, ",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 StyleBox["rnd",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
  FontSlant->"Italic"],
 StyleBox[" - \:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0435 \:0447\
\:0438\:0441\:043b\:043e",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]
}], "Text",
 CellChangeTimes->{{3.7995099886949635`*^9, 3.7995100408119087`*^9}, {
  3.799510076079585*^9, 3.799510175619949*^9}, {3.799510680935483*^9, 
  3.799510685384869*^9}, {3.800080482815947*^9, 3.8000804903617663`*^9}, {
  3.8000813094831915`*^9, 
  3.800081364888766*^9}},ExpressionUUID->"26cefe77-7750-4b5b-96a3-\
c8cc254e6667"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showExample", "[", "\[IndentingNewLine]", 
  RowBox[{"carsDataSample", ",", "\[IndentingNewLine]", 
   RowBox[{"randomization", "[", 
    RowBox[{"2", ",", 
     RowBox[{"1", "/", "3"}], ",", "0.2"}], "]"}]}], " ", 
  RowBox[{
   StyleBox["(*",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   StyleBox[" ",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox[
       StyleBox[
        StyleBox["i",
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
         FontSlant->"Italic"],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       " ", "\[Rule]", " ", "2"}],
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    ",", " ", 
    StyleBox[
     RowBox[{
      SubscriptBox[
       StyleBox["p",
        FontSlant->"Italic"], 
       StyleBox["brake",
        FontSlant->"Italic"]], " ", "\[Rule]", " ", 
      RowBox[{"1", "/", "3"}]}],
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[",",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[" ",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[
     RowBox[{
      StyleBox[
       StyleBox[
        StyleBox[
         StyleBox["rnd",
          
          FontSize:>Dynamic[
           0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
          FontSlant->"Italic"],
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       " ", "\[Rule]", " ", "0.2"}],
     FontSize:>Dynamic[
      0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}], 
   StyleBox[" ",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   StyleBox["*)",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}], 
  StyleBox[" ",
   FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7994302705879774`*^9, 3.7994303068643713`*^9}, {
   3.799507159281915*^9, 3.799507216014161*^9}, {3.799507402593182*^9, 
   3.799507404747949*^9}, {3.7995133480728703`*^9, 3.7995133836059165`*^9}, {
   3.7995136708562837`*^9, 3.7995136940181403`*^9}, 3.7995147800196967`*^9, {
   3.8000813291475635`*^9, 3.8000813327024136`*^9}, {3.800081534710019*^9, 
   3.8000815395866427`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"eed37445-df75-4d19-af2e-49ce4b286886"],

Cell[BoxData[
 TemplateBox[{
  TemplateBox[{20}, "Spacer1"],StyleBox[
   "\"\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0435: \"", FontFamily -> "Baskerville", StripOnInput -> False],
   TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[12]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1413188887], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1413188887]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1483281935][{All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1483281935][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1483281935][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1483281935][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1483281935][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1483281935][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1483281935]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1483281935][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1483281935][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )],StyleBox[
   "\"\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\:0440\
\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f: \"",
     FontFamily -> "Baskerville", StripOnInput -> False],TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1237316780], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1237316780]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    532209609][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    532209609][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    532209609][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    532209609][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   532209609][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 532209609]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[532209609][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[532209609][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.7994303085821114`*^9, 3.799430327111534*^9}, {
   3.7995072033629203`*^9, 3.799507216578232*^9}, 3.799510721519758*^9, 
   3.7995830078639903`*^9, 3.7995855162844687`*^9, 3.799588785428831*^9, {
   3.7995963736239223`*^9, 3.7995963961797757`*^9}, 3.8000782477244015`*^9, 
   3.8001151477199097`*^9},
 Magnification->1.,
 CellLabel->"Out[23]=",ExpressionUUID->"77f829de-91a9-447a-95f9-47715d51ee53"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " ",
 StyleBox["\:0414\:0432\:0438\:0436\:0435\:043d\:0438\:0435 ",
  FontSize:>Dynamic[
   0.019999999999999997` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]
}], "Subsection",
 CellChangeTimes->{{3.799428913544938*^9, 3.799428915918871*^9}},
 FontSize:>Dynamic[
  0.02 FrontEnd`AbsoluteCurrentValue[{
     WindowSize, 1}]],ExpressionUUID->"2990ba79-4e6a-4c39-ace8-dedb6fd2a23c"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["x", "i"], "=", 
   RowBox[{
    SubscriptBox["x", "i"], "+", 
    SubscriptBox["v", "i"]}]}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"6b686b52-2382-454c-bbae-980c49410e9d"]], \
"Text",
 CellChangeTimes->{{3.799510657551162*^9, 
  3.79951066889867*^9}},ExpressionUUID->"184e9987-e55e-43ac-9e5b-\
974be399ffa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showExample", "[", "\[IndentingNewLine]", 
  RowBox[{"carsDataSample", ",", "\[IndentingNewLine]", 
   RowBox[{"driving", "[", "1", "]"}]}], " ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     StyleBox["i",
      FontSlant->"Italic"], " ", "\[Rule]", " ", 
     StyleBox["1",
      FontSize:>Dynamic[
       0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}], " ", "*)"}],
   FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7995074474738255`*^9, 3.799507544655839*^9}, 
   3.7995076988008795`*^9, {3.799507956312756*^9, 3.799507957035019*^9}, {
   3.7995133361706*^9, 3.7995133394943905`*^9}, 3.7995147852155237`*^9, {
   3.800078310603814*^9, 3.80007833431811*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"3337a26c-a704-4e3d-bbb1-75f76d1f2c50"],

Cell[BoxData[
 TemplateBox[{
  TemplateBox[{20}, "Spacer1"],StyleBox[
   "\"\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0435: \"", FontFamily -> "Baskerville", StripOnInput -> False],
   TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[917250761], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[917250761]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1673910417][{All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1673910417][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1673910417][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1673910417][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1673910417][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1673910417][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1673910417]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1673910417][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1673910417][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )],StyleBox[
   "\"\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\:0440\
\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f: \"",
     FontFamily -> "Baskerville", StripOnInput -> False],TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[15]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1224863571], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1224863571]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    885334633][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    885334633][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["16"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    885334633][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    885334633][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   885334633][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 885334633]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[885334633][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[885334633][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.7995074818059006`*^9, 3.799507532713863*^9}, 
   3.7995076991730824`*^9, {3.7995079512727585`*^9, 3.7995079574159684`*^9}, 
   3.799510734400652*^9, 3.7995830079025526`*^9, 3.799585516470414*^9, 
   3.799588785462741*^9, 3.7995963736499305`*^9, 3.7995964059354334`*^9, {
   3.800078301587507*^9, 3.8000783267698455`*^9}, 3.8001151525021205`*^9},
 Magnification->1.,
 CellLabel->"Out[24]=",ExpressionUUID->"53bd5909-351a-4be1-a21c-8ba9dd22e484"]
}, Open  ]]
}, Closed]],

Cell["4", "Subsection",
 CellChangeTimes->{3.800032446727236*^9, 3.8000343288352804`*^9},
 TextAlignment->Right,ExpressionUUID->"082027ba-6783-48fb-927c-35b2620e92a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"03fa509f-b039-4b57-b209-18bf721937b8"],

Cell[CellGroupData[{

Cell["\:0414\:0432\:0443\:0445\:043f\:043e\:043b\:043e\:0441\:043d\:0430\:044f\
 \:043c\:043e\:0434\:0435\:043b\:044c", "Section",
 CellChangeTimes->{{3.799511514547707*^9, 
  3.7995115197554817`*^9}},ExpressionUUID->"56487bab-7338-4801-8a13-\
35a6a68bf173"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:041e\:0431\:0440\:0430\:0431\:043e\:0442\:043a\:0430 \:0432\:0435\:0440\
\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:0438 ",
 StyleBox["W",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.799511619159727*^9, 3.7995116248404255`*^9}, {
  3.79951430070796*^9, 
  3.7995143011441255`*^9}},ExpressionUUID->"cb1cf172-92a3-4773-ae5f-\
42d3f4622603"],

Cell[TextData[{
 "\:041d\:0435\:0437\:0430\:0432\:0438\:0441\:0438\:043c\:043e \:043e\:0442 \
\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0438 \:0430\:0432\:0442\:043e\
\:043c\:043e\:0431\:0438\:043b\:044f \:0432\:043f\:0435\:0440\:0435\:0434\
\:0438, \:0432\:043e\:0434\:0438\:0442\:0435\:043b\:044c \:043d\:0430\:0447\
\:0438\:043d\:0430\:0435\:0442 \:043e\:0431\:0433\:043e\:043d \:0441 \:0432\
\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\:044e \:043c\
\:0430\:043a\:0441\:0438\:043c\:0443\:043c - ",
 StyleBox["maxW",
  FontSlant->"Italic"],
 ".\n",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],ExpressionUUID->
  "1f85388c-0191-48bf-b429-5bf3ce346486"],
 " \[UpArrow] \[DoubleLongRightArrow] ",
 StyleBox["W ",
  FontSlant->"Italic"],
 "\[DownArrow]\n\n\[ForAll] ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]],ExpressionUUID->
  "2e18c956-cc9e-4151-9212-d3c6e899e545"],
 StyleBox["v ",
  FontSlant->"Italic"],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", 
     StyleBox[
      RowBox[{" ", 
       RowBox[{"car", " ", "in", " ", "front", " ", 
        RowBox[{"(", "i", ")"}]}]}],
      FontSlant->"Italic"]], "-"}], TraditionalForm]],ExpressionUUID->
  "c2726e51-0e7f-4f0b-b403-e833f2c2a1b4"],
 " ",
 StyleBox["v  \t\tthen:\n\n",
  FontSlant->"Italic"],
 "\[CapitalTheta]",
 StyleBox["(\[CapitalDelta]v)",
  FontFamily->"Georgia",
  FontSize->25],
 " = ",
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"1", 
          RowBox[{
           StyleBox[
            RowBox[{"for", " ", "x"}],
            FontSlant->"Italic"], "\[GreaterEqual]", " ", "0"}]},
         {"0", 
          RowBox[{
           StyleBox[
            RowBox[{"for", " ", "x"}],
            FontSlant->"Italic"], 
           StyleBox[" ",
            FontSlant->"Italic"], "<", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], TraditionalForm]],ExpressionUUID->
  "6ae23412-24bb-47c0-9bc4-f90b0c0e03ed"],
 StyleBox["\n\nW = ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"0.1", " ", "\[Times]", " ", 
           StyleBox[
            RowBox[{"\[CapitalDelta]", 
             StyleBox["v",
              FontSlant->"Italic"]}]], 
           StyleBox[" ",
            FontSlant->"Italic"], "\[Times]", 
           StyleBox[" ",
            FontSlant->"Italic"], 
           RowBox[{"\[CapitalTheta]", 
            StyleBox["(",
             FontFamily->"Georgia"], 
            StyleBox[
             StyleBox[
              RowBox[{"\[CapitalDelta]", 
               StyleBox["v",
                FontSlant->"Italic"]}]],
             FontFamily->"Georgia"], 
            StyleBox[")",
             FontFamily->"Georgia"]}]}], 
          RowBox[{
           RowBox[{
            StyleBox["if",
             FontSlant->"Italic"], 
            StyleBox[" ",
             FontSlant->"Italic"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]", 
              StyleBox["v",
               FontSlant->"Italic"]}]]}], " ", "\[LessEqual]", 
           FractionBox[
            RowBox[{
             SubscriptBox[
              StyleBox["v",
               FontSlant->"Italic"], 
              StyleBox["max",
               FontSlant->"Italic"]], " "}], "c"]}]},
         {
          SubscriptBox[
           StyleBox["W",
            FontSlant->"Italic"], 
           StyleBox["max",
            FontSlant->"Italic"]], 
          RowBox[{
           RowBox[{
            StyleBox["if",
             FontSlant->"Italic"], 
            StyleBox[" ",
             FontSlant->"Italic"], 
            StyleBox[
             RowBox[{"\[CapitalDelta]", 
              StyleBox["v",
               FontSlant->"Italic"]}]]}], 
           StyleBox[" ",
            FontSlant->"Italic"], ">", 
           FractionBox[
            RowBox[{
             SubscriptBox[
              StyleBox["v",
               FontSlant->"Italic"], 
              StyleBox["max",
               FontSlant->"Italic"]], " "}], "c"]}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], TraditionalForm]],ExpressionUUID->
  "c571315f-06f9-4328-8ea5-8004b0ed349a"],
 ", \t",
 StyleBox["\:0430\:043b\:044c\:0442\:0435\:0440\:043d\:0430\:0442\:0438\:0432\
\:043d\:0430\:044f \:0437\:0430\:043f\:0438\:0441\:044c:",
  FontSize:>Dynamic[
   0.011199999999999998` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
  FontSlant->"Italic"],
 " ",
 StyleBox["W = max",
  FontSlant->"Italic"],
 "{0",
 StyleBox[", ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"min", 
    RowBox[{"{", 
     SubscriptBox["W", 
      StyleBox["max",
       FontSlant->"Italic"]]}]}], TraditionalForm]],ExpressionUUID->
  "9529821c-d7a5-4b32-9159-835a21718c4f"],
 StyleBox[", ",
  FontSlant->"Italic"],
 "0.1",
 StyleBox[" ",
  FontSlant->"Italic"],
 "\[Times]",
 StyleBox[" ",
  FontSlant->"Italic"],
 "\[CapitalDelta]",
 StyleBox["v",
  FontSlant->"Italic"],
 "}}"
}], "Text",
 CellChangeTimes->{{3.7995116578560143`*^9, 3.7995116982609577`*^9}, {
  3.7995119872243814`*^9, 3.799511989420186*^9}, {3.7995120276842055`*^9, 
  3.7995121374035454`*^9}, {3.7995121736081114`*^9, 3.799512200426992*^9}, {
  3.799512242009122*^9, 3.7995123797900705`*^9}, {3.799512423533354*^9, 
  3.7995126928864145`*^9}, {3.7995129300550246`*^9, 3.799513050543207*^9}, {
  3.7995130934943137`*^9, 3.799513096761236*^9}, {3.799513299303154*^9, 
  3.79951330252055*^9}, {3.799673590503019*^9, 
  3.799673608785968*^9}},ExpressionUUID->"226582ce-22ab-4adb-a49e-\
209162c0c35a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showExample", "[", "\[IndentingNewLine]", 
  RowBox[{"carsDataSample", ",", "\[IndentingNewLine]", 
   RowBox[{"probabilityW", "[", 
    RowBox[{"3", ",", "5", ",", "3", ",", "0.8"}], "]"}]}], " ", 
  RowBox[{
   StyleBox["(*",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   StyleBox[" ",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox[
       StyleBox[
        StyleBox["i",
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]],
         FontSlant->"Italic"],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       " ", "\[Rule]", " ", "3"}],
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[",",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[" ",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[
     RowBox[{
      StyleBox[
       SubscriptBox["v", "max"],
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], "\[Rule]", 
      StyleBox[" ",
       FontSlant->"Italic"], "5"}],
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[",",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[" ",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[
     RowBox[{
      StyleBox["c",
       FontSlant->"Italic"], 
      StyleBox[" ",
       FontSlant->"Italic"], "\[Rule]", " ", "3"}],
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[",",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    StyleBox[" ",
     FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
    RowBox[{
     StyleBox[
      SubscriptBox[
       StyleBox[
        StyleBox[
         StyleBox[
          StyleBox["W",
           
           FontSize:>Dynamic[
            0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
          
          FontSize:>Dynamic[
           0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], "max"],
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
     StyleBox["\[Rule]",
      FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
     StyleBox[" ",
      FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
     StyleBox["0.8",
      FontSize:>Dynamic[
       0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}]}], 
   StyleBox[" ",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
   StyleBox["*)",
    FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7995131059527254`*^9, 3.7995133083681545`*^9}, {
   3.7995140252129326`*^9, 3.799514030809129*^9}, 3.7995147891691346`*^9, {
   3.799515172226966*^9, 3.7995151791547165`*^9}, {3.7996735868850937`*^9, 
   3.799673588145481*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e72bed7e-650f-463b-8689-f5aacffbdb2d"],

Cell[BoxData[
 TemplateBox[{
  TemplateBox[{20}, "Spacer1"],StyleBox[
   "\"\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0435: \"", FontFamily -> "Baskerville", StripOnInput -> False],
   TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[21]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1721792159], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1721792159]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1607413179][{All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1607413179][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1607413179][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1607413179][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1607413179][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1607413179][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1607413179]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1607413179][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1607413179][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )],StyleBox[
   "\"\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\:0440\
\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f: \"",
     FontFamily -> "Baskerville", StripOnInput -> False],TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[22]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[719667717], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[719667717]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1813098855][{All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1813098855][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1813098855][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1813098855][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1813098855][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1813098855][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1813098855]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1813098855][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1813098855][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{
  3.7995131131163745`*^9, 3.7995133089714947`*^9, {3.799515173095867*^9, 
   3.799515179689227*^9}, 3.799583007959923*^9, 3.7995855166484203`*^9, 
   3.7995887855123005`*^9, 3.7995963736918173`*^9, 3.7995964146723986`*^9, {
   3.799596625021871*^9, 3.7995966509544873`*^9}, 3.800115160419919*^9, 
   3.8001172910357304`*^9},
 Magnification->1.,
 CellLabel->"Out[32]=",ExpressionUUID->"fef933a3-de4d-4c37-86a0-40f1e21b7320"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:041f\:0435\:0440\:0435\:0441\:0442\:0440\:043e\:0439\:043a\:0430 \:043c\
\:0430\:0448\:0438\:043d\:044b \:043d\:0430 \:043b\:0435\:0432\:0443\:044e \
\:043f\:043e\:043b\:043e\:0441\:0443 \:0434\:0432\:0438\:0436\:0435\:043d\
\:0438\:044f"
}], "Subsection",
 CellChangeTimes->{{3.7995943572904353`*^9, 
  3.7995943814154463`*^9}},ExpressionUUID->"b2d1331e-1cab-402f-9033-\
d8839857b2d0"],

Cell[CellGroupData[{

Cell["1 \:0441\:043b\:0443\:0447\:0430\:0439:", "Subsubsection",
 CellChangeTimes->{{3.7995968808850565`*^9, 
  3.7995969197880106`*^9}},ExpressionUUID->"cbed7216-ea04-4c9e-84b2-\
0f55ede74e2e"],

Cell[TextData[{
 StyleBox["if",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], ">", 
    SubscriptBox["x", "2"], ">", 
    SubscriptBox["x", "3"]}], TraditionalForm]],ExpressionUUID->
  "f65c8ee7-88ff-4a26-8573-af5d8f6b1615"],
 " \[And] ",
 StyleBox["rnd ",
  FontSlant->"Italic"],
 "< ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "2"], TraditionalForm]],ExpressionUUID->
  "050603a5-d858-4308-8a90-b36fec9f77ac"],
 "\t",
 StyleBox["then: ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["lane",
      FontSlant->"Italic"], "2"], "=", " ", 
    RowBox[{
     SubscriptBox[
      StyleBox["lane",
       FontSlant->"Italic"], "2"], "-", "1"}]}], TraditionalForm]],
  ExpressionUUID->"0ba4a9c8-e11f-4cf2-928a-468e31af1fdf"]
}], "Text",
 CellChangeTimes->{{3.799672418929639*^9, 3.799672453856056*^9}, {
  3.7996724924708986`*^9, 3.7996724978167934`*^9}, {3.79967254641144*^9, 
  3.7996726637460527`*^9}, {3.7996728310243483`*^9, 3.799672867649685*^9}, {
  3.7997722771494694`*^9, 
  3.799772278087006*^9}},ExpressionUUID->"27089457-bce4-47d5-9ce2-\
901766f3a8e9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3U9sHOUZx/FN7UQRiqASKcohIpATwjGVcmlzyKGJLyg5BKpKqSJVOJgi
ZKASJkEglyhBJFJziE80MmlySKDLIQIk8K0nCynAIY5BchBGFiI0JgeCE1PX
cuq37zN+15mZndmdeed93+ed2d+uvk2I98/77ny6Ox6/3n344F+e/PMvarXa
0Hr5P0/2v/K7l17qf/X3v5T/8YcXh5579sVnBh5/8eVnnn3mpd8e7JL/OLKm
VntL/tktE0IghBBCCCWWduIeFyp3DUax2MeFyh1cIRvBFbIRXCEbwRWyEVwh
G8EVshFcIRvBFbIRXCEbwRWyEVwhG8EVshFcIRvBFbIRXCEbwRWyEVwhG8EV
shFcIRvBFbIRXCEbwRWyEVwhG8EVshFcIRvBFbIRXCEbwRWyEVwhG8EVshFc
IRvBFbIRXCEbwRWyEVwhG8EVshFcIRvBFbIRXCEbwRWyEVwhG8GVbjXUJriC
KxvBVWlcdcl2yA7J3pV9Krsuu62GRX/Oyi6rrx9Sl+/iGC9cee1qjWyX7Jzs
R83h3lTX36Vuz8nY4cpLV92yftlVw0P/UvaUun2rc4Ar71ztFeY9xbuq7sfq
XOIn/u3me1a2w0bZRcdTofu739J84Cp3xrfBTtk1pulcU/dvfF5wxeaK9qNf
kS0xT2lJjcPofj1csbii7/9H2acS7W1h8LgEXDl3tU5WZ59GcnU1vsLzhCun
rmibfcQ+hdZ9LAzYgitnrmj/5QL78LN1QRTc34IrZ67eYB96vt4sMFe4yp3W
43xAtsw+9Hwtq3FrzRmurLvaJltgH7ZeC2r8uecNV1ZdrZddYR9ysSbVPHLN
Ha6suhphH66ZRvLMmxjFYp+A/2V+fHeL8u1TpbWs5pNp7nBlzdVa2RT7UM02
pebVdv5wZc3VUPxqCY+19yVMfwiu2Fxtks1V1NWcmh9cuXd1Nulq3EYMuRJq
fnDl1tVWkbLuhduIQVdLap5w5c7V6bSrcRsx6IoahStnrjbLFjvE1aKaL1zZ
d9XyGCi3EcOuhGhxrBSujLm6V9z9HdFOcXVLtgGurLp6vt3VuI1YcEUNwJVV
V5Md6uoSXFlztT3L1biNWHJF9cKVFVenOtzVKbiy4urbDndF84+shYerwq4y
vQZW3JVQjwNcmXN1FK6CjsGVUVcTcBV0Ba6MuXowz9W4jVh2RW2BKyOuDsJV
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
ebhymneusp5nY3cNV15VWlfx56vRwrfI7wOu0m/Plav4/v249i2V35Vn1RJc
Bf9Q5DZdueoLjbnPyC2yb4+qVFpXYzXTz1UCrsxVSle0v974ntHMflXjzL49
qlLpXNEx0f2hsQ4avXX27VGVSucq/HNCs6YEXJmrVK7smhJwZa7SuAqbKn78
M+3Mvj2qkveu5mOmTlozJeDKXF67iu+jF/+5crsz+/aoSt66cm9KwJW5vHQV
N2XmmGeWM/v2qEreuYqbMrMONOuZfXtUJe9c8ZkScGUur1yF14m2M9VYy2B2
v4t9e1Qlb1yF1xSPZbh8Yy3DNFz5mBeuxkP3neX5p/G81mPUlIArc7G7mq9F
1ybkyfxxd/btUZXYXZ3UNGXnmBb79qhKrK7mC5gyv28l4Mpc7M9Xfp3Zt0dV
giu4giu4KktwBVdwBVeJFfrmx17xfyp8e3AFV3AVPvMbgav024MruIKr8Jnf
CFyl3x5cwRVchc/8RirkyrhTuIIruAqf+Y3AVWo1uIIruAqf+Y3AVaseZRei
d+Y3AldpPSr7gV2I3pnfCFwlFZiizVPSM78RuIq3agquHMe/7W3VEzYFV47j
3/42ajIFV47jN2C6RFOyG+xC9M78RuAq1ZTs1+xC9M78RirkKv5PBkzV2IXo
nfmNdK6rlqbE3Vsr45nfSGe6amsKrhjywFABV5lMwRVDHhjSdJXZlGi6tXLF
bqRzXPUoP0mmHjM2Du5tU+Y8MJTTlRtTcNVJrtyZgqtOceXWFFxV3lXPXT/u
TMFVpV2RqRvNnuybgqvKumI1BVeVdMVuCq6q6GpbC1O9zsbBvW3KHL+hJlMi
fR/dnSm4qpKrRFPqucutKbiqiqtUU70rf3c/Ju5tU+b4PbU1VYOr8lUCU3BV
wjw0Rf/WG7soXJUsD03Jeps2MVyVKx5Tva1M0WXgquT5ZWpb43JwVfI8NAVX
FchDU3BVgTw0BVcVyENTcFWBPDQFVxXIQ1NwVYE8NAVXFcj89nishamerLcD
VyXPQ1NwVYE8NAVXFchDU3BVgTw0BVcVyENTcKVb84YoXe1MFbttuPLfVZds
h+yQ7F3Zp7LrsttqOPTnrOyy+vohdfkuFlNw5bOrNbJdsnOyHzWHeVNdf5e6
vcY2/3WKqR+MmIIrH111y/plVw0P+UvZU2Jjbbt1U3Dlm6u9FjxF+7p2R+y1
bAqufHG1UXbR6fAvyu63ZAqufHC1U3aNZQr/rv1PvFP7k3FTcMXpivajX5Et
MU9lSY3j7n49XJXVFX3/P8o+hWhvi1bHJeDKd1frZHX24SdXV+ODq3K5om32
EfvQW/exEVtw5coV7b9cYB92ti6IovtbcOXK1RvsQ87Xm0VdeZEHD6RFVwdk
y+xDzteyGjdc+elqm2yBfbh6Lajxw5VfrtbLrrAPtViTah5w5Y+rEfZhmmkE
rrxxtVuUb58qrWU1H7jidbVWNsU+RLNNqXnBFZ+rofjFuR9eQ5tkCK7YXG2S
zVXU1ZyaX1tXaSf+7eZ7qY/p2aSLcxsx+H/1s3Dl3NVWkbLuhduIQVdLap5w
5c7V6bSLcxsx6IoahStnrjbLFjvE1aKabztX8dv0YLv5XtNj2fIYKLcRw66E
aHOsFK6MuLpX3P0d0U5xdUu2Aa6sunq+3cW5jVhwRQ3AlVVXkx3q6hJcWXO1
PcvFuY1YckX1wpUVV6c63NUpuLLi6tsOd0Xzb1oLD1eFXGV6Day4K6EeB7gy
5+ooXAUdgyujribgKugKXBlz9WCei3MbseyK2gJXRlwdhKtIT8OVEVfn4SrS
ebgy4moGriLNwJURV7kuzm3EgStqdY0yXMGVQVf74AquLLh6Ha7gyoKrOlzB
lQVXk3AFVxZc0br3briCK8OuqEfgqpyuhoeHxejoqBgfHxdJp3q9LgYHB7lc
7YGr8rjq6ekJvOQ5jY2NcbgagKvyuKLnqPBpenpanDx5MnIZ+u/Z2dnI5eh5
zbGrI3BVHlfh56qJiYnUy+3fvz/ian5+3rWr03BVHleNfSl6PqLXxFaXpeey
8Mmxqw/gqjyu8kTPZ4yuPoOrarqi177GiZ67HLv6Cq6q54qOL4RPDPvt38NV
9VyF962y7ItZcPUTXFXHFfkJ71fRayF9b1jkNjUfmp/hqhqu4setyFdfX1/h
2y3w8MBVSV2RJdp3iu+j0/FTU/cBV53hil7rkk4mXvPgypfcu4ofS4+f6Nip
ide/gq6wf1UyV0nRa2H4e0CTz12aDw2+H6yAq0a0dqFxKnp8oaArHL+qkCty
FN6HL3I8tKArHG+vkCsq/HpI+1pMrvDzwYq5Ch8XbbWWxrIrrGeomKvwsVHG
5yusv6qQq/ixLcb9qyNw5a+rxnMPrRPNcnlyFD4x/hwH69s9dRV+7smynxT/
XtDEa2ABAvh9HE9dxddQtfqdLTIVPy5q6pi75kOzDa78dBV/TaNTfH+JPMV/
7mz654QaD8sd2Xq48tMVrVXIezK1Nqagq2/IFFz56apRu99rJkv0dRtrGTQJ
fBhz1XTi326+Z98VdxoPy1G4gisLrp6AK7iy4Cr+/qJwld/VDFxFmmmYgqtC
rvD+7dGS3r8drvK7wudNREv6vAm4yu9qC1xFegiujLiirsBVUNrnecGVnqtj
cBWU9vmDcKXnCp+XulLa56XClZ4rCp/vnP75znCl7wqfRx8zFXIVv00Ptpvv
rT6GmV4LuY1YdNULV1ZcUZMd6upSkim4MubqhQ51NQBXVl3dJ7vdYa5uyTbA
lVVX1EiHuRpJMwVXRl1tFiufZ9UJrhbVfOHKvivqdIe4Gm1lCq6Mu9oqW6q4
qyU1T7hy54o6W3FXZ9uZgisrrmgt7lxFXc2J0FpjuHLqihqqqKuhLKbgypqr
tbKpirmaUvOCKz5X1G7ZckVcLav5ZDIFV1ZdUavHSrmNFHTV8hgoXDl3Re+B
0fZn0p73hZpH1jkHwZVVVxS9b88C+3D1WlDjzzPfILiy7oo6IEL7WiXqQM55
rgZXTlxRx9mHnK8TGnNcDa6cuaI14BfYh52tCyJhzXqe4MqZK2qdbIx96K0b
U+PUnWMQXDl1VVPbrM4+/OTeEwZMCbgqUKHHvUt2hn0K0c6ocRWdWxBcsbii
aP/lVZGyrsZhdP+viYL7U/Hgis1Vo52ya0zTuKbu3+R8guCK3RW1UXbR8RQu
qvs1PZcguPLCVaO9squWh35V3Y+tOQTBlVeuqG5ZvzDv60t1u90Wx74aXHnn
qhHtR/fJzsluag7zprr+bmF4v7xdcOWtq3D0/f8O2WGxcuzrc9l1sfLZ70L9
OSu7rL5+WF3eyXNTUnBVClelC66QjeAK2QiukI3gCtkIrpCN4Eqv/wOBsmVV

    "], {{0, 400}, {150, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQwY4Ns1BpCBDJd1QWZhyuMFXMkFRSVA+g8QG6WkFiczMDAaANnZ5SUF
QHHGOUC2SFI2mL0BxC4KCXIGso8A2XzpEPYVEDsJwn4CYhcBPQFkfwGpTwez
mTjA5kDYMiB2SWoFyF4G5/yCyqLM9IwSBUNLS0sFx5T8pFSF4MriktTcYgXP
vOT8ooL8osSS1BSgWoj7wEAQohAUYhpAjRaaJPqbIADFA4T1ORAcvoxiZxBi
CJBcWlQGZTIyGRPmI8yYI8HA4L+UgYHlD0LMpJeBYYEOAwP/VISYmiEDg4A+
A8O+OQCFT1yI
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "XMP" -> Association[
       "DublinCoreSchema" -> Association["Format" -> "image/png"], 
        "PhotoshopSchema" -> Association["ColorMode" -> 3], "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2020, 4, 8, 22, 46, 38.}, "Instant", "Gregorian", 3.], 
          "CreatorTool" -> "Adobe Photoshop CC (Windows)", "MetadataDate" -> 
          DateObject[{2020, 4, 8, 22, 46, 38.}, "Instant", "Gregorian", 3.], 
          "ModifyDate" -> 
          DateObject[{2020, 4, 8, 22, 46, 38.}, "Instant", "Gregorian", 3.]], 
        "MediaManagementSchema" -> 
        Association[
         "DocumentID" -> 
          "adobe:docid:photoshop:9970eaee-2163-e848-99c6-1657c5a0cf68", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:973648f6-b6fe-7542-b87f-70a130bae0f4", "When" -> 
              DateObject[{2020, 4, 8, 22, 46, 38}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:a87f29f3-9fd1-9749-9d61-a9aeae21dd69", "When" -> 
              DateObject[{2020, 4, 8, 22, 46, 38}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]], "InstanceID" -> 
          "xmp.iid:a87f29f3-9fd1-9749-9d61-a9aeae21dd69", 
          "OriginalDocumentID" -> 
          "xmp.did:973648f6-b6fe-7542-b87f-70a130bae0f4"], 
        "RightsManagementSchema" -> 
        Association[
         "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:973648f6-b6fe-7542-b87f-70a130bae0f4", "When" -> 
              DateObject[{2020, 4, 8, 22, 46, 38}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:a87f29f3-9fd1-9749-9d61-a9aeae21dd69", "When" -> 
              DateObject[{2020, 4, 8, 22, 46, 38}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]]], "PagedTextSchema" -> 
        Association[
         "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:973648f6-b6fe-7542-b87f-70a130bae0f4", "When" -> 
              DateObject[{2020, 4, 8, 22, 46, 38}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:a87f29f3-9fd1-9749-9d61-a9aeae21dd69", "When" -> 
              DateObject[{2020, 4, 8, 22, 46, 38}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{136.2499999999893, Automatic},
  ImageSizeRaw->{150, 400},
  PlotRange->{{0, 150}, {0, 400}}]], "Input",ExpressionUUID->"ca8b3e48-1cdc-\
4e9c-adf5-b22cd182e6f5"]
}, Closed]],

Cell[CellGroupData[{

Cell["2 \:0441\:043b\:0443\:0447\:0430\:0439:", "Subsubsection",
 CellChangeTimes->{{3.7995968808850565`*^9, 3.7995969197880106`*^9}, 
   3.7995969649494076`*^9},ExpressionUUID->"316c99bf-4061-4816-9a9e-\
486537611041"],

Cell[TextData[{
 StyleBox["if",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], ">", 
    SubscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0cb0ae60-a2a1-4d25-b965-30cf6c48f132"],
 " \[And]",
 StyleBox[" rnd ",
  FontSlant->"Italic"],
 "<",
 StyleBox[" ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "af98efbb-b045-414b-a7ac-187067e46480"],
 "\t\t",
 StyleBox["then: ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["lane",
      FontSlant->"Italic"], "2"], "=", " ", 
    RowBox[{
     SubscriptBox[
      StyleBox["lane",
       FontSlant->"Italic"], "2"], "-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a88ef0fe-c5a9-495b-a453-21f933e0b4c4"]
}], "Text",
 CellChangeTimes->{{3.7996726784910693`*^9, 3.7996726949083953`*^9}, {
  3.7996727258781595`*^9, 3.7996728238332567`*^9}, {3.7996728713220315`*^9, 
  3.7996728847318125`*^9}},ExpressionUUID->"0bb94367-f1be-4ca4-88a9-\
f9d650d6a562"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3U2MXWUdx/FbWxpCiJiIyIKIsCIWNmyUBQvLbAgsCsakphsHioRUIWF4
CaZCwAiJLOgKyYiwAHFcEDDR2blqSBAXlErSGksaQw0TFpbSwTppM8fnuXNu
PffMOfflOc/v/J9z53tvvhQ69+V57vlw58y5z9x73T0P3f2jL/V6vYVL3T/u
nn/8uw8/PP/E977i/uP7Dy48cP+D9+2//cFH7rv/voe/c89295eHtvV6L7o/
d7iyLCMiIiKqrO5kPS7qdgNGpczHRd0OV6QIV6QIV6QIV6QIV6QIV6QIV6QI
V6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QI
V6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QIV6QI
V6QIV6QIV6QIV6QIV6H1aEy4wpUiXHXG1XbXLa5HXW+4/uL6xHU2H5b/c8X1
fv71R/PLb7cYL66SdrXNtdv1quvfgcM9nV9/d357rYwdV0m62uGadx2PPPQP
XT/Mb186B1wl5+rOLL6ncsfz+5HOpXyy326pJ9kOV7rebHkq/v6+KpoPrqYu
+ja41XXKaDqn8vuPPi9cmbny+9GPu84bT+l8Po6o+/W4MnHlf/5fNJ/KcL/O
Ih6XwFXrrna6lsynUd1SPr7G88RVq678Nvuj+RRG96csgi1ctebK77+8bj78
yXo9a7i/havWXP3cfOjT9YsGc8XV1AU9zvtc6+ZDn671fNxBc8aV3NWNrnPm
ww7rXD7+qeeNK6mrS10fmA+5WUfzeUw1d1xJXR0yH26cDk0zb8+olPkE0m/i
x/e2rHv7VHWt5/OZaO64krm6xHXMfKhxO5bPa+z8cSVztVC+WsVjnXwV01/A
lZmrq11nZtTVmXx+uGrf1StVV7M2EslVls8PV+26uj6rWfdibSSiq/P5PHHV
nquX6q5mbSSiK98irlpzdY1rbYu4Wsvniyu9q5HHQK2NRHaVZSOOleIqmqsv
Z///HdGt4upz1+W4krr68birWRsRuPLtx5XU1dEt6updXMlc3TzJ1ayNiFz5
bsKVxNULW9zVC7iSuPrnFnfl5z+0Fh5XjV1N9D1wxl1l+eOAq3iunsZVv2dw
FdXVEVz1+wBX0Vx9Y5qrWRsRu/Jdi6soru7B1VD34iqKq9dwNdRruIri6iSu
hjqJq8aurp72atZGWnCV5Y8LrsJd7cFVZXtw1cjVz3BV2ZO4auTqd7iqbAlX
jVyNXRezRV0dxVWwK/+++v9N2dXSknvacCf/Z8uu/Lr3HbgKcnVDyNXa8LS4
uJgVTwcPHmzble8GXAW5uiM1V97PyspKVj7t2rXLwtUduApydW8qrg4cOJCd
OHFikyd/8n/f9PYDH6L9uApy9aS1q7m5uezw4cMXDR05ciRbXV0dctV036oB
hadwFeTqV5au/Pe8wWl5eblvbPDcVTz5fS0jVy/hKsjV25au/D6Tf37au3dv
rTd/Kn+9RVdv4yrI1XuWruoq/izovyfGuM3Ah+g9XAW5mvqYaBuuivtb/t8N
Xf0dV0GuJvr9m7ZdFffbY+yzN6DwL1wFuQr6rEClKb/PVTw1PR7a0NVnuApy
9Vlqrsr77E2PhzZ09QWuglz9JzVXg9cD/ckfd491u6EPEa6CXMV6rKNVPOYe
a58dV627Su75qrjPHuN4KK5MXCW1f+WPfxZPMY6HNnTF/lWYq6R+HiyvjYl5
24EPET8PhrlK6viVf41wcIqxhiGCK45fhblK6nh7cZ891vHQhq443h7mKpnX
B1XHQxu64vXBMFem6xmKKdYwRHDlH59NJ/vtlnr1nynRtivFGoYIrl7CVZAr
8/WigxRrGCK4egpXQa6SWN/u960UaxgiuNqPqyBXSfw+Tvm4VUKu7sBVkKtv
WbrynorHrIon/7VYaxkaULgRV0GudroutOmquB81zcng9wf943IproJc+T5q
05VVAQ/PR/njg6swV2/hqrI/4KqRq4nft32LuXoaV41c3YWryu7CVSNXvL9o
dVfjqpEr30lcDXWyYKp8Wwlst9S76Ir3bx+O92+P44rPmxiOz5uI4+paXA31
TVxFceX7AFf9+DyvuK6ewVU/Pn8wris+L3Wjm4cQlW8n8cGnUa8cn+/sP98Z
V7Fd8Xn0pSviKoqrib4XWhsRbpqbcCVx5Rv7O4XWRkSb5t2qK+IqmqufbFFX
+3EldXWF6+wWc/W563JcSV35Dm0xV4fqroirqK6uyTY+z2oruFrrzxdXbbjy
1f4utLWRyJtm5Ju34Sq6q+td52fc1fn+PHHVpivfKzPu6pVxV8SVxJVfi3tm
Rl2d6c8PVxaufAsz6mphkiviSubqEtexGXN1rD8vXFm68t3mWp8RV+v9+Ux4
RVxJXfkuHiu1NtJw09QeA8WViSv/HhhB73Mr76jraxVDvt21NnTZv/XngauU
XPn8+/acMx92Ve+6Lq8Y8g9cF/qXOdcf/5TbFFetuPLtywr7Wkn1Z9fOiiE/
0P/6vpBtiqvWXPmeNR96XW+5tlcO+zlcJe9qm+t18+HX9RvXtsqhP4KrpF35
/Hv9LZtPoa7nK4e97prHVdKuBraWzKdR3e/dvtYvK4Z9wbUHV0m78m13vWw+
leFe7o9rY7u8WDHsNdduXCXtyuf3t57IatbVtJi//59mw78D6H29UTHss65v
4yppV4NuzQI/0zBCp/r3X71tdrqWK4b8qWvT73bhKjlXvitdb7Y8lTf79zt6
+1zmeqdiyB+7rsNV8q4G3ek6Lp7C8f79TL6NrnAdrRjuP1xX4aoTrnw7XPMC
Xx/mt7sjYDtdlTsqD/do7g5X6bsa5Pfr51yvuk4HDvd0fv3bstJ7cwTkv+99
XDFU/33yMlx1xlUxf1ziFtdj2caxr7+6PnF9kQ/L/7niej//+mP55UOem0bl
99c/rRii37/fiavOuaqv/W3mjzOcrRiKPy6xHVczksU22zg+ulZh60VczUg2
rnz+dZ0LFbaew9UMZOfK51+PXi/bWsBV97N15Vsou1p3zeOq29m78j1XtnXB
tSeSK+vJNcncR7dd+TatgVhz7Y7nqotnex/dd1W5BuLsxp9j10DgKrHsPRUL
XgOBq8Syt1Tusnc2u/KNXAOBq8Syd1TV1GsgcJVY9obqmmoNBK4Sy97PqCZe
A4GrxLK3M66J1kDgKrHs3UzS2DUQuEosezOTNnINBK4Sy97LNNWtgXgWV4ll
b2XaKtdAZL369y7t4QpXk7VpDUQ24n0gerjC1eQ9W2Gr8n0gerjC1XRN9D4Q
PVzharr8MYbfVtgaeh+IHq5w1ev1yn815vJj10D0cIWr6V35Rr4PRA9XuApz
5Ru5BsJcSNjZ3geufLVrIMyFhJ3tfeBqUOUaiI6e7X3gqtimNRAdPdv7wFW5
oTUQHT3b+8BVVRfXQHT0bO8DV3X110CYCwk72/vA1ajmzYWEne194Kr+9jb+
Jc552bXkOlBxV3P511aj3Zu9D1zV315TVyuug1Pc5S7XkUb3iKut4GqpdJP+
uepw4ev++WmxdBlva6XRveJq1l0Vn6uWRlyubGvUZXHVesm52pXfwsExlztR
uutxl8dVqyXnatLzSumucZVUnXVVfr5abHyL9j5wVX97bbkq798fDr6l7rtK
rF6Fq/5fNLnNtlzNFcY8F+UWzbfHrNRZV8u92M9VGa7i1UlXfn998DNjnP2q
wdl8e8xKnXPlj4nuLYz1QNRbN98es1LnXBVfJ4xrKsNVvDrlSmsqw1W8OuOq
aKr58c+6s/n2mJWSd7VaMvW8zFSGq3gl7aq8j978deVxZ/PtMSsl66p9Uxmu
4pWkq7KpOMc8Jzmbb49ZKTlXZVNx1oFOejbfHrNScq7sTGW4ildSrorrRMeZ
GqxliLvfZb49ZqVkXBXXFC9PcPnBWoYTuEqxJFwdLtz3JM8/g+e1XVFNZbiK
l7mr1d7w2oRpin/c3Xx7zErmrp4PNKU5pmW+PWYlU1erDUzF37fKcBUv8+er
tM7m22NWwhWucIWrroQrXOEKV10JV7jCFa66Eq5whStcdSVc4QpXuOpKdSdc
Ea5wlVq4whWucNWVcIUrXOGqK+EKV7jCVVfCFa5whauuhCtc4QpXXWnAqBSu
CFfxzubbY1bCFa5whauuJHTVyay3x6ykcEWEK1KEK1KEK1KEK1KEK1KEK1KE
K1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KE
K1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KEK1KE
K1KEK1KEK1KEK1KEK1KEK1JUd7IeF3U7XJEiXJEiXJEiXJEiXJEiXJEiXJEi
XJEiXJEiXJEiXJGiAaMerztTxHBFinBFinBFinBFinBFinBFinBFinBFinBF
inBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBF
inBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBFinBF
inBFinBFinBFinBFinBFinBFinBFinBFiupO1uOibocrUoQrUoQrUoQrUoQr
UoQrUoQrUoQrUoQrUoQrUoQrUjRg1ON1Z4oYrkgRrkgRrkgRrkgRrkgRrkgR
rkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgR
rkgRrkgRrkgRrkgRrkgRrkgRrkgRrkgRrsLad+rrNKayK+vxpNSI/x/L/y8S
ERERUYP+B8gy1yw=
    "], {{0, 400}, {150, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQwY4Ns1BpCBDJd1QWZhyuMFXMkFRSVA+g8QG6WkFiczMDAaANnZ5SUF
QHHGOUC2SFI2mL0BxC4KCXIGso8A2XzpEPYVEDsJwn4CYhcBPQFkfwGpTwez
mTjA5kDYMiB2SWoFyF4G5/yCyqLM9IwSBUNLS0sFx5T8pFSF4MriktTcYgXP
vOT8ooL8osSS1BSgWoj7wEAQohAUYhpAjRaaJPqbIADFA4T1ORAcvoxiZxBi
CJBcWlQGZTIyGRPmI8yYI8HA4L+UgYHlD0LMpJeBYYEOAwP/VISYmiEDg4A+
A8O+OQCFT1yI
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "XMP" -> Association[
       "DublinCoreSchema" -> Association["Format" -> "image/png"], 
        "PhotoshopSchema" -> Association["ColorMode" -> 3], "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2020, 4, 8, 22, 49, 13.}, "Instant", "Gregorian", 3.], 
          "CreatorTool" -> "Adobe Photoshop CC (Windows)", "MetadataDate" -> 
          DateObject[{2020, 4, 8, 22, 49, 13.}, "Instant", "Gregorian", 3.], 
          "ModifyDate" -> 
          DateObject[{2020, 4, 8, 22, 49, 13.}, "Instant", "Gregorian", 3.]], 
        "MediaManagementSchema" -> 
        Association[
         "DocumentID" -> 
          "adobe:docid:photoshop:33b1d5a7-4b1b-ee4d-b988-9d7a1c6f8656", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:14cc6c4b-008b-8241-b373-aaf818a57e9e", "When" -> 
              DateObject[{2020, 4, 8, 22, 49, 13}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:160d410e-2d10-bc42-ba68-f5fabfba0036", "When" -> 
              DateObject[{2020, 4, 8, 22, 49, 13}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]], "InstanceID" -> 
          "xmp.iid:160d410e-2d10-bc42-ba68-f5fabfba0036", 
          "OriginalDocumentID" -> 
          "xmp.did:14cc6c4b-008b-8241-b373-aaf818a57e9e"], 
        "RightsManagementSchema" -> 
        Association[
         "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:14cc6c4b-008b-8241-b373-aaf818a57e9e", "When" -> 
              DateObject[{2020, 4, 8, 22, 49, 13}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:160d410e-2d10-bc42-ba68-f5fabfba0036", "When" -> 
              DateObject[{2020, 4, 8, 22, 49, 13}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]]], "PagedTextSchema" -> 
        Association[
         "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:14cc6c4b-008b-8241-b373-aaf818a57e9e", "When" -> 
              DateObject[{2020, 4, 8, 22, 49, 13}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:160d410e-2d10-bc42-ba68-f5fabfba0036", "When" -> 
              DateObject[{2020, 4, 8, 22, 49, 13}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{135.83333333331848`, Automatic},
  ImageSizeRaw->{150, 400},
  PlotRange->{{0, 150}, {0, 400}}]], "Input",
 CellChangeTimes->{{3.7995969689734793`*^9, 
  3.7995969697642145`*^9}},ExpressionUUID->"a85bf312-acf0-4d25-8bfd-\
16e3c9326c51"]
}, Closed]],

Cell[CellGroupData[{

Cell["3 \:0441\:043b\:0443\:0447\:0430\:0439:", "Subsubsection",
 CellChangeTimes->{{3.7995968808850565`*^9, 3.7995969197880106`*^9}, 
   3.7995969649494076`*^9, 
   3.799597001374504*^9},ExpressionUUID->"4555e9f8-1143-4dec-9ebf-\
e14079d9a6ff"],

Cell[TextData[{
 StyleBox["if",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "2"], ">", 
    SubscriptBox["x", "3"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "79eaee64-8318-4d31-84dc-7269a6489900"],
 " \[And]",
 StyleBox[" rnd ",
  FontSlant->"Italic"],
 "<",
 StyleBox[" ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["W", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "62125eba-0879-4fe3-8fb4-181024e6ce0e"],
 "\t\t",
 StyleBox["then: ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["lane",
      FontSlant->"Italic"], "2"], "=", " ", 
    RowBox[{
     SubscriptBox[
      StyleBox["lane",
       FontSlant->"Italic"], "2"], "-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2ebc0fda-fc4a-4961-881d-12a292de9900"]
}], "Text",
 CellChangeTimes->{{3.7996729120002365`*^9, 
  3.7996729192259398`*^9}},ExpressionUUID->"cec0586c-313f-4df0-8ab6-\
04d08d75f417"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3c+PH3Udx/EvthAORE0k0QMR5WTYLiSc5MBB2IuRg2JMmjQxFovEVDGh
AsE0EjDqoQd6Ms1KyoFq1kMTTXT/gV5QD5RKUow1jUmVhYNYWNM0xY6fz7fz
3c539jvfHzOf17w/n8/3OZMnpbvT2c9859H5zs53ut/PP/6Dx77zscFgcOR2
95/HDj73paefPvj81z/pfvONp45898mnnjj05ad++MSTTzz9xcf3uA8ev2Uw
+IX7de9gOBVEREREFK4Dlz49oOnxmDVXFAW1qJzqfx/Nx0VphytShCtShCtS
hCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtS
hCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtS
hCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtShCtS1DRZj4vS
DlekCFekCFekCFekCFekCFekCFekCFekCFekCFekCFekaMRowOvOFDBckSJc
kSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJc
kSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJc
kSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJckSJc
kaKmyXpclHa4IkW4IkW4IkW4IkW4IkW4IkW4IkW4IkW4IkW4IkW4IkUjRgNe
d6aA4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU
4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU
4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoU4YoUKVztWltC
We+PXBK6SnE23x+5hCtc4QpXqYQrXAld7ZpwRbjCVWzhCle4wlUq4QpXuMJV
KuEKV7jCVSrhCle4wlUq4QpXuMJVKo0Y1cIV4SrcbL4/cglXuMIVrlIJV7jC
Fa5SCVe4whWuUglXuMIVrlIpelebrg3X4V1jLAZr5ee2cRVbUbrach2d4Kip
FddZXMVUlK42auPxx6ozlc/749P6BFtbuIqlKF1Vj1UbU5ar25q27Hyz+f7I
pShdrZRrODpjuQu1cc9afvZsvj9yKUpX885buIq1pF3Vj1fruIqlpF3Vz+/P
tF7TaDbfH7mUtKu1ypjXgqzRfH/kUrKuNgehj1UFrsKVpCt/vj76njHMedVo
Nt8fuZScK39NdH9lrIeDrt18f+RScq6qrxOGNVXgKlxJudKaKnAVrmRcVU11
v/7ZNJvvj1yK3tV2zdQxmakCV+GK2lX9HL3768qzZvP9kUvRuurfVIGrcEXp
qm4qzDXPeWbz/ZFL0bmqmwpzH+i8s/n+yKXoXNmZKnAVrqhcVe8TnWVqdC9D
2PMu8/2RS9G4qt5TvDnH8qN7GS7gKsaicHWm8rXnOf6MjmsrQU0VuAqXuavt
wfi9CYsU/rq7+f7IJXNXx1qa0lzTMt8fuWTqaruDqfDnVgWuwmV+vIprNt8f
uYQrXOEKV6mEK1zhClcT6/TNj676hzqvD1e4wlV1tjeCq+b14QpXuKrO9kZw
1bw+XOEKV9XZ3khGroI7xRWucFWd7Y3gqrEBrnCFq+psbwRX07rXXEi72d4I
rpq61/WuuZB2s70RXE1qaMrvnkRneyO4qrdjClc9Z7/vVa1UTeGq5+z3v6Jd
pnDVc/YGQjfRlOs9cyHtZnsjuGo05brfXEi72d5IRq7qHwpgamAupN1sb2R5
XU01VdxcW4qzvZHldDXTFK4MisBQB1dzmcKVQREYaulqblPFrrWllbmR5XG1
UvqZZOq+YOOw3jcpF4GhBV31YwpXy+SqP1O4WhZX/ZrCVfauVm766c8UrrJ2
5U29t9uT3hSusnVlagpXWboyN4WrHF3tm2JqtbdxWO+blLM3tMtU0XyO3p8p
XOXkaqKp8tjVrylc5eKq0dTqjf/vf0zW+ybl7D3NNDXAVXolYApXCRahKf+x
1dqiuEqsCE25VnftYlyllY2p1Wmm/DK4Sry4TO0bLYerxIvQFK4yKEJTuMqg
CE3hKoMiNIWrDIrQFK4yKEJTuMqgCE3hKoPC74/7pphamXc9uEq8CE3hKoMi
NIWrDIrQFK4yKEJTuMqgCE3hqm27d0RyzTLVbd24it/VHteDrmdcv3b90fWO
68NyOP7XLdcb5eefKZffY2IKVzG7usX1sOtV179bDvP98s8/XK5vtM/vbzD1
bhBTuIrR1V7XQdfbgYf8lutbxZ2DB+SmcBWbq0cFnsb72+Cj4lGxKVzF4upO
1+leh3/a9SmRKVzF4Ooh1yWTTfjX4H/FrwbfDG4KV5au/Hn0c65rxptyrRzH
zfN6XKXqyn//v26+CeP9sph2XQJXsbu6zbVhPvzJbZTjw1Varvw++7350Kf3
hyC2cNWXK3/+csp82PN1quh6voWrvlz9xHzIi/XTrq6iKIIHUujqgOu6+ZAX
63o5blzF6Wqf64r5cNt1pRw/ruJydbvrTfOhdutcuR24isfVcfNhhuk4rqJx
9UiR3jlVU9fL7cGVratbXefNhxi28+V24crO1ZH64tYPb6BdcgRXZq4+47qc
qavL5fbNdNU02e+32Gt8TE9OWtzaSMC/6idx1bure4qG+16sjQR0da3cTlz1
5+pE0+LWRgK68q3jqjdXd7muLomrq+X2znJVX2cE+y32dj2WU6+BWhsJ7Koo
ZlwrxVUQVx8vbv4b0WVx9YHrDlxJXX1v1uLWRgSufIdwJXV1bkldvY4rmasH
5lnc2ojIlW8VVxJXLy+5q5dxJXH1jyV35bd/173wuOrkaq7nwMxdFeXjgKtw
rl7E1bCXcBXU1VlcDXsTV8FcfXaRxa2NiF357sZVEFeP42qsb+MqiKvXcDXW
a7gK4uoirsa6iKsgrhZa3NpID658O/co4wpXAV19FVe4Erj6Ma5wJXC1gStc
CVydwxWuBK78fe97cYWrwK58X8BVmq6OHj1arK+vF2fOnCkmTRsbG8Xhw4et
XH0FV+m4WllZGXpZZNrc3LRwdQhX6bjyx6jqdOHCheLYsWNjy/jfb21tjS3n
j2s9u3oBV+m4qh6rzp4927jc/v37x1xtb2/37eoErtJxNTqX8scj/5w4bVl/
LKtOPbv6La7ScbVI/nhm6OpPuMrTlX/uG03+2NWzq7/iKj9X/vpCdTI4b/8n
rvJzVT23mudcTODqP7jKx5X3Uz2v8s+F/nvDLuts+dD8F1d5uKpft/K+1tbW
Oq+3w8ODq0RdeUv+3Kl+ju6vn4b6GrhaDlf+uW7SFOI5D1ex1L+r+rX0+uSv
nYZ4/uvoivOrxFxNyj8XVr8HDHnsavnQ8P1gBq5G+XsXRlPX6wsdXXH9KiNX
3lH1HL7L9dCOrrjenpErX/X50J9rGbni9cHMXFWvi067l0bsivsZMnNVvTZq
eLzi/quMXNWvbRmeX72Aq3hdjY49/j7ReZb3jqqT4es43N8eqavqsWee86T6
94IhngM7EODf40Tqqn4P1bR/s+VN1a+Lhrrm3vKh2YerOF3Vn9P8VD9f8p7q
rzuHfp2wxcPyket2XMXpyt+rsOgU6t6Yjq7+7k3hKk5Xo2b9u2ZvyX9ecS9D
SwK/q7naNdnvt9jTu7KuxcPyIq5wJXD1NVzhSuCq/vNFcbW4q4u4GuviyBSu
Orni57ePN+nnt+NqcVe838R4k95vAleLu7obV2N9DldBXPnexNWwpvfzwlU7
Vy/haljT+w/iqp0r3i/1Rk3vl4qrdq58vL9z8/s746q9K96Pvmaq4qq+zgj2
W+ztPIZzPRdaGxG6WsWVxJXv3JK6en2SKVwFc/X9JXV1CFdSV59wfbhkrj5w
3YErqSvf8SVzdbzJFK6CurqruPF+Vsvg6mq5vbjSu/KdWBJX69NM4Sq4q3tc
1zJ3da3cTlz158p3MnNXJ2eZwpXElb8X93Kmri4XlXuNcdWrK9+RTF0dmccU
rmSubnWdz8zV+XK7cGXnyveI63omrq6X2zOXKVxJXfl2rpVaG+noauo1UFz1
7sr/DIyZr0lH3l/K7Zh3m4fhSurK539uzxXz4bbrSjn+RbZ3GK7krnwHisq5
VkIdWHA7d8JVL658PzMf8mL9vMU27oSr3lz5e8BPmQ97vk4VE+5ZXyRc9ebK
d5tr03zo09ssx9l2G4fhqldXg3KfbZgPf3K/KQKYKnDVoU6P+x7XK+abMN4r
5bi6btswXJm48vnzl+eLhvtqesx//R8VHc+n6uHKzNWoh1yXjDbjUvn1Q27P
MFyZu/Ld6Trd8yacLr9u6G0ZhqsoXI161PW2eOhvl19HtQ3DcBWVK99e18Ei
vK+3yvXuFY59J1xF52qUP49ec73qer/lMN8v//wjReDz8lnhKlpX1fz3/w+6
ni1uXPv6s+ud4sZ7vxflr1uuN8rPP1su38uxaVK4SsJVcuGKFOGKFOGKFOGK
FOGKFOGqXf8HSZP/qA==
    "], {{0, 400}, {150, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UNAApJaBycDRxcmVCagqN6+kKMjdSSEiMkqB/TwDGwMzAxgkJhcXOAYE+IDY
efl5qQwY4Ns1BpCBDJd1QWZhyuMFXMkFRSVA+g8QG6WkFiczMDAaANnZ5SUF
QHHGOUC2SFI2mL0BxC4KCXIGso8A2XzpEPYVEDsJwn4CYhcBPQFkfwGpTwez
mTjA5kDYMiB2SWoFyF4G5/yCyqLM9IwSBUNLS0sFx5T8pFSF4MriktTcYgXP
vOT8ooL8osSS1BSgWoj7wEAQohAUYhpAjRaaJPqbIADFA4T1ORAcvoxiZxBi
CJBcWlQGZTIyGRPmI8yYI8HA4L+UgYHlD0LMpJeBYYEOAwP/VISYmiEDg4A+
A8O+OQCFT1yI
      "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
    Association[
     "XMP" -> Association[
       "DublinCoreSchema" -> Association["Format" -> "image/png"], 
        "PhotoshopSchema" -> Association["ColorMode" -> 3], "BasicSchema" -> 
        Association[
         "CreateDate" -> 
          DateObject[{2020, 4, 8, 22, 50, 24.}, "Instant", "Gregorian", 3.], 
          "CreatorTool" -> "Adobe Photoshop CC (Windows)", "MetadataDate" -> 
          DateObject[{2020, 4, 8, 22, 50, 24.}, "Instant", "Gregorian", 3.], 
          "ModifyDate" -> 
          DateObject[{2020, 4, 8, 22, 50, 24.}, "Instant", "Gregorian", 3.]], 
        "MediaManagementSchema" -> 
        Association[
         "DocumentID" -> 
          "adobe:docid:photoshop:8349343e-0f31-8046-8891-250672640eab", 
          "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:22903853-54e3-944a-8005-c5c9833f462a", "When" -> 
              DateObject[{2020, 4, 8, 22, 50, 24}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:fa0f2ede-8c8b-174f-814d-533f96fab5ec", "When" -> 
              DateObject[{2020, 4, 8, 22, 50, 24}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]], "InstanceID" -> 
          "xmp.iid:fa0f2ede-8c8b-174f-814d-533f96fab5ec", 
          "OriginalDocumentID" -> 
          "xmp.did:22903853-54e3-944a-8005-c5c9833f462a"], 
        "RightsManagementSchema" -> 
        Association[
         "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:22903853-54e3-944a-8005-c5c9833f462a", "When" -> 
              DateObject[{2020, 4, 8, 22, 50, 24}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:fa0f2ede-8c8b-174f-814d-533f96fab5ec", "When" -> 
              DateObject[{2020, 4, 8, 22, 50, 24}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]]], "PagedTextSchema" -> 
        Association[
         "History" -> 
          Association[
           "History[1]" -> 
            Association[
             "Action" -> "created", "InstanceID" -> 
              "xmp.iid:22903853-54e3-944a-8005-c5c9833f462a", "When" -> 
              DateObject[{2020, 4, 8, 22, 50, 24}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)"], 
            "History[2]" -> 
            Association[
             "Action" -> "saved", "InstanceID" -> 
              "xmp.iid:fa0f2ede-8c8b-174f-814d-533f96fab5ec", "When" -> 
              DateObject[{2020, 4, 8, 22, 50, 24}, "Instant", "Gregorian", 
                3.], "SoftwareAgent" -> "Adobe Photoshop CC (Windows)", 
              "Changed" -> "/"]]]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{136.66666666665884`, Automatic},
  ImageSizeRaw->{150, 400},
  PlotRange->{{0, 150}, {0, 400}}]], "Input",
 CellChangeTimes->{{3.7995969689734793`*^9, 3.7995969697642145`*^9}, 
   3.799597006994445*^9},ExpressionUUID->"541ad5b7-f690-417c-a928-\
218f10e1caaa"]
}, Closed]],

Cell[CellGroupData[{

Cell["\:041f\:0440\:0438\:043c\:0435\:0440 \:0440\:0430\:0431\:043e\:0442\
\:044b \:0444\:0443\:043d\:043a\:0446\:0438\:0438:", "Subsubsection",
 CellChangeTimes->{{3.7995968808850565`*^9, 3.7995969197880106`*^9}, 
   3.7995969649494076`*^9, {3.799597001374504*^9, 3.7995970355243816`*^9}, {
   3.7996729479560795`*^9, 
   3.7996729531926484`*^9}},ExpressionUUID->"f8115de7-348f-4ea7-9a56-\
a77479315004"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showExample", "[", "\[IndentingNewLine]", 
  RowBox[{"carsDataSample", ",", "\[IndentingNewLine]", 
   RowBox[{"changeLaneToLeft", "[", 
    RowBox[{"3", ",", "0.1"}], "]"}]}], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      StyleBox["i",
       FontSlant->"Italic"], " ", "\[Rule]", " ", "3"}], ",", " ", 
     RowBox[{
      StyleBox["rnd",
       FontSlant->"Italic"], " ", "\[Rule]", " ", "0.1"}]}], " ", "*)"}],
   FontSize:>Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7995945839082007`*^9, 3.7995945885175486`*^9}, {
  3.799596666965066*^9, 3.799596670316971*^9}, {3.799596831709121*^9, 
  3.7995968455636735`*^9}, {3.7995971146591063`*^9, 3.7995971152393894`*^9}, {
  3.7996722440303073`*^9, 3.7996722538108606`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5c72cefd-ee81-4097-a036-7ae5d754afa4"],

Cell[BoxData[
 TemplateBox[{
  TemplateBox[{20}, "Spacer1"],StyleBox[
   "\"\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\:043d\
\:044b\:0435: \"", FontFamily -> "Baskerville", StripOnInput -> False],
   TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[18]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1674057352], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[1674057352]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825112347][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825112347][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825112347][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825112347][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   825112347][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825112347]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[825112347][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[825112347][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )],StyleBox[
   "\"\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\:0440\
\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f: \"",
     FontFamily -> "Baskerville", StripOnInput -> False],TemplateBox[{
     TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
          TypeSystem`PackageScope`HeaderShape[
            Association[{All, 
               TypeSystem`PackageScope`KeyDummy[19]} -> 1, {All, "Velocity"} -> 
             1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
             1, {All, "W"} -> 1, {All, "Color"} -> 1], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`RowShape[
                Association[
                "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                 TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                 TypeSystem`PackageScope`UnknownShape, "W" -> 
                 TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                 TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[902484483], 
          "Type" -> TypeSystem`Assoc[
            TypeSystem`Atom[Integer], 
            
            TypeSystem`Struct[{
             "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
          True, "RowTarget" -> 20, "Data" -> 
          TypeSystem`PackageScope`CacheHandle[902484483]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, Keys}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, "Velocity"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, "Lane"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, "Lane"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, "Time"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, "Time"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, "Position"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, "W"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                  GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1740310086][{All, "Color"}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                  Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086][{
                    Key[0]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1740310086][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Item[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086][{
                    Key[0], 
                    Key["Position"]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086][{
                    Key[1]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1740310086][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086][{
                    Key[2]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1740310086][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.09801677786861474`", ",", 
                    "0.8187457131905267`", ",", "0.6319659087405958`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Item[
                  Pane[
                   Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086][{
                    Key[3]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1740310086][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                   Background -> GrayLevel[0.95], 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes["0.2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1740310086][
                    GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1740310086]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1740310086][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1740310086][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {385., {67., 76.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]}, 
    "CopyTag", DisplayFunction -> (#& ), 
    InterpretationFunction -> ("Dataset[<>]"& )]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{
  3.7995945891424875`*^9, 3.799596375426591*^9, {3.7995968373265295`*^9, 
   3.7995968461449213`*^9}, 3.799672240302837*^9, 3.7996729304064035`*^9, 
   3.80007898879963*^9, 3.8001151666971607`*^9},
 Magnification->1.,
 CellLabel->"Out[26]=",ExpressionUUID->"8db9fad2-b55b-4902-bfd2-a017ccab80ec"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["5", "Subsection",
 CellChangeTimes->{3.800032562693228*^9, 3.8000343300751657`*^9},
 TextAlignment->Right,ExpressionUUID->"4d6bd209-d072-4188-a723-dd650d54f6e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8c19f260-0780-4b38-8d49-0f61ac0af1c6"],

Cell[CellGroupData[{

Cell["\:0418\:0442\:0435\:0440\:0430\:0446\:0438\:0438 \:0438 \:0432\:0438\
\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:044f \:043c\:043e\
\:0434\:0435\:043b\:0438", "Section",
 CellChangeTimes->{{3.799672992084897*^9, 3.799673020555238*^9}, {
  3.799674331971364*^9, 
  3.7996743343545456`*^9}},ExpressionUUID->"bfbd91e5-2557-47d3-91de-\
00fb853ce052"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:0418\:0442\:0435\:0440\:0430\:0446\:0438\:0438"
}], "Subsection",
 CellChangeTimes->{{3.7996730323306484`*^9, 
  3.7996730432360306`*^9}},ExpressionUUID->"7aef017c-4a70-4b82-87fb-\
109cc65f3bbc"],

Cell["\<\
\:041a\:043e\:043c\:043f\:043e\:0437\:0438\:0446\:0438\:044f \:0432\:0441\
\:0435\:0445 \:0444\:0443\:043d\:043a\:0446\:0438\:0439-\:043f\:0440\:0430\
\:0432\:0438\:043b, \:043a\:043e\:0442\:043e\:0440\:044b\:0435 \:0431\:044b\
\:043b\:0438 \:043f\:0440\:043e\:0434\:0435\:043c\:043e\:043d\:0441\:0442\
\:0440\:0438\:0440\:043e\:0432\:0430\:043d\:044b \:0432\:044b\:0448\:0435\
\>", "Text",
 CellChangeTimes->{{3.799674023628786*^9, 
  3.7996740909671555`*^9}},ExpressionUUID->"8e20791d-652a-4c04-824f-\
e6a5801dc16d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"modelInterations", "[", 
    RowBox[{"carsDataSample", ",", "5", ",", "3", ",", 
     RowBox[{"1", "/", "3"}], ",", "3", ",", "0.8"}], "]"}], ";"}], " ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      StyleBox["cars",
       FontSlant->"Italic"], " ", "\[Rule]", " ", "carsWithObstacle"}], ",", 
     " ", 
     RowBox[{
      StyleBox[
       SubscriptBox["v", "max"],
       FontSlant->"Italic"], " ", "\[Rule]", " ", "5"}], ",", " ", 
     RowBox[{
      StyleBox["iterationCount",
       FontSlant->"Italic"], " ", "\[Rule]", " ", 
      StyleBox[
       StyleBox[
        StyleBox["3",
         FontSize:>Dynamic[
          0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
        FontSize:>Dynamic[
         0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
       FontSize:>Dynamic[
        0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}], ",", " ", 
     RowBox[{
      StyleBox[
       SubscriptBox["p", "brake"],
       FontSlant->"Italic"], " ", "\[Rule]", " ", 
      FractionBox["1", "3"]}], ",", " ", 
     RowBox[{
      StyleBox["c",
       FontSlant->"Italic"], " ", "\[Rule]", " ", "3"}], ",", " ", 
     RowBox[{
      StyleBox[
       SubscriptBox["W", "max"],
       FontSlant->"Italic"], " ", "\[Rule]", " ", "0.8"}]}], " ", "*)"}],
   FontSize:>Dynamic[
    0.01 FrontEnd`AbsoluteCurrentValue[{
       WindowSize, 1}]]]}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{"Dataset", "/@", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.799673208262271*^9, 3.799673217450358*^9}, {
  3.7996734262169476`*^9, 3.7996735818991785`*^9}, {3.799673642756054*^9, 
  3.799673668580295*^9}, {3.799673869549659*^9, 3.7996739298364625`*^9}, {
  3.7996739658718243`*^9, 3.7996739688654065`*^9}, {3.79967411394149*^9, 
  3.7996741527747765`*^9}, {3.799674194053649*^9, 3.799674197706807*^9}, {
  3.7996742619602857`*^9, 3.7996742691060905`*^9}, {3.800081407244941*^9, 
  3.8000814090186496`*^9}},ExpressionUUID->"b6102497-77d1-48b4-9f26-\
6c3d691d9240"],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  TemplateBox[{TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Data`UnorderedAssociation[
        "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, 
              TypeSystem`PackageScope`KeyDummy[20]} -> 1, {All, "Velocity"} -> 
            1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
            1, {All, "W"} -> 1, {All, "Color"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[34], 
              TypeSystem`PackageScope`RowShape[
               Association[
               "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                TypeSystem`PackageScope`UnknownShape, "W" -> 
                TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[1784068615], 
         "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
         True, "RowTarget" -> 20, "Data" -> 
         TypeSystem`PackageScope`CacheHandle[1784068615]], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, Keys}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, "Velocity"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, "Lane"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, "Lane"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, "Time"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, "Time"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, "Position"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, "W"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    All, "Color"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    Key[0]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   497131245][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    Key[0], 
                    Key["Position"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    Key[1]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   497131245][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["17"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    Key[2]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   497131245][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["11"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][{
                    Key[3]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   497131245][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["9"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                  MenuItem["Copy position to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Copy data to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], Delimiter, 
                  MenuItem["Paste position in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Paste data in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
              Dividers -> All, FrameStyle -> GrayLevel[0.85], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
          TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
               If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                 TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`alignBar[
         TypeSystem`NestedGrid`PackagePrivate`$state$$][
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 497131245]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
         Dynamic[
          Replace[
           MouseAnnotation[Null], {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][Null] -> 
            "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[497131245][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
               Blank[]]] :> (
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 14}]}, 
      DynamicBox[
       ToBoxes[
        Column[
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
         If[
          TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           0, {{}, {0, 0.05, 0}}]], StandardForm], 
       ImageSizeCache -> {385., {67., 76.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
      TypeSystem`NestedGrid`PackagePrivate`deleteState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$], 
      DynamicModuleValues :> {}, Initialization :> 
      Block[{$ContextPath = $ContextPath}, 
        Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )]}, {2,"2"->
  TemplateBox[{TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Data`UnorderedAssociation[
        "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, 
              TypeSystem`PackageScope`KeyDummy[21]} -> 1, {All, "Velocity"} -> 
            1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
            1, {All, "W"} -> 1, {All, "Color"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[34], 
              TypeSystem`PackageScope`RowShape[
               Association[
               "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                TypeSystem`PackageScope`UnknownShape, "W" -> 
                TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[970310138], 
         "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
         True, "RowTarget" -> 20, "Data" -> 
         TypeSystem`PackageScope`CacheHandle[970310138]], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, Keys}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, "Velocity"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, "Lane"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, "Lane"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, "Time"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, "Time"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, "Position"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, "W"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1115433170][{All, "Color"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170][{
                    Key[0]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1115433170][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170][{
                    Key[0], 
                    Key["Position"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170][{
                    Key[1]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1115433170][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["22"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170][{
                    Key[2]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1115433170][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["11"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170][{
                    Key[3]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1115433170][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["9"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.2"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  1115433170][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                  MenuItem["Copy position to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Copy data to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], Delimiter, 
                  MenuItem["Paste position in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Paste data in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
              Dividers -> All, FrameStyle -> GrayLevel[0.85], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
          TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
               If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                 TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`alignBar[
         TypeSystem`NestedGrid`PackagePrivate`$state$$][
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1115433170]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
         Dynamic[
          Replace[
           MouseAnnotation[Null], {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1115433170][
             Null] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1115433170][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
               Blank[]]] :> (
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 14}]}, 
      DynamicBox[
       ToBoxes[
        Column[
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           0, {{}, {0, 0.05, 0}}]], StandardForm], 
       ImageSizeCache -> {385., {67., 76.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
      TypeSystem`NestedGrid`PackagePrivate`deleteState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$], 
      DynamicModuleValues :> {}, Initialization :> 
      Block[{$ContextPath = $ContextPath}, 
        Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )]}, {3,"3"->
  TemplateBox[{TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Data`UnorderedAssociation[
        "RowCount" -> 4, "Length" -> 4, "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, 
              TypeSystem`PackageScope`KeyDummy[22]} -> 1, {All, "Velocity"} -> 
            1, {All, "Lane"} -> 1, {All, "Time"} -> 1, {All, "Position"} -> 
            1, {All, "W"} -> 1, {All, "Color"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`KeyValueShape[
              TypeSystem`PackageScope`AtomShape[34], 
              TypeSystem`PackageScope`RowShape[
               Association[
               "Velocity" -> TypeSystem`PackageScope`AtomShape[34], "Lane" -> 
                TypeSystem`PackageScope`AtomShape[34], "Time" -> 
                TypeSystem`PackageScope`AtomShape[34], "Position" -> 
                TypeSystem`PackageScope`UnknownShape, "W" -> 
                TypeSystem`PackageScope`AtomShape[60], "Color" -> 
                TypeSystem`PackageScope`UnknownShape]]]], 4, {}]], 
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[2139745907], 
         "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "Velocity", "Lane", "Time", "Position", "W", "Color"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], TypeSystem`AnyType}], 4], "HandleQ" -> 
         True, "RowTarget" -> 20, "Data" -> 
         TypeSystem`PackageScope`CacheHandle[2139745907]], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, Keys}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Velocity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Velocity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, "Velocity"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, "Velocity"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Lane\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Lane\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, "Lane"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, "Lane"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Time\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Time\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, "Time"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, "Time"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, "Position"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"W\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"W\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, "W"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, "W"]], "Mouse"], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    All, "Color"}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[All, "Color"]], "Mouse"], 
                 Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    Key[0]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   850746229][
                    GeneralUtilities`Slice[
                    Key[0]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Item[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    Style[{15, 30}, ShowStringCharacters -> False], 
                    Style[
                    Style[{15, 30}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    Key[0], 
                    Key["Position"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Position"]]], "Mouse"]], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[0], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    Key[1]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   850746229][
                    GeneralUtilities`Slice[
                    Key[1]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["1"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["27"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5937972619841999, 0.33676248098649547`, 
                    0.4282774081964188], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                    "0.6424161122946281`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8906958929762998, 0.5051437214797432, 
                    0.6424161122946281], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[1], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    Key[2]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   850746229][
                    GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["5"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["2"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["16"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0653445185790765, 0.5458304754603511, 
                    0.42131060582706387`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                    "0.6319659087405958`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09801677786861474, 0.8187457131905267, 
                    0.6319659087405958], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[2], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][{
                    Key[3]}]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   850746229][
                    GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                  Background -> GrayLevel[0.95], 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["4"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Velocity"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Lane"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["3"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Time"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["13"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{34, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes["0.8"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["W"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}], 
                Pane[
                 Annotation[
                  RawBoxes[
                   StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.013183800517226452`, 0.48133904845982245`, 
                    0.5680801365586785], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                    "0.8521202048380176`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.019775700775839677`, 0.7220085726897336, 
                    0.8521202048380176], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                    ShowStringCharacters -> True]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
                   GeneralUtilities`Slice[
                    Key[3], 
                    Key["Color"]]], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                  MenuItem["Copy position to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Copy data to clipboard", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                   MenuEvaluator -> Automatic], Delimiter, 
                  MenuItem["Paste position in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic], 
                  MenuItem["Paste data in new cell", 
                   KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                   MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
              Dividers -> All, FrameStyle -> GrayLevel[0.85], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
          TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
               If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                 TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`alignBar[
         TypeSystem`NestedGrid`PackagePrivate`$state$$][
          TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
           TypeSystem`PackageScope`Pathbar[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`updateState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850746229]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
         Dynamic[
          Replace[
           MouseAnnotation[Null], {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][Null] -> 
            "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850746229][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
               Blank[]]] :> (
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 14}]}, 
      DynamicBox[
       ToBoxes[
        Column[
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
            TypeSystem`NestedGrid`PackagePrivate`alignBar[
            TypeSystem`NestedGrid`PackagePrivate`$state$$][
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
         If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
           0, {{}, {0, 0.05, 0}}]], StandardForm], 
       ImageSizeCache -> {385., {67., 76.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
      TypeSystem`NestedGrid`PackagePrivate`deleteState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$], 
      DynamicModuleValues :> {}, Initialization :> 
      Block[{$ContextPath = $ContextPath}, 
        Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )]}}, 3]], "Output",
 CellChangeTimes->{
  3.7996736714931803`*^9, 3.7996738542598095`*^9, 3.7996738932251153`*^9, 
   3.7996739311979446`*^9, 3.7996739699720573`*^9, {3.799674128643818*^9, 
   3.799674153843756*^9}, {3.7996741982457643`*^9, 3.7996742322190037`*^9}, 
   3.799674269681488*^9, 3.8000791158616424`*^9},
 Magnification->1.,
 CellLabel->"Out[20]=",ExpressionUUID->"3017c9b2-c185-4f7c-a603-d5a42c22d67b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:0412\:0438\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:044f \
\:043c\:043e\:0434\:0435\:043b\:0438"
}], "Subsection",
 CellChangeTimes->{{3.7996743164994984`*^9, 
  3.7996743292740493`*^9}},ExpressionUUID->"4e009a08-5d90-4ba9-b8e0-\
2e89f30b2e2a"],

Cell[CellGroupData[{

Cell[BoxData["roadPicture"], "Input",
 CellChangeTimes->{{3.7996743868109255`*^9, 3.7996743914152946`*^9}, {
  3.799674483561827*^9, 3.7996745156260567`*^9}, {3.7996745941367273`*^9, 
  3.799674614932409*^9}, {3.7996852564684887`*^9, 3.7996852573639135`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6d0c421e-98f7-43da-9314-6ffcecf6aa3c"],

Cell[BoxData[
 DynamicModuleBox[{TwoLaneModelPackage`Private`cars$$ = Association[
  1 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 1, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 2, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 3, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
  TwoLaneModelPackage`Private`iterCars$$ = {
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 5, "W" -> 0.404,
       "Color" -> RGBColor[
       0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 2, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 1, "Time" -> 3, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 10, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 1, "Time" -> 2, "Position" -> 2, "W" -> 0.404,
       "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 1, "Time" -> 3, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 14, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 2, "Position" -> 4, "W" -> 0.404,
       "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 3, "Position" -> 4, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 19, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 2, "Position" -> 6, "W" -> 0.404,
       "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 3, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 1, "Time" -> 4, "Position" -> 5, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 24, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 2, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 3, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 4, "Position" -> 6, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 1, "Time" -> 5, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> 
      RGBColor[0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 
    7 -> Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 28, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 2, "Position" -> 11, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 1, "Time" -> 3, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 4, "Position" -> 7, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 1, "Time" -> 5, "Position" -> 5, "W" -> 0.404,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 33, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 15, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 4, "Position" -> 7, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 5, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 2, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 38, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 19, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 12, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 4, "Position" -> 7, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 5, "Position" -> 10, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 
    6 -> Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 4, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 7, "Position" -> 2, "W" -> 0.404,
       "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404,
       "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 42, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 23, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 16, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 4, "Position" -> 7, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 5, "Position" -> 13, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 5, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 7, "Position" -> 2, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 2, "W" -> 0.404,
       "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 9, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 46, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 27, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 21, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 4, "Position" -> 8, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 17, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 6, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 7, "Position" -> 2, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 4, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 9, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 51, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 31, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 26, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 4, "Position" -> 9, "W" -> 0.404,
       "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 5, "Position" -> 22, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 7, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 3, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 9, "Position" -> 5, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 9, "Position" -> 1, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 55, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 36, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 30, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 4, "Position" -> 11, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.18980688188073547`, 0.16736857935328886`, 
        0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 5, "Position" -> 27, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 8, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 4, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 7, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 9, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 10, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 1, "Time" -> 12, "Position" -> 5, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 60, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 40, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 35, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 4, "Position" -> 13, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.18980688188073547`, 0.16736857935328886`, 
        0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 31, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 10, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 5, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 9, "Position" -> 8, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 4, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 10, "Position" -> 2, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 12, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 1, "Time" -> 12, "Position" -> 5, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 4, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 65, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 44, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 40, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 4, "Position" -> 16, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 5, "Position" -> 36, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 13, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 7, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 10, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 6, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 10, "Position" -> 3, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 12, "Position" -> 1, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 1, "Time" -> 12, "Position" -> 5, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 13, "Position" -> 4, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 69, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 48, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 45, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 20, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 40, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 16, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 9, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 13, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 8, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 10, "Position" -> 3, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 12, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 1, "Time" -> 12, "Position" -> 5, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 13, "Position" -> 4, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 15, "Position" -> 2, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 74, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 53, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 49, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 24, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 44, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 19, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 12, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 16, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 11, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 10, "Position" -> 3, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 12, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 9, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]],
     13 -> Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 13, "Position" -> 4, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.05070894925747238, 0.18098283985052266`, 
        0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 79, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 57, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 54, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 28, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 48, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 22, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 15, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 19, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 13, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 10, "Position" -> 3, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 12, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 11, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 13, "Position" -> 5, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 84, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 62, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 58, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 32, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 52, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 26, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 17, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 22, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 15, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 10, "Position" -> 4, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 12, "Position" -> 2, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 13, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 13, "Position" -> 7, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 2, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 89, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 67, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 62, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 37, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 56, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 30, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 7, "Position" -> 19, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 25, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 17, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 10, "Position" -> 6, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 12, "Position" -> 3, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 16, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 13, "Position" -> 10, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 2, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 1, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 94, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 71, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 66, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 42, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 60, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 34, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 7, "Position" -> 22, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 29, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 19, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 9, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 5, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 18, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 14, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 3, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 2, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 99, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 75, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 70, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 47, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 64, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 38, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 26, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 33, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 9, "Position" -> 22, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 12, "W" -> 0.1,
       "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 8, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 21, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 18, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 4, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 3, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 103, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 80, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 3, "Position" -> 74, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 52, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 68, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 42, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 31, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 38, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 26, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 15, "W" -> 0.1,
       "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 11, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 24, "W" -> 0.1,
       "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 13, "Position" -> 23, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 5, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 3, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 108, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 84, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 79, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 56, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 72, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 47, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 35, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 42, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 30, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 18, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.11831011691875815`, 0.05715966693362029, 
        0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 15, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 27, "W" -> 0.1,
       "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 13, "Position" -> 26, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 15, "Position" -> 7, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> A\
ssociation[
     "Velocity" -> 0, "Lane" -> 0, "Time" -> 15, "Position" -> 3, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 112, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 89, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 84, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 60, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 76, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 52, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 40, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 46, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 35, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 21, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 12, "Position" -> 20, "W" -> 0., 
      "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 31, "W" -> 0.1,
       "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 30, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 10, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 1, "Lane" -> 0, "Time" -> 15, "Position" -> 4, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.2823173540276609, 0.13643034837165446`, 
        0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 117, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 94, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 89, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 65, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 80, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 56, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 45, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 51, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 40, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 24, "W" -> 0.1,
       "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 22, "W" -> 0.1,
       "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 35, "W" -> 0.1,
       "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 34, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 13, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 15, "Position" -> 6, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 121, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 2, "Position" -> 98, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 94, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 69, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 5, "Position" -> 85, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 61, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 49, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 55, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 45, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 10, "Position" -> 27, "W" -> 0.1,
       "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 24, "W" -> 0.1,
       "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 39, "W" -> 0.1,
       "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 13, "Position" -> 37, "W" -> 0.1,
       "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 16, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 2, "Lane" -> 0, "Time" -> 15, "Position" -> 8, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 126, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 103, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 99, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 73, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 89, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 65, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 53, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 60, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 49, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 10, "Position" -> 31, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 27, "W" -> 0.1,
       "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 43, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 41, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 19, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 11, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 131, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 108, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 104, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 78, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 5, "Position" -> 94, "W" -> 0., 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 70, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 57, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 64, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 53, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 10, "Position" -> 35, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 30, "W" -> 0.1,
       "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 47, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 45, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 15, "Position" -> 23, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 15, "Position" -> 15, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 1, "Position" -> 135, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 113, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 109, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 4, "Position" -> 83, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 98, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 75, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 61, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 68, "W" -> 0.1, 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 57, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 40, "W" -> 0., 
      "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 33, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 
    12 -> Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 12, "Position" -> 51, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 13, "Position" -> 50, "W" -> 0., 
      "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 15, "Position" -> 27, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 15, "Position" -> 19, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]], 
   Association[
   0 -> Association[
     "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
      0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 140, "W" -> 
      0.404, "Color" -> 
      RGBColor[0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 2, "Position" -> 118, "W" -> 0., 
      "Color" -> RGBColor[
       0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 3, "Position" -> 114, "W" -> 0., 
      "Color" -> RGBColor[
       0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 87, "W" -> 0., 
      "Color" -> RGBColor[
       0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 102, "W" -> 0.1,
       "Color" -> RGBColor[
       0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 79, "W" -> 0., 
      "Color" -> RGBColor[
       0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 7, "Position" -> 65, "W" -> 0., 
      "Color" -> RGBColor[
       0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 72, "W" -> 0., 
      "Color" -> RGBColor[
       0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 9, "Position" -> 62, "W" -> 0., 
      "Color" -> RGBColor[
       0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 10, "Position" -> 44, "W" -> 0.1,
       "Color" -> RGBColor[
       0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
    Association[
     "Velocity" -> 3, "Lane" -> 0, "Time" -> 12, "Position" -> 36, "W" -> 0.1,
       "Color" -> RGBColor[
       0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 12, "Position" -> 56, "W" -> 0., 
      "Color" -> RGBColor[
       0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 54, "W" -> 0.1,
       "Color" -> RGBColor[
       0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
    Association[
     "Velocity" -> 4, "Lane" -> 0, "Time" -> 15, "Position" -> 31, "W" -> 0., 
      "Color" -> RGBColor[
       0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
    Association[
     "Velocity" -> 5, "Lane" -> 0, "Time" -> 15, "Position" -> 24, "W" -> 0., 
      "Color" -> RGBColor[
       0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]]}, 
  TwoLaneModelPackage`Private`obstacleCars$$ = Association[
  0 -> Association[
    "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {10, 25}, "W" -> 
     0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 1, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.9977655211519969, 0.662851485297308, 0.7683632880163189]], 2 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 2, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.9897627095640915, 0.15777960549719716`, 0.6811059613434947]], 3 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 3, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.40933987965445895`, 0.8491046092560974, 0.0919195686562968]], 4 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.18980688188073547`, 0.16736857935328886`, 0.2922952486133732]], 5 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.2578041895745602, 0.4304571091809115, 0.5322623958028923]], 6 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.6786291840807999, 0.3255252020389754, 0.6002758309659537]], 7 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.4947241847064947, 0.4826789616351881, 0.30047595668562366`]], 8 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.31166026472543895`, 0.03293602070950552, 0.8839486740265878]], 9 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 0.404, 
     "Color" -> RGBColor[
      0.20652731238384336`, 0.1465855988267617, 0.37543763115376105`]], 10 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 10, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.11831011691875815`, 0.05715966693362029, 0.6507193162172187]], 11 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.9107640731198172, 0.5256165952269329, 0.6033373720407469]], 12 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 12, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.7891015539216657, 0.7603223218580009, 0.29572881123564465`]], 13 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 13, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.05070894925747238, 0.18098283985052266`, 0.20204219853065508`]], 14 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.670632299036604, 0.736158343486575, 0.7834605629046316]], 15 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 15, "Position" -> 0, "W" -> 0.404,
      "Color" -> RGBColor[
      0.2823173540276609, 0.13643034837165446`, 0.5529640155534472]]]}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{TwoLaneModelPackage`Private`carsCount$$ = 15, 
     TwoLaneModelPackage`Private`coefficentOneTime$$ = 0.61, 
     TwoLaneModelPackage`Private`coefficentW$$ = 3, 
     TwoLaneModelPackage`Private`color$$ = RGBColor[1., 0., 0.], 
     TwoLaneModelPackage`Private`iterationCount$$ = 1, 
     TwoLaneModelPackage`Private`iterationLimit$$ = 30, 
     TwoLaneModelPackage`Private`maxVelocity$$ = 5, 
     TwoLaneModelPackage`Private`mesh$$ = False, 
     TwoLaneModelPackage`Private`obstacleFinish$$ = 25, 
     TwoLaneModelPackage`Private`obstacleStart$$ = 10, 
     TwoLaneModelPackage`Private`pBreak$$ = 0.55, 
     TwoLaneModelPackage`Private`scale$$ = 29, 
     TwoLaneModelPackage`Private`W$$ = 0.404, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style[
        "\:041f\:0430\:043d\:0435\:043b\:044c \:0443\:043f\:0440\:0430\:0432\
\:043b\:0435\:043d\:0438\:044f:", Bold, FontSize -> 24]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[TwoLaneModelPackage`Private`iterationCount$$], 1, 
        "\:0418\:0442\:0435\:0440\:0430\:0446\:0438\:044f"}, 1, 
       Dynamic[TwoLaneModelPackage`Private`iterationLimit$$], 1}, {{
        Hold[TwoLaneModelPackage`Private`carsCount$$], 30, 
        "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, 
       30}, {{
        Hold[TwoLaneModelPackage`Private`mesh$$], False, 
        "\:0421\:0435\:0442\:043a\:0430"}, {True, False}}, {{
        Hold[TwoLaneModelPackage`Private`iterationLimit$$], 40, 
        "\:041a\:043e\:043b-\:0432\:043e \:0438\:0442\:0435\:0440\:0430\:0446\
\:0438\:0439"}, 40}, {{
        Hold[TwoLaneModelPackage`Private`scale$$], 
        TwoLaneModelPackage`Private`obstacleFinish$$, 
        "\:041c\:0430\:0441\:0448\:0442\:0430\:0431"}, 5, 
       Dynamic[2 TwoLaneModelPackage`Private`obstacleFinish$$], 1}, {{
        Hold[TwoLaneModelPackage`Private`maxVelocity$$], 5, 
        "\:041c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:0430\
\:044f \:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c"}, 5}, {{
        Hold[TwoLaneModelPackage`Private`color$$], 
        RGBColor[1, 0, 0], 
        "\:0426\:0432\:0435\:0442 \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 
       RGBColor[1, 0, 0]}, {{
        Hold[TwoLaneModelPackage`Private`pBreak$$], 
        Rational[1, 5], 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0433\:043e \:0442\:043e\
\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:044f"}, 0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`W$$], 0.8, 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
W"}, 0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`coefficentW$$], 3, 
        "\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:0434\:043b\:044f \:0432\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\
\:0442\:0438 W"}, 3}, {{
        Hold[TwoLaneModelPackage`Private`coefficentOneTime$$], 0.4, 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
\:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:043e\:0432\:0430\:0442\:044c\
\:0441\:044f \:0432 \:043e\:0434\:043d\:043e \:0432\:0440\:0435\:043c\:044f"},
        0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`obstacleStart$$], 15, 
        "\:041d\:0430\:0447\:0430\:043b\:044c\:043d\:0430\:044f \:043f\:043e\
\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 1, 24, 1}, {{
        Hold[TwoLaneModelPackage`Private`obstacleFinish$$], 30, 
        "\:041a\:043e\:043d\:0435\:0447\:043d\:0430\:044f \:043f\:043e\:0437\
\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\
\:0432\:0438\:044f"}, 25, 60, 1}, {
       Hold[
        Grid[{{
           Style[
           "\:041d\:0430\:0441\:0442\:0440\:043e\:0439\:043a\:0430 \:0432\
\:0438\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:0438", Bold, 
            FontSize -> 20], 
           Style[
           "\:041f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:044b:", Bold, 
            FontSize -> 20]}, {
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Manipulate`Place[4]}, {
           Manipulate`Place[5], 
           Manipulate`Place[6]}, {
           Manipulate`Place[7], 
           Manipulate`Place[8]}, {"", 
           Manipulate`Place[9]}, {"", 
           Manipulate`Place[10]}, {"", 
           Manipulate`Place[11]}, {"", 
           Manipulate`Place[12]}, {"", 
           Manipulate`Place[13]}, {"", 
           Button[
            Style[
            "\:0412\:0438\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\
\:0438\:044f \:0441 \:043d\:043e\:0432\:044b\:043c\:0438 \:0434\:0430\:043d\
\:043d\:044b\:043c\:0438", 16, FontFamily -> "Cambria"], 
            TwoLaneModelPackage`Private`cars$$ = 
             TwoLaneModelPackage`carInitialization[
              TwoLaneModelPackage`Private`carsCount$$, 
               TwoLaneModelPackage`Private`maxVelocity$$, 2, 
               TwoLaneModelPackage`Private`coefficentOneTime$$, 
               TwoLaneModelPackage`Private`W$$]; 
            TwoLaneModelPackage`Private`obstacleCars$$ = 
             TwoLaneModelPackage`addObstacle[
              TwoLaneModelPackage`Private`cars$$, {
               TwoLaneModelPackage`Private`obstacleStart$$, 
                TwoLaneModelPackage`Private`obstacleFinish$$}]; 
            TwoLaneModelPackage`Private`iterCars$$ = 
             TwoLaneModelPackage`modelInterations[
              TwoLaneModelPackage`Private`obstacleCars$$, 
               TwoLaneModelPackage`Private`maxVelocity$$, 
               TwoLaneModelPackage`Private`iterationLimit$$, 
               TwoLaneModelPackage`Private`pBreak$$, 
               TwoLaneModelPackage`Private`coefficentW$$, 
               TwoLaneModelPackage`Private`W$$]]}}, Alignment -> Left, 
         Dividers -> {{2 -> Thickness[Large]}, {False}}, 
         Spacings -> {4, Automatic}]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {71., {356., 364.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
     TwoLaneModelPackage`Private`iterationCount$87130$$ = 0, 
     TwoLaneModelPackage`Private`mesh$87131$$ = False, 
     TwoLaneModelPackage`Private`scale$87132$$ = 0, 
     TwoLaneModelPackage`Private`pBreak$87133$$ = 0, 
     TwoLaneModelPackage`Private`W$87134$$ = 0, 
     TwoLaneModelPackage`Private`coefficentOneTime$87135$$ = 0, 
     TwoLaneModelPackage`Private`obstacleStart$87136$$ = 0, 
     TwoLaneModelPackage`Private`obstacleFinish$87137$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {
        TwoLaneModelPackage`Private`carsCount$$ = 30, 
         TwoLaneModelPackage`Private`coefficentOneTime$$ = 0.4, 
         TwoLaneModelPackage`Private`coefficentW$$ = 3, 
         TwoLaneModelPackage`Private`color$$ = RGBColor[1, 0, 0], 
         TwoLaneModelPackage`Private`iterationCount$$ = 1, 
         TwoLaneModelPackage`Private`iterationLimit$$ = 40, 
         TwoLaneModelPackage`Private`maxVelocity$$ = 5, 
         TwoLaneModelPackage`Private`mesh$$ = False, 
         TwoLaneModelPackage`Private`obstacleFinish$$ = 30, 
         TwoLaneModelPackage`Private`obstacleStart$$ = 15, 
         TwoLaneModelPackage`Private`pBreak$$ = Rational[1, 5], 
         TwoLaneModelPackage`Private`scale$$ = 
         TwoLaneModelPackage`Private`obstacleFinish$$, 
         TwoLaneModelPackage`Private`W$$ = 0.8}, "ControllerVariables" :> {
         Hold[
         TwoLaneModelPackage`Private`iterationCount$$, 
          TwoLaneModelPackage`Private`iterationCount$87130$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`mesh$$, 
          TwoLaneModelPackage`Private`mesh$87131$$, False], 
         Hold[
         TwoLaneModelPackage`Private`scale$$, 
          TwoLaneModelPackage`Private`scale$87132$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`pBreak$$, 
          TwoLaneModelPackage`Private`pBreak$87133$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`W$$, 
          TwoLaneModelPackage`Private`W$87134$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`coefficentOneTime$$, 
          TwoLaneModelPackage`Private`coefficentOneTime$87135$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`obstacleStart$$, 
          TwoLaneModelPackage`Private`obstacleStart$87136$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`obstacleFinish$$, 
          TwoLaneModelPackage`Private`obstacleFinish$87137$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ArrayPlot[
         TwoLaneModelPackage`pictureArray[
          Part[
          TwoLaneModelPackage`Private`iterCars$$, 
           TwoLaneModelPackage`Private`iterationCount$$], 
          TwoLaneModelPackage`Private`scale$$, 
          TwoLaneModelPackage`Private`color$$], 
         Mesh -> {TwoLaneModelPackage`Private`mesh$$, {1}}, 
         MeshStyle -> {Gray, {Thick, Dashed}}, Frame -> True, 
         FrameLabel -> {"Position", "Lane"}, ImageSize -> Large], 
       "Specifications" :> {
         Style[
         "\:041f\:0430\:043d\:0435\:043b\:044c \:0443\:043f\:0440\:0430\:0432\
\:043b\:0435\:043d\:0438\:044f:", Bold, FontSize -> 24], 
         Delimiter, {{
          TwoLaneModelPackage`Private`iterationCount$$, 1, 
           "\:0418\:0442\:0435\:0440\:0430\:0446\:0438\:044f"}, 1, 
          Dynamic[TwoLaneModelPackage`Private`iterationLimit$$], 1, 
          Appearance -> "Open", ControlPlacement -> 1}, {{
          TwoLaneModelPackage`Private`carsCount$$, 30, 
           "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, 
          30, ControlPlacement -> 2}, {{
          TwoLaneModelPackage`Private`mesh$$, False, 
           "\:0421\:0435\:0442\:043a\:0430"}, {True, False}, ControlPlacement -> 
          3}, {{TwoLaneModelPackage`Private`iterationLimit$$, 40, 
           "\:041a\:043e\:043b-\:0432\:043e \:0438\:0442\:0435\:0440\:0430\
\:0446\:0438\:0439"}, 40, ControlPlacement -> 4}, {{
          TwoLaneModelPackage`Private`scale$$, 
           TwoLaneModelPackage`Private`obstacleFinish$$, 
           "\:041c\:0430\:0441\:0448\:0442\:0430\:0431"}, 5, 
          Dynamic[2 TwoLaneModelPackage`Private`obstacleFinish$$], 1, 
          AppearanceElements -> All, ControlPlacement -> 5}, {{
          TwoLaneModelPackage`Private`maxVelocity$$, 5, 
           "\:041c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:0430\
\:044f \:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c"}, 5, 
          ControlPlacement -> 6}, {{TwoLaneModelPackage`Private`color$$, 
           RGBColor[1, 0, 0], 
           "\:0426\:0432\:0435\:0442 \:043f\:0440\:0435\:043f\:044f\:0442\
\:0441\:0442\:0432\:0438\:044f"}, 
          RGBColor[1, 0, 0], ControlPlacement -> 7}, {{
          TwoLaneModelPackage`Private`pBreak$$, 
           Rational[1, 5], 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 \:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0433\:043e \:0442\:043e\
\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:044f"}, 0.1, 1, 
          AppearanceElements -> All, ControlPlacement -> 8}, {{
          TwoLaneModelPackage`Private`W$$, 0.8, 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 W"}, 0.1, 1, AppearanceElements -> All, ControlPlacement -> 9}, {{
          TwoLaneModelPackage`Private`coefficentW$$, 3, 
           "\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442\
 \:0434\:043b\:044f \:0432\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\
\:0442\:0438 W"}, 3, ControlPlacement -> 10}, {{
          TwoLaneModelPackage`Private`coefficentOneTime$$, 0.4, 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 \:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:043e\:0432\:0430\:0442\
\:044c\:0441\:044f \:0432 \:043e\:0434\:043d\:043e \:0432\:0440\:0435\:043c\
\:044f"}, 0.1, 1, AppearanceElements -> All, ControlPlacement -> 11}, {{
          TwoLaneModelPackage`Private`obstacleStart$$, 15, 
           "\:041d\:0430\:0447\:0430\:043b\:044c\:043d\:0430\:044f \:043f\
\:043e\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\
\:0441\:0442\:0432\:0438\:044f"}, 1, 24, 1, AppearanceElements -> All, 
          ControlPlacement -> 12}, {{
          TwoLaneModelPackage`Private`obstacleFinish$$, 30, 
           "\:041a\:043e\:043d\:0435\:0447\:043d\:0430\:044f \:043f\:043e\
\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 25, 60, 1, AppearanceElements -> All, 
          ControlPlacement -> 13}, 
         Grid[{{
            Style[
            "\:041d\:0430\:0441\:0442\:0440\:043e\:0439\:043a\:0430 \:0432\
\:0438\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:0438", Bold, 
             FontSize -> 20], 
            Style[
            "\:041f\:0430\:0440\:0430\:043c\:0435\:0442\:0440\:044b:", Bold, 
             FontSize -> 20]}, {
            Manipulate`Place[1], 
            Manipulate`Place[2]}, {
            Manipulate`Place[3], 
            Manipulate`Place[4]}, {
            Manipulate`Place[5], 
            Manipulate`Place[6]}, {
            Manipulate`Place[7], 
            Manipulate`Place[8]}, {"", 
            Manipulate`Place[9]}, {"", 
            Manipulate`Place[10]}, {"", 
            Manipulate`Place[11]}, {"", 
            Manipulate`Place[12]}, {"", 
            Manipulate`Place[13]}, {"", 
            Button[
             Style[
             "\:0412\:0438\:0437\:0443\:0430\:043b\:0438\:0437\:0430\:0446\
\:0438\:044f \:0441 \:043d\:043e\:0432\:044b\:043c\:0438 \:0434\:0430\:043d\
\:043d\:044b\:043c\:0438", 16, FontFamily -> "Cambria"], 
             TwoLaneModelPackage`Private`cars$$ = 
              TwoLaneModelPackage`carInitialization[
               TwoLaneModelPackage`Private`carsCount$$, 
                TwoLaneModelPackage`Private`maxVelocity$$, 2, 
                TwoLaneModelPackage`Private`coefficentOneTime$$, 
                TwoLaneModelPackage`Private`W$$]; 
             TwoLaneModelPackage`Private`obstacleCars$$ = 
              TwoLaneModelPackage`addObstacle[
               TwoLaneModelPackage`Private`cars$$, {
                TwoLaneModelPackage`Private`obstacleStart$$, 
                 TwoLaneModelPackage`Private`obstacleFinish$$}]; 
             TwoLaneModelPackage`Private`iterCars$$ = 
              TwoLaneModelPackage`modelInterations[
               TwoLaneModelPackage`Private`obstacleCars$$, 
                TwoLaneModelPackage`Private`maxVelocity$$, 
                TwoLaneModelPackage`Private`iterationLimit$$, 
                TwoLaneModelPackage`Private`pBreak$$, 
                TwoLaneModelPackage`Private`coefficentW$$, 
                TwoLaneModelPackage`Private`W$$]]}}, Alignment -> Left, 
          Dividers -> {{2 -> Thickness[Large]}, {False}}, 
          Spacings -> {4, Automatic}]}, 
       "Options" :> {
        ControlPlacement -> Right, AppearanceElements -> None, Paneled -> 
         False, Alignment -> Center, LabelStyle -> 
         Directive[FontSize -> 16, FontFamily -> "Cambria"], ContinuousAction -> 
         False}, "DefaultOptions" :> {}],
      ImageSizeCache->{1102., {366., 375.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.799674541837536*^9, {3.799674607958514*^9, 3.799674616358883*^9}, {
   3.7996746687168093`*^9, 3.7996746765741158`*^9}, 3.7996750694846315`*^9, {
   3.799675100493211*^9, 3.799675107955496*^9}, {3.799675189452786*^9, 
   3.799675190493827*^9}, 3.799685262701548*^9, 3.799685377014662*^9, 
   3.7997613373217278`*^9, {3.800079950725506*^9, 3.8000799567474346`*^9}, {
   3.800080639525895*^9, 3.80008064270636*^9}, 3.8000814279990454`*^9, 
   3.800112816237929*^9, {3.8001158484719167`*^9, 3.8001158553874207`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"1c808ade-aa15-4bc0-b1fa-2db39cc250a4"]
}, Open  ]]
}, Closed]],

Cell["6", "Subsection",
 CellChangeTimes->{3.800032573678196*^9, 3.800034331506115*^9},
 TextAlignment->Right,ExpressionUUID->"b5cfa526-da14-4f9d-bf5e-b08a161ad1ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5defa854-936f-4f31-8d0f-cc7f38c25f57"],

Cell[CellGroupData[{

Cell["\:0410\:043d\:0430\:043b\:0438\:0437 \:043c\:043e\:0434\:0435\:043b\
\:0438", "Section",
 CellChangeTimes->{{3.7997599904027424`*^9, 
  3.79975999435483*^9}},ExpressionUUID->"5992bfcd-df20-44c5-bcca-\
47c67948498a"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:041f\:043b\:0430\:0442\:0444\:043e\:0440\:043c\:0430 \:0434\:043b\:044f \
\:0430\:043d\:0430\:043b\:0438\:0437\:0430 \:043f\:043b\:043e\:0442\:043d\
\:043e\:0441\:0442\:0438 \:0438 \:0441\:0440\:0435\:0434\:043d\:0435\:0439 \
\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0438 \:0432 \:0437\:043e\:043d\
\:0430\:0445 \:0430\:0432\:0442\:043e\:0441\:0442\:0440\:0430\:0434\:044b"
}], "Subsection",
 CellChangeTimes->{{3.7997600006191225`*^9, 3.799760014836593*^9}, {
  3.799760193245837*^9, 3.799760195094515*^9}, {3.7997612234282064`*^9, 
  3.7997612661881475`*^9}},ExpressionUUID->"d05768f3-f880-4a07-8665-\
5e4adac23905"],

Cell[CellGroupData[{

Cell[BoxData["dataZonesAnalysis"], "Input",
 CellChangeTimes->{{3.7997600231665545`*^9, 3.7997600278560214`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"deeefeef-1358-479e-b5d7-0e6334e5e03f"],

Cell[BoxData[
 DynamicModuleBox[{TwoLaneModelPackage`Private`cars$$ = Association[
  1 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.09745610861428111, 0.4032231784275231, 0.4910686635612551]], 
   2 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 2, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.11639780723547255`, 0.4156732579191007, 0.400046912515287]], 
   3 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.4468603390611734, 0.00383110559719424, 0.442086451800082]], 4 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.28677875278214104`, 0.3131394368413216, 0.2743892786127826]], 
   5 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8215090977945778, 0.7060704434859413, 0.7844789946530493]], 6 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.3708892106431456, 0.5544852530795228, 0.9798110362128261]], 7 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.29293368348329385`, 0.7783976256598892, 0.00880950242925227]],
    8 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 8, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8832995623452908, 0.19425144642151082`, 0.7934565264738276]], 
   9 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8861914856468902, 0.8490137304958689, 0.03223392360570698]], 
   10 -> Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 11, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.9869720064548215, 0.6248510843951074, 0.6321574312640701]], 
   11 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 11, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.041838125482368316`, 0.4129828528773243, 0.5452317669714599]],
    12 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 13, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.6354335121583341, 0.15217173037835052`, 0.1081712055011732]], 
   13 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 14, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.2440273549772245, 0.6386143431433591, 0.3609371254408855]], 
   14 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 14, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.7089783574282682, 0.2664121356876281, 0.7550277262877907]], 
   15 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 16, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.4662715462832283, 0.6256291437835404, 0.09200597397075927]], 
   16 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 16, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.13943379600224715`, 0.18228555000745406`, 
       0.08974856612012294]], 17 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 17, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.5895887305629239, 0.6145859028543299, 0.7862070014548073]], 
   18 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 18, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8657628188479782, 0.1826231778518963, 0.3686810347950773]], 
   19 -> Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 20, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.5202383313939261, 0.04671786623287155, 0.785230168210129]], 
   20 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 20, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.3594613302865126, 0.2292949417261958, 0.21333174138369526`]], 
   21 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 21, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.9871060903736626, 0.10044245090377091`, 
       0.13164593498756583`]], 22 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 22, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.35871928174885737`, 0.4442319188463171, 0.05896881319604219]],
    23 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 23, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.05923815025705559, 0.49592339757507875`, 0.8806165887276043]],
    24 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 24, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.49982753249774725`, 0.09752985505316314, 0.3776094152274072]],
    25 -> Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 25, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.5096873035749772, 0.056990710304746006`, 
       0.23978034761358757`]], 26 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 26, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8526802627726648, 0.01392512627175213, 0.662949290350842]], 
   27 -> Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 27, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.6599341054824783, 0.025109034802903052`, 
       0.47203211308737303`]], 28 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 28, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8873256750688114, 0.2222697019371902, 0.7312668969529643]], 
   29 -> Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 29, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.1258380958967038, 0.956235402302988, 0.5783697473580769]], 30 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 30, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.1561548352497022, 0.3280497107321336, 0.3698112446130686]]], 
  TwoLaneModelPackage`Private`zoneNamesList$$ = {
  "\:0417\:043e\:043d\:0430 \:0441\:0443\:0436\:0435\:043d\:0438\:044f", 
   "\:0417\:043e\:043d\:0430 \:0441 \
\:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 
   "\:0414\:0432\:0443\:0445\:043f\:043e\:043b\:043e\:0441\:043d\:0430\:044f \
\:0437\:043e\:043d\:0430"}, TwoLaneModelPackage`Private`plotColorsList$$ = {
   RGBColor[0, 0, 1], 
   RGBColor[1, 0, 0], 
   RGBColor[0, 1, 0]}, TwoLaneModelPackage`Private`labelNamesList$$ = {
  "\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\:0430\:0448\
\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441\:0443\:0436\:0435\:043d\
\:0438\:044f", 
   "\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\:0430\:0448\
\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441 \:043f\:0440\:0435\:043f\
\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 
   "\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\:0430\:0448\
\:0438\:043d \:0432 \:0434\:0432\:0443\:0445\:043f\:043e\:043b\:043e\:0441\
\:043d\:043e\:0439 \:0437\:043e\:043d\:0435"}, 
  TwoLaneModelPackage`Private`plots$$ = {
   Framed[
    Labeled[
     Graphics[{{}, 
       GraphicsComplex[CompressedData["
1:eJztkr0KwkAQhA8rSwsLC4soIiIi8f/fnNEX0EcQrH2Fe2QfQcWdYr/eLgth
mMzOXm6ynfvz9qiFEK6f54u/ehXBV/S0Hv37RvS+Jvpb0fva6M8wr4u5Pfj7
8A+gD8FH4GOcl2PeBPoU+gzz5uALfP/SUDmsDJXDGvrGULls0b9D/x76Af4j
9AL+6HkS1388eZ7Edb/S0O6fSuhn6OLK92KofMVV1T56vdpHx/+4j2/2skyF

        "], {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{2, 5, 4, 3}}], 
             
             Polygon[{{5, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
              28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
              12, 11, 10, 9, 8, 7, 6}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           
           Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]]}, {}}}], {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\
\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441\:0443\:0436\
\:0435\:043d\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
         GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 8.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
     "\:0412\:0440\:0435\:043c\:044f", 
      "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
     Bottom, Left}, RotateLabel -> True]], 
   Framed[
    Labeled[
     Graphics[{{}, 
       GraphicsComplex[CompressedData["
1:eJzt0j0KAkEMhuFgZWlhYWGhIiIi4vr/v1H3AnoEwdorzJE9gopJkRcs7Taw
hIfJfFNs2rfH9V4Rkcv7+/RvPXOJpZFVuKbxXh1u+Lz1psaclsacDtzVmNvD
/T7mB3h/CI/gMZwhf4L8KTyD57i/sO61dFtfYX4Nb+At3tshb4/5A5zDGp3c
nn/EOSynOJ9gOVu3PUhu/5/FD3uV+xjzy32M5//bxxcicUsN
        "], {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{3, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 
              9, 8, 7, 6, 5, 4}, {22, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
              31, 30, 29, 28, 27, 26, 25, 24, 23}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large]]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large]], 
           
           Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, {}}}], {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\
\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441 \:043f\:0440\
\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 16, Bold, 
         FontFamily -> "Cambria Math", 
         GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 6.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
     "\:0412\:0440\:0435\:043c\:044f", 
      "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
     Bottom, Left}, RotateLabel -> True]], 
   Framed[
    Labeled[
     Graphics[{{}, 
       GraphicsComplex[CompressedData["
1:eJztkjsKwlAQRQcrSwsLCwsNIiIS1MT/J6PJCrIEwdotvCW7BBV5wj29XQYe
j8udmXOLGd4e9b1lZvX7ff5vPQv9zfVvu0l14Hehe9B917kB5hJwRtBj9E+w
bwp/Bm4K7hycBfYuoTPkzMFdgbsGZwPOFpwdOHtwDuAcwTnBP8MvkMM1R3D4
F80VoO2K+ajjfKk6lNpvFfp/d2fqx2ruU/c29ym5/nifL1y+TNE=
        "], {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 1, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{1, 41, 3, 2}}], 
             
             Polygon[{{3, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 
              28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
              12, 11, 10, 9, 8, 7, 6, 5, 4}}]}]}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]]}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]], 
           
           Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
           Directive[
            PointSize[
             Rational[7, 360]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0], 
            Thickness[Large]]}, {}}}], {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\
\:0430\:0448\:0438\:043d \:0432 \:0434\:0432\:0443\:0445\:043f\:043e\:043b\
\:043e\:0441\:043d\:043e\:0439 \:0437\:043e\:043d\:0435", 16, Bold, 
         FontFamily -> "Cambria Math", 
         GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 25.}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
     "\:0412\:0440\:0435\:043c\:044f", 
      "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
     Bottom, Left}, RotateLabel -> True]]}, 
  TwoLaneModelPackage`Private`obstacleCars$$ = Association[
  0 -> Association[
    "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {15, 30}, "W" -> 
     0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 1, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.09745610861428111, 0.4032231784275231, 0.4910686635612551]], 
   2 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 2, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.11639780723547255`, 0.4156732579191007, 0.400046912515287]], 
   3 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 4, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.4468603390611734, 0.00383110559719424, 0.442086451800082]], 4 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.28677875278214104`, 0.3131394368413216, 0.2743892786127826]], 
   5 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 5, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8215090977945778, 0.7060704434859413, 0.7844789946530493]], 6 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.3708892106431456, 0.5544852530795228, 0.9798110362128261]], 7 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 7, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.29293368348329385`, 0.7783976256598892, 0.00880950242925227]],
    8 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 8, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8832995623452908, 0.19425144642151082`, 0.7934565264738276]], 
   9 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 9, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8861914856468902, 0.8490137304958689, 0.03223392360570698]], 
   10 -> Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 11, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.9869720064548215, 0.6248510843951074, 0.6321574312640701]], 
   11 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 11, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.041838125482368316`, 0.4129828528773243, 0.5452317669714599]],
    12 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 13, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.6354335121583341, 0.15217173037835052`, 0.1081712055011732]], 
   13 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 14, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.2440273549772245, 0.6386143431433591, 0.3609371254408855]], 
   14 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 14, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.7089783574282682, 0.2664121356876281, 0.7550277262877907]], 
   15 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 16, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.4662715462832283, 0.6256291437835404, 0.09200597397075927]], 
   16 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 16, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.13943379600224715`, 0.18228555000745406`, 
       0.08974856612012294]], 17 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 17, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.5895887305629239, 0.6145859028543299, 0.7862070014548073]], 
   18 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 18, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8657628188479782, 0.1826231778518963, 0.3686810347950773]], 
   19 -> Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 20, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.5202383313939261, 0.04671786623287155, 0.785230168210129]], 
   20 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 20, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.3594613302865126, 0.2292949417261958, 0.21333174138369526`]], 
   21 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 21, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.9871060903736626, 0.10044245090377091`, 
       0.13164593498756583`]], 22 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 22, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.35871928174885737`, 0.4442319188463171, 0.05896881319604219]],
    23 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 23, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.05923815025705559, 0.49592339757507875`, 0.8806165887276043]],
    24 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 24, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.49982753249774725`, 0.09752985505316314, 0.3776094152274072]],
    25 -> Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 25, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.5096873035749772, 0.056990710304746006`, 
       0.23978034761358757`]], 26 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 26, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8526802627726648, 0.01392512627175213, 0.662949290350842]], 
   27 -> Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 27, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.6599341054824783, 0.025109034802903052`, 
       0.47203211308737303`]], 28 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 28, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.8873256750688114, 0.2222697019371902, 0.7312668969529643]], 
   29 -> Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 29, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.1258380958967038, 0.956235402302988, 0.5783697473580769]], 30 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 30, "Position" -> 0, "W" -> 
     0.29600000000000004`, "Color" -> 
     RGBColor[0.1561548352497022, 0.3280497107321336, 0.3698112446130686]]], 
  TwoLaneModelPackage`Private`meanVelocityZones$$ = {2.5517241379310347`, 
  4.433333333333334, 3.7}, 
  TwoLaneModelPackage`Private`dataZones$$ = {{{0, 0, 2, 1, 0, 3, 1, 2, 4, 3, 
    1, 3, 3, 3, 2, 1, 2, 1, 3, 3, 4, 6, 7, 6, 8, 7, 6, 7, 8, 7, 6, 6, 5, 5, 4,
     3, 4, 3, 2, 1}, 2.5517241379310347`}, {{0, 0, 0, 1, 1, 2, 3, 4, 4, 5, 3, 
    4, 1, 1, 1, 1, 3, 4, 4, 4, 3, 0, 2, 3, 3, 3, 4, 2, 3, 3, 3, 3, 4, 3, 3, 4,
     4, 6, 5, 5}, 4.433333333333334}, {{1, 2, 0, 2, 2, 2, 4, 5, 3, 3, 5, 4, 5,
     7, 8, 10, 12, 12, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 21, 22, 23, 24, 
    23, 25, 25, 24, 23, 23, 24, 23}, 3.7}}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{TwoLaneModelPackage`Private`but$$ = {
      Framed[
       Labeled[
        Graphics[{{}, 
          GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAIAGIQDQEf7BlQgQMql8MBVZ0AGl8ETb0EmrwMGl8BTb0S
mrwKGl8Nja8B0w+ltRxQ3amDxtdD02+AxjdEM88IjW+MxjdB45uimWeGxjdH
U28B40OBJRrfCk29NZq8DRrfFk29HZSG+d8eTb0DqvsaHNDkHVH5DWh8Bic0
eTQ+gzOaPBqfwQWNP5r+UM0bTX8oXBqmPwA/aky0
           "], {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.2]], 
              GraphicsGroup[{
                Polygon[{{31, 33, 32}, {25, 27, 26}}], 
                Polygon[{{5, 8, 7, 6}, {2, 5, 4, 3}, {28, 31, 30, 29}}], 
                
                Polygon[{{8, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 
                 12, 11, 10, 9}}]}]}, {}, {}}, {{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[Large]], 
              
              Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
               33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[Large]]}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[Large]], 
              
              Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Thickness[Large]]}, {}}}], {{}, {}}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441\:0443\
\:0436\:0435\:043d\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
            GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 3.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        "\:0412\:0440\:0435\:043c\:044f", 
         "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
        Bottom, Left}, RotateLabel -> True]], 
      Framed[
       Labeled[
        Graphics[{{}, 
          GraphicsComplex[CompressedData["
1:eJztkj0KwkAQRhcrSwsLCwsVERER4/9/Rs0F9AiCtVfYI3sEFfcr5oGlXQbC
8HjZ/YZk2rfH9V4JIVzez6d/65kHX+axCq6ZP1eXT71h/lwTvgXu4L4ufA++
Dx6Ah8gfgcfgDDxB/hR+Bp6DF6nrOy3hV+A15t8gf4v3d/B75B3AOdhST/8t
GvzR50Wx5jt5jmLNc4YXa/7iB6vKffRc7qPL++M+vgCcNVAX
           "], {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0, 0], 
               Opacity[0.2]], 
              GraphicsGroup[{
                
                Polygon[{{3, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
                 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 
                 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 
                 4}}]}]}, {}, {}}, {{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[Large]], 
              
              Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
               33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[Large]]}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[Large]], 
              
              Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Thickness[Large]]}, {}}}], {{}, {}}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441 \:043f\
\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 16, Bold,
             FontFamily -> "Cambria Math", 
            GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 5.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        "\:0412\:0440\:0435\:043c\:044f", 
         "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
        Bottom, Left}, RotateLabel -> True]], 
      Framed[
       Labeled[
        Graphics[{{}, 
          GraphicsComplex[CompressedData["
1:eJztkjsKAkEQBRsjQwMDAwMVERER1/9/W9cT7BEEY68wR/YIKtLCq9xsB5ah
6Kn3Nuju7VHea2ZWvr/P/T3PXG9z5Tq4AW66ei1Xr+3qdVy9Hrw+vAG8IeYj
+GPMJ+iZIjdDzgw5c/AC75foWaFnjZ4NcrfI2eHdHrkHeEfwCb05fNd5Cg7/
rJyC478uyik4egvlBLYr+Ld3pvM41X5qTrWfwn/czxdj31QD
           "], {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0, 1, 0], 
               Opacity[0.2]], 
              GraphicsGroup[{
                
                Polygon[{{1, 41, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 
                 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                 2}}]}]}, {}, {}}, {{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 0], 
               Thickness[Large]], 
              
              Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
               33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 0], 
               Thickness[Large]]}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 0], 
               Thickness[Large]], 
              
              Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
              Directive[
               PointSize[
                Rational[7, 360]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 1, 0], 
               Thickness[Large]]}, {}}}], {{}, {}}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0434\:0432\:0443\:0445\:043f\:043e\
\:043b\:043e\:0441\:043d\:043e\:0439 \:0437\:043e\:043d\:0435", 16, Bold, 
            FontFamily -> "Cambria Math", 
            GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 30.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
        "\:0412\:0440\:0435\:043c\:044f", 
         "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
        Bottom, Left}, RotateLabel -> True]]}, 
     TwoLaneModelPackage`Private`carsCount$$ = 30, 
     TwoLaneModelPackage`Private`coefficentOneTime$$ = 0.4, 
     TwoLaneModelPackage`Private`coefficentW$$ = 3, 
     TwoLaneModelPackage`Private`iterationLimit$$ = 40, 
     TwoLaneModelPackage`Private`maxVelocity$$ = 5, 
     TwoLaneModelPackage`Private`obstacleFinish$$ = 30, 
     TwoLaneModelPackage`Private`obstacleStart$$ = 15, 
     TwoLaneModelPackage`Private`pBreak$$ = 0.29000000000000004`, 
     TwoLaneModelPackage`Private`W$$ = 0.29600000000000004`, 
     TwoLaneModelPackage`Private`zoneStartPos$$ = 5, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style[
        "\:041f\:0430\:043d\:0435\:043b\:044c \:0443\:043f\:0440\:0430\:0432\
\:043b\:0435\:043d\:0438\:044f:", Bold, FontSize -> 24]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[TwoLaneModelPackage`Private`carsCount$$], 30, 
        "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, 
       30}, {{
        Hold[TwoLaneModelPackage`Private`iterationLimit$$], 40, 
        "\:041a\:043e\:043b-\:0432\:043e \:0438\:0442\:0435\:0440\:0430\:0446\
\:0438\:0439"}, 40}, {{
        Hold[TwoLaneModelPackage`Private`maxVelocity$$], 5, 
        "\:041c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:0430\
\:044f \:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c"}, 5}, {{
        Hold[TwoLaneModelPackage`Private`pBreak$$], 
        Rational[1, 5], 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0433\:043e \:0442\:043e\
\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:044f"}, 0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`W$$], 0.8, 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
W"}, 0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`coefficentW$$], 3, 
        "\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:0434\:043b\:044f \:0432\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\
\:0442\:0438 W"}, 3}, {{
        Hold[TwoLaneModelPackage`Private`coefficentOneTime$$], 0.4, 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
\:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:043e\:0432\:0430\:0442\:044c\
\:0441\:044f \:0432 \:043e\:0434\:043d\:043e \:0432\:0440\:0435\:043c\:044f"},
        0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`zoneStartPos$$], 5, 
        "\:0414\:043b\:0438\:043d\:0430 \:0437\:043e\:043d\:044b \:0441\:0443\
\:0436\:0435\:043d\:0438\:044f"}, 5}, {{
        Hold[TwoLaneModelPackage`Private`obstacleStart$$], 15, 
        "\:041d\:0430\:0447\:0430\:043b\:044c\:043d\:0430\:044f \:043f\:043e\
\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 1, 24, 1}, {{
        Hold[TwoLaneModelPackage`Private`obstacleFinish$$], 30, 
        "\:041a\:043e\:043d\:0435\:0447\:043d\:0430\:044f \:043f\:043e\:0437\
\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\
\:0432\:0438\:044f"}, 25, 60, 1}, {{
        Hold[TwoLaneModelPackage`Private`but$$], {
         Framed[
          Labeled[
           Graphics[{{}, 
             GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAIAGIQDQEf7BlQgQMql8MBVZ0AGl8ETb0EmrwMGl8BTb0S
mrwKGl8Nja8B0w+ltRxQ3amDxtdD02+AxjdEM88IjW+MxjdB45uimWeGxjdH
U28B40OBJRrfCk29NZq8DRrfFk29HZSG+d8eTb0DqvsaHNDkHVH5DWh8Bic0
eTQ+gzOaPBqfwQWNP5r+UM0bTX8oXBqmPwA/aky0
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  RGBColor[0, 0, 1], 
                  Opacity[0.2]], 
                 GraphicsGroup[{
                   Polygon[{{31, 33, 32}, {25, 27, 26}}], 
                   Polygon[{{5, 8, 7, 6}, {2, 5, 4, 3}, {28, 31, 30, 29}}], 
                   
                   Polygon[{{8, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
                    13, 12, 11, 10, 9}}]}]}, {}, {}}, {{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Thickness[Large]], 
                 
                 Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                  32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Thickness[Large]]}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Thickness[Large]], 
                 
                 Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                   32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Thickness[Large]]}, {}}}], {{}, {}}}, {
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
             AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
             DisplayFunction :> Identity, 
             Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Large, 
             Method -> {
              "OptimizePlotMarkers" -> True, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
             Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441\:0443\
\:0436\:0435\:043d\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
               GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 3.}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
           "\:0412\:0440\:0435\:043c\:044f", 
            "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
         Framed[
          Labeled[
           Graphics[{{}, 
             GraphicsComplex[CompressedData["
1:eJztkj0KwkAQRhcrSwsLCwsVERER4/9/Rs0F9AiCtVfYI3sEFfcr5oGlXQbC
8HjZ/YZk2rfH9V4JIVzez6d/65kHX+axCq6ZP1eXT71h/lwTvgXu4L4ufA++
Dx6Ah8gfgcfgDDxB/hR+Bp6DF6nrOy3hV+A15t8gf4v3d/B75B3AOdhST/8t
GvzR50Wx5jt5jmLNc4YXa/7iB6vKffRc7qPL++M+vgCcNVAX
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  RGBColor[1, 0, 0], 
                  Opacity[0.2]], 
                 GraphicsGroup[{
                   
                   Polygon[{{3, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                    30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 
                    4}}]}]}, {}, {}}, {{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Thickness[Large]], 
                 
                 Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                  32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Thickness[Large]]}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Thickness[Large]], 
                 
                 Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                   32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Thickness[Large]]}, {}}}], {{}, {}}}, {
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
             AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
             DisplayFunction :> Identity, 
             Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Large, 
             Method -> {
              "OptimizePlotMarkers" -> True, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
             Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441 \:043f\
\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 16, Bold,
                FontFamily -> "Cambria Math", 
               GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 5.}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
           "\:0412\:0440\:0435\:043c\:044f", 
            "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
         Framed[
          Labeled[
           Graphics[{{}, 
             GraphicsComplex[CompressedData["
1:eJztkjsKAkEQBRsjQwMDAwMVERER1/9/W9cT7BEEY68wR/YIKtLCq9xsB5ah
6Kn3Nuju7VHea2ZWvr/P/T3PXG9z5Tq4AW66ei1Xr+3qdVy9Hrw+vAG8IeYj
+GPMJ+iZIjdDzgw5c/AC75foWaFnjZ4NcrfI2eHdHrkHeEfwCb05fNd5Cg7/
rJyC478uyik4egvlBLYr+Ld3pvM41X5qTrWfwn/czxdj31QD
              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  RGBColor[0, 1, 0], 
                  Opacity[0.2]], 
                 GraphicsGroup[{
                   
                   Polygon[{{1, 41, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                    31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 
                    17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {}}, {{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Thickness[Large]], 
                 
                 Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                  32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Thickness[Large]]}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Thickness[Large]], 
                 
                 Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                   32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                 Directive[
                  PointSize[
                   Rational[7, 360]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 1, 0], 
                  Thickness[Large]]}, {}}}], {{}, {}}}, {
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
             AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
             DisplayFunction :> Identity, 
             Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Large, 
             Method -> {
              "OptimizePlotMarkers" -> True, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
             Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0434\:0432\:0443\:0445\:043f\:043e\
\:043b\:043e\:0441\:043d\:043e\:0439 \:0437\:043e\:043d\:0435", 16, Bold, 
               FontFamily -> "Cambria Math", 
               GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 30.}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
           "\:0412\:0440\:0435\:043c\:044f", 
            "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]]}, ""}, 
       Dynamic[Button[
         Style[
         "\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:0438 \:0441 \
\:043d\:043e\:0432\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", 16, FontFamily -> "Cambria"], 
         TwoLaneModelPackage`Private`cars$$ = 
          TwoLaneModelPackage`carInitialization[
           TwoLaneModelPackage`Private`carsCount$$, 
            TwoLaneModelPackage`Private`maxVelocity$$, 2, 
            TwoLaneModelPackage`Private`coefficentOneTime$$, 
            TwoLaneModelPackage`Private`W$$]; 
         TwoLaneModelPackage`Private`obstacleCars$$ = 
          TwoLaneModelPackage`addObstacle[
           TwoLaneModelPackage`Private`cars$$, {
            TwoLaneModelPackage`Private`obstacleStart$$, 
             TwoLaneModelPackage`Private`obstacleFinish$$}]; 
         TwoLaneModelPackage`Private`dataZones$$ = 
          Map[TwoLaneModelPackage`dataAnalysis[
            TwoLaneModelPackage`Private`obstacleCars$$, 
             TwoLaneModelPackage`Private`maxVelocity$$, 
             TwoLaneModelPackage`Private`pBreak$$, 
             TwoLaneModelPackage`Private`iterationLimit$$, 
             TwoLaneModelPackage`Private`coefficentW$$, 
             TwoLaneModelPackage`Private`W$$, #]& , 
            TwoLaneModelPackage`Private`zoneNamesList$$]; 
         TwoLaneModelPackage`Private`plots$$ = 
          MapThread[
           TwoLaneModelPackage`densityZonesPlot, {
            TwoLaneModelPackage`Private`dataZones$$, 
             TwoLaneModelPackage`Private`labelNamesList$$, 
             TwoLaneModelPackage`Private`plotColorsList$$}]; 
         TwoLaneModelPackage`Private`meanVelocityZones$$ = 
          Map[Last, TwoLaneModelPackage`Private`dataZones$$]]& ]}}, 
     Typeset`size$$ = {629., {283., 292.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
     TwoLaneModelPackage`Private`pBreak$27527$$ = 0, 
     TwoLaneModelPackage`Private`W$27528$$ = 0, 
     TwoLaneModelPackage`Private`coefficentOneTime$27529$$ = 0, 
     TwoLaneModelPackage`Private`obstacleStart$27530$$ = 0, 
     TwoLaneModelPackage`Private`obstacleFinish$27531$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {TwoLaneModelPackage`Private`but$$ = {
           Framed[
            Labeled[
             Graphics[{{}, 
               GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAIAGIQDQEf7BlQgQMql8MBVZ0AGl8ETb0EmrwMGl8BTb0S
mrwKGl8Nja8B0w+ltRxQ3amDxtdD02+AxjdEM88IjW+MxjdB45uimWeGxjdH
U28B40OBJRrfCk29NZq8DRrfFk29HZSG+d8eTb0DqvsaHNDkHVH5DWh8Bic0
eTQ+gzOaPBqfwQWNP5r+UM0bTX8oXBqmPwA/aky0
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    RGBColor[0, 0, 1], 
                    Opacity[0.2]], 
                   GraphicsGroup[{
                    Polygon[{{31, 33, 32}, {25, 27, 26}}], 
                    Polygon[{{5, 8, 7, 6}, {2, 5, 4, 3}, {28, 31, 30, 29}}], 
                    
                    Polygon[{{8, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
                    13, 12, 11, 10, 9}}]}]}, {}, {}}, {{}, {}, {
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], 
                   
                   Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]]}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], 
                   
                   Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]]}, {}}}], {{}, {}}}, {
              DisplayFunction -> Identity, DisplayFunction -> Identity, 
               AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
               DisplayFunction :> Identity, 
               Frame -> {{False, False}, {False, False}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> Large, 
               Method -> {
                "OptimizePlotMarkers" -> True, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
               Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441\:0443\
\:0436\:0435\:043d\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
                 GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 3.}}, 
               PlotRangeClipping -> True, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
             "\:0412\:0440\:0435\:043c\:044f", 
              "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
           Framed[
            Labeled[
             Graphics[{{}, 
               GraphicsComplex[CompressedData["
1:eJztkj0KwkAQRhcrSwsLCwsVERER4/9/Rs0F9AiCtVfYI3sEFfcr5oGlXQbC
8HjZ/YZk2rfH9V4JIVzez6d/65kHX+axCq6ZP1eXT71h/lwTvgXu4L4ufA++
Dx6Ah8gfgcfgDDxB/hR+Bp6DF6nrOy3hV+A15t8gf4v3d/B75B3AOdhST/8t
GvzR50Wx5jt5jmLNc4YXa/7iB6vKffRc7qPL++M+vgCcNVAX
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    RGBColor[1, 0, 0], 
                    Opacity[0.2]], 
                   GraphicsGroup[{
                    
                    Polygon[{{3, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                    30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 
                    4}}]}]}, {}, {}}, {{}, {}, {
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], 
                   
                   Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], 
                   
                   Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, {}}}], {{}, {}}}, {
              DisplayFunction -> Identity, DisplayFunction -> Identity, 
               AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
               DisplayFunction :> Identity, 
               Frame -> {{False, False}, {False, False}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> Large, 
               Method -> {
                "OptimizePlotMarkers" -> True, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
               Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441 \:043f\
\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 16, Bold,
                  FontFamily -> "Cambria Math", 
                 GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 5.}}, 
               PlotRangeClipping -> True, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
             "\:0412\:0440\:0435\:043c\:044f", 
              "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
           Framed[
            Labeled[
             Graphics[{{}, 
               GraphicsComplex[CompressedData["
1:eJztkjsKAkEQBRsjQwMDAwMVERER1/9/W9cT7BEEY68wR/YIKtLCq9xsB5ah
6Kn3Nuju7VHea2ZWvr/P/T3PXG9z5Tq4AW66ei1Xr+3qdVy9Hrw+vAG8IeYj
+GPMJ+iZIjdDzgw5c/AC75foWaFnjZ4NcrfI2eHdHrkHeEfwCb05fNd5Cg7/
rJyC478uyik4egvlBLYr+Ld3pvM41X5qTrWfwn/czxdj31QD
                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    RGBColor[0, 1, 0], 
                    Opacity[0.2]], 
                   GraphicsGroup[{
                    
                    Polygon[{{1, 41, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                    31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 
                    17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {}}, {{}, {}, {
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], 
                   
                   Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], 
                   
                   Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                   Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, {}}}], {{}, {}}}, {
              DisplayFunction -> Identity, DisplayFunction -> Identity, 
               AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
               DisplayFunction :> Identity, 
               Frame -> {{False, False}, {False, False}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> Large, 
               Method -> {
                "OptimizePlotMarkers" -> True, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
               Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0434\:0432\:0443\:0445\:043f\:043e\
\:043b\:043e\:0441\:043d\:043e\:0439 \:0437\:043e\:043d\:0435", 16, Bold, 
                 FontFamily -> "Cambria Math", 
                 GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 30.}}, 
               PlotRangeClipping -> True, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
             "\:0412\:0440\:0435\:043c\:044f", 
              "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]]}, 
         TwoLaneModelPackage`Private`carsCount$$ = 30, 
         TwoLaneModelPackage`Private`coefficentOneTime$$ = 0.4, 
         TwoLaneModelPackage`Private`coefficentW$$ = 3, 
         TwoLaneModelPackage`Private`iterationLimit$$ = 40, 
         TwoLaneModelPackage`Private`maxVelocity$$ = 5, 
         TwoLaneModelPackage`Private`obstacleFinish$$ = 30, 
         TwoLaneModelPackage`Private`obstacleStart$$ = 15, 
         TwoLaneModelPackage`Private`pBreak$$ = Rational[1, 5], 
         TwoLaneModelPackage`Private`W$$ = 0.8, 
         TwoLaneModelPackage`Private`zoneStartPos$$ = 5}, 
       "ControllerVariables" :> {
         Hold[
         TwoLaneModelPackage`Private`pBreak$$, 
          TwoLaneModelPackage`Private`pBreak$27527$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`W$$, 
          TwoLaneModelPackage`Private`W$27528$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`coefficentOneTime$$, 
          TwoLaneModelPackage`Private`coefficentOneTime$27529$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`obstacleStart$$, 
          TwoLaneModelPackage`Private`obstacleStart$27530$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`obstacleFinish$$, 
          TwoLaneModelPackage`Private`obstacleFinish$27531$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> TabView[
         AssociationThread[
         TwoLaneModelPackage`Private`zoneNamesList$$ -> MapThread[Column[{
              Style[
              "\:0421\:0440\:0435\:0434\:043d\:044f\:044f \:0441\:043a\:043e\
\:0440\:043e\:0441\:0442\:044c:" ToString[#], 16, FontFamily -> 
               "Cambria"], #2}, Spacings -> 1]& , {
            TwoLaneModelPackage`Private`meanVelocityZones$$, 
             TwoLaneModelPackage`Private`plots$$}]]], "Specifications" :> {
         Style[
         "\:041f\:0430\:043d\:0435\:043b\:044c \:0443\:043f\:0440\:0430\:0432\
\:043b\:0435\:043d\:0438\:044f:", Bold, FontSize -> 24], 
         Delimiter, {{
          TwoLaneModelPackage`Private`carsCount$$, 30, 
           "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, 
          30}, {{TwoLaneModelPackage`Private`iterationLimit$$, 40, 
           "\:041a\:043e\:043b-\:0432\:043e \:0438\:0442\:0435\:0440\:0430\
\:0446\:0438\:0439"}, 40}, {{
          TwoLaneModelPackage`Private`maxVelocity$$, 5, 
           "\:041c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:0430\
\:044f \:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c"}, 5}, {{
          TwoLaneModelPackage`Private`pBreak$$, 
           Rational[1, 5], 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 \:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0433\:043e \:0442\:043e\
\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:044f"}, 0.1, 1, 
          AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`W$$, 0.8, 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 W"}, 0.1, 1, AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`coefficentW$$, 3, 
           "\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442\
 \:0434\:043b\:044f \:0432\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\
\:0442\:0438 W"}, 3}, {{
          TwoLaneModelPackage`Private`coefficentOneTime$$, 0.4, 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 \:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:043e\:0432\:0430\:0442\
\:044c\:0441\:044f \:0432 \:043e\:0434\:043d\:043e \:0432\:0440\:0435\:043c\
\:044f"}, 0.1, 1, AppearanceElements -> All}, 
         Delimiter, {{
          TwoLaneModelPackage`Private`zoneStartPos$$, 5, 
           "\:0414\:043b\:0438\:043d\:0430 \:0437\:043e\:043d\:044b \:0441\
\:0443\:0436\:0435\:043d\:0438\:044f"}, 5}, {{
          TwoLaneModelPackage`Private`obstacleStart$$, 15, 
           "\:041d\:0430\:0447\:0430\:043b\:044c\:043d\:0430\:044f \:043f\
\:043e\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\
\:0441\:0442\:0432\:0438\:044f"}, 1, 24, 1, AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`obstacleFinish$$, 30, 
           "\:041a\:043e\:043d\:0435\:0447\:043d\:0430\:044f \:043f\:043e\
\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 25, 60, 1, AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`but$$, {
            Framed[
             Labeled[
              Graphics[{{}, 
                GraphicsComplex[CompressedData["
1:eJxTTMoPSmViYGAIAGIQDQEf7BlQgQMql8MBVZ0AGl8ETb0EmrwMGl8BTb0S
mrwKGl8Nja8B0w+ltRxQ3amDxtdD02+AxjdEM88IjW+MxjdB45uimWeGxjdH
U28B40OBJRrfCk29NZq8DRrfFk29HZSG+d8eTb0DqvsaHNDkHVH5DWh8Bic0
eTQ+gzOaPBqfwQWNP5r+UM0bTX8oXBqmPwA/aky0
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0, 0, 1], 
                    Opacity[0.2]], 
                    GraphicsGroup[{
                    Polygon[{{31, 33, 32}, {25, 27, 26}}], 
                    Polygon[{{5, 8, 7, 6}, {2, 5, 4, 3}, {28, 31, 30, 29}}], 
                    
                    Polygon[{{8, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 
                    13, 12, 11, 10, 9}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], 
                    
                    Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]]}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]], 
                    
                    Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Thickness[Large]]}, {}}}], {{}, {}}}, {
               DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
                DisplayFunction :> Identity, 
                Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {None, None}, 
                GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> Large, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441\:0443\
\:0436\:0435\:043d\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
                  GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 3.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.02], 
                   Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
              "\:0412\:0440\:0435\:043c\:044f", 
               "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
            Framed[
             Labeled[
              Graphics[{{}, 
                GraphicsComplex[CompressedData["
1:eJztkj0KwkAQRhcrSwsLCwsVERER4/9/Rs0F9AiCtVfYI3sEFfcr5oGlXQbC
8HjZ/YZk2rfH9V4JIVzez6d/65kHX+axCq6ZP1eXT71h/lwTvgXu4L4ufA++
Dx6Ah8gfgcfgDDxB/hR+Bp6DF6nrOy3hV+A15t8gf4v3d/B75B3AOdhST/8t
GvzR50Wx5jt5jmLNc4YXa/7iB6vKffRc7qPL++M+vgCcNVAX
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Opacity[0.2]], 
                    GraphicsGroup[{
                    
                    Polygon[{{3, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                    30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 
                    4}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], 
                    
                    Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], 
                    
                    Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, {}}}], {{}, {}}}, {
               DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
                DisplayFunction :> Identity, 
                Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {None, None}, 
                GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> Large, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0437\:043e\:043d\:0435 \:0441 \:043f\
\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435\:043c", 16, Bold,
                   FontFamily -> "Cambria Math", 
                  GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 5.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.02], 
                   Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
              "\:0412\:0440\:0435\:043c\:044f", 
               "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
            Framed[
             Labeled[
              Graphics[{{}, 
                GraphicsComplex[CompressedData["
1:eJztkjsKAkEQBRsjQwMDAwMVERER1/9/W9cT7BEEY68wR/YIKtLCq9xsB5ah
6Kn3Nuju7VHea2ZWvr/P/T3PXG9z5Tq4AW66ei1Xr+3qdVy9Hrw+vAG8IeYj
+GPMJ+iZIjdDzgw5c/AC75foWaFnjZ4NcrfI2eHdHrkHeEfwCb05fNd5Cg7/
rJyC478uyik4egvlBLYr+Ld3pvM41X5qTrWfwn/czxdj31QD
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0, 1, 0], 
                    Opacity[0.2]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 41, 42, 40, 39, 38, 37, 36, 35, 34, 33, 32, 
                    31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 
                    17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], 
                    
                    Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], 
                    
                    Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {}}, {{
                    Directive[
                    PointSize[
                    Rational[7, 360]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, {}}}], {{}, {}}}, {
               DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
                DisplayFunction :> Identity, 
                Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {None, None}, 
                GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> Large, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:0432 \:0434\:0432\:0443\:0445\:043f\:043e\
\:043b\:043e\:0441\:043d\:043e\:0439 \:0437\:043e\:043d\:0435", 16, Bold, 
                  FontFamily -> "Cambria Math", 
                  GrayLevel[0]], PlotRange -> {{0., 40.}, {0, 30.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.02], 
                   Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
              "\:0412\:0440\:0435\:043c\:044f", 
               "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]]}, ""}, 
          Dynamic[Button[
            Style[
            "\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:0438 \:0441 \
\:043d\:043e\:0432\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", 16, FontFamily -> "Cambria"], 
            TwoLaneModelPackage`Private`cars$$ = 
             TwoLaneModelPackage`carInitialization[
              TwoLaneModelPackage`Private`carsCount$$, 
               TwoLaneModelPackage`Private`maxVelocity$$, 2, 
               TwoLaneModelPackage`Private`coefficentOneTime$$, 
               TwoLaneModelPackage`Private`W$$]; 
            TwoLaneModelPackage`Private`obstacleCars$$ = 
             TwoLaneModelPackage`addObstacle[
              TwoLaneModelPackage`Private`cars$$, {
               TwoLaneModelPackage`Private`obstacleStart$$, 
                TwoLaneModelPackage`Private`obstacleFinish$$}]; 
            TwoLaneModelPackage`Private`dataZones$$ = 
             Map[TwoLaneModelPackage`dataAnalysis[
               TwoLaneModelPackage`Private`obstacleCars$$, 
                TwoLaneModelPackage`Private`maxVelocity$$, 
                TwoLaneModelPackage`Private`pBreak$$, 
                TwoLaneModelPackage`Private`iterationLimit$$, 
                TwoLaneModelPackage`Private`coefficentW$$, 
                TwoLaneModelPackage`Private`W$$, #]& , 
               TwoLaneModelPackage`Private`zoneNamesList$$]; 
            TwoLaneModelPackage`Private`plots$$ = 
             MapThread[
              TwoLaneModelPackage`densityZonesPlot, {
               TwoLaneModelPackage`Private`dataZones$$, 
                TwoLaneModelPackage`Private`labelNamesList$$, 
                TwoLaneModelPackage`Private`plotColorsList$$}]; 
            TwoLaneModelPackage`Private`meanVelocityZones$$ = 
             Map[Last, TwoLaneModelPackage`Private`dataZones$$]]& ]}}, 
       "Options" :> {
        ControlPlacement -> Right, AppearanceElements -> None, Paneled -> 
         False, Alignment -> Center, LabelStyle -> 
         Directive[FontSize -> 16, FontFamily -> "Cambria"], ContinuousAction -> 
         False}, "DefaultOptions" :> {}],
      ImageSizeCache->{1265., {293., 302.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7997600351958876`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"21fd3de9-156b-4272-a9e5-5b4ac3a134cb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:041f\:043b\:0430\:0442\:0444\:043e\:0440\:043c\:0430 \:0434\:043b\:044f \
\:0430\:043d\:0430\:043b\:0438\:0437\:0430 \:043f\:043b\:043e\:0442\:043d\
\:043e\:0441\:0442\:0438 \:043d\:0430 \:0440\:0430\:0437\:043d\:044b\:0445 \
\:043f\:043e\:043b\:043e\:0441\:0430\:0445 \:0430\:0432\:0442\:043e\:0441\
\:0442\:0440\:0430\:0434\:044b"
}], "Subsection",
 CellChangeTimes->{{3.799761281695166*^9, 3.7997612893549924`*^9}, {
  3.799761463999281*^9, 
  3.799761483702754*^9}},ExpressionUUID->"71e8d94c-a4bf-497b-94e4-\
3fec6cf693c6"],

Cell[CellGroupData[{

Cell[BoxData["lanesInteractiveAnalysis"], "Input",
 CellChangeTimes->{{3.7997612917194557`*^9, 3.7997612954160604`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"658635c7-bb5f-4977-9cea-a52a662e3256"],

Cell[BoxData[
 DynamicModuleBox[{TwoLaneModelPackage`Private`cars$$ = Association[
  1 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 1, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.6760281287017469, 0.9506221343870667, 0.34690408240813886`]], 
   2 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 2, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.5395654228717632, 0.14464436251114487`, 0.6944019488263675]], 
   3 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 3, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.16442457377958308`, 0.7060268175696955, 0.5362374280835838]], 
   4 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.8558753985702039, 0.8467201292032795, 0.8523106460275018]], 5 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.7600078763459528, 0.187199442784725, 0.7807500084386363]], 6 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 6, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.3371303695712502, 0.4106782910490485, 0.5847276816443114]], 7 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.701020357351616, 0.9362914215813907, 0.44471915756982683`]], 
   8 -> Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 8, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.1290300965609119, 0.27641308720903823`, 0.3647063741570531]], 
   9 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.6975780911971825, 0.9450510952396249, 0.9034510036132808]], 
   10 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 10, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.0965235113663041, 0.24721073336051824`, 
       0.21850593254393824`]], 11 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 11, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.12444784069332204`, 0.4357517690960129, 0.9981834601704431]], 
   12 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.5665251535962632, 0.05558801917760969, 0.6696982981240036]], 
   13 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.7421816966625974, 0.18163210360005433`, 0.7211492178443515]], 
   14 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 14, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.1064931820506454, 0.7391986648526683, 0.5806236586085094]], 
   15 -> Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.22781004705470176`, 0.49473640781847394`, 
       0.8391329135793066]], 16 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 16, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.8077482105431868, 0.4525344632182937, 0.5912111966903355]], 
   17 -> Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 17, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.5947912003335674, 0.6789576177708567, 0.35986992159898645`]], 
   18 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 18, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.42089196157052555`, 0.4720901310387524, 0.05805731167498385]],
    19 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 19, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.34805246031869275`, 0.34007688816465653`, 
       0.41484095987281466`]], 20 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 20, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.9427382950264815, 0.6070417331594247, 0.10832930048254319`]], 
   21 -> Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 21, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.9609289651815118, 0.09450239316026776, 0.4387196964000324]], 
   22 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 22, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.19383760834398256`, 0.36699911416612774`, 
       0.013062608418174193`]], 23 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 23, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.1818425836193338, 0.2945359081080716, 0.8475119144235901]], 
   24 -> Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 25, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.14120283110135645`, 0.19576166636117454`, 0.801612504254976]],
    25 -> Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 25, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.7556342595296011, 0.006806539440760817, 0.8277286582055507]], 
   26 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 26, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.20544581446440402`, 0.8449922995574022, 0.7883066718396279]], 
   27 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 27, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.9124743251050587, 0.035439873830994006`, 
       0.03518018379175447]], 28 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 28, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.42224966020166743`, 0.019853340735601632`, 
       0.767515096740903]], 29 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 30, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.04794066480838044, 0.7371220179735265, 0.27757853880273453`]],
    30 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 30, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.6518009713582968, 0.19850978444468415`, 0.9295150230848324]]],
   TwoLaneModelPackage`Private`plot$$ = Framed[
   Labeled[
    Legended[
     Graphics[{{}, 
       GraphicsComplex[CompressedData["
1:eJztlD0KwkAQhRcryxQWFhYaREQkJMb4r1l/TuARBGuvkKt4Q4+gkjxhP1iw
EyEDYfj2zWR24TG9y+18bRhj7q/vnct45MYN6543rXseWPe8Bb0N7qCvi/4Q
9X3wAPVD8Ag8xr0izI9Rn2DepMp6f4r6KThD/wz9c+gL6EvwCvXrKus9G/AW
vAPnVdb7rfv/Qqz5e+llFGBzgA42R+hgcwJr7seHuE8THIC/9Z9C/lN/iHqf
/1Q/BI/A8p8igh6DE7D8p/kpdPlPkUH3+U/s85/m+fyn2IC34B04B1uXC/DP
/Ofjeh+Wud6HpV7vQ7e+3ocu/+8+fAJDDpr2
        "], {{{}, {
           EdgeForm[], 
           Directive[
            RGBColor[0, 0, 1], 
            Opacity[0.2]], 
           GraphicsGroup[{
             
             Polygon[{{1, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 
              21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 
              4, 3, 2}}]}]}, {}, {
           EdgeForm[], 
           Directive[
            RGBColor[1, 0, 0], 
            Opacity[0.2]], 
           GraphicsGroup[{
             Polygon[{{54, 60, 59, 58, 57, 56, 55}}], 
             
             Polygon[{{60, 67, 66, 65, 64, 63, 62, 61}, {47, 54, 53, 52, 51, 
              50, 49, 48}, {41, 81, 47, 46, 45, 44, 43, 
              42}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           
           Line[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
            56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 
            72, 73, 74, 75, 76, 77, 78, 79, 80}]}}, {{
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, {
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}}, {{
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           
           Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40}]}, {
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           
           Point[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
            56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 
            72, 73, 74, 75, 76, 77, 78, 79, 80}]}, {}, {}, {}}, {{
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]]}, {
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, {}, {}, {}}}], {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0.18749999999999997`, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, 
       Method -> {
        "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotLabel -> 
       Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \:043c\
\:0430\:0448\:0438\:043d \:043d\:0430 \:043b\:0435\:0432\:043e\:0439 \:0438 \
\:043f\:0440\:0430\:0432\:043e\:0439 \:043f\:043e\:043b\:043e\:0441\:0435 \
\:0434\:043e \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\:0438\
\:044f", 16, Bold, FontFamily -> "Cambria Math", 
         GrayLevel[0]], PlotRange -> {{0.18749999999999997`, 40.}, {0, 5.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Placed[
      LineLegend[{
        Directive[
         PointSize[
          Rational[1, 60]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[
          Rational[1, 60]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {
       "\:041b\:0435\:0432\:0430\:044f \:043f\:043e\:043b\:043e\:0441\:0430", 
        "\:041f\:0440\:0430\:0432\:0430\:044f \:043f\:043e\:043b\:043e\:0441\
\:0430"}, LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> "Column"], 
      After, Identity]], {
    "\:0412\:0440\:0435\:043c\:044f", 
     "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
    Bottom, Left}, RotateLabel -> True]], 
  TwoLaneModelPackage`Private`obstacleCars$$ = Association[
  0 -> Association[
    "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, "Position" -> {15, 30}, "W" -> 
     0, "Color" -> RGBColor[1, 0, 0]], 1 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 1, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.6760281287017469, 0.9506221343870667, 0.34690408240813886`]], 
   2 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 2, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.5395654228717632, 0.14464436251114487`, 0.6944019488263675]], 
   3 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 3, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.16442457377958308`, 0.7060268175696955, 0.5362374280835838]], 
   4 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 4, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.8558753985702039, 0.8467201292032795, 0.8523106460275018]], 5 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 5, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.7600078763459528, 0.187199442784725, 0.7807500084386363]], 6 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 6, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.3371303695712502, 0.4106782910490485, 0.5847276816443114]], 7 -> 
   Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 7, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.701020357351616, 0.9362914215813907, 0.44471915756982683`]], 
   8 -> Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 8, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.1290300965609119, 0.27641308720903823`, 0.3647063741570531]], 
   9 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 9, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.6975780911971825, 0.9450510952396249, 0.9034510036132808]], 
   10 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 10, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.0965235113663041, 0.24721073336051824`, 
       0.21850593254393824`]], 11 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 11, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.12444784069332204`, 0.4357517690960129, 0.9981834601704431]], 
   12 -> Association[
    "Velocity" -> 1, "Lane" -> 0, "Time" -> 12, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.5665251535962632, 0.05558801917760969, 0.6696982981240036]], 
   13 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 13, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.7421816966625974, 0.18163210360005433`, 0.7211492178443515]], 
   14 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 14, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.1064931820506454, 0.7391986648526683, 0.5806236586085094]], 
   15 -> Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 15, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.22781004705470176`, 0.49473640781847394`, 
       0.8391329135793066]], 16 -> 
   Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 16, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.8077482105431868, 0.4525344632182937, 0.5912111966903355]], 
   17 -> Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 17, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.5947912003335674, 0.6789576177708567, 0.35986992159898645`]], 
   18 -> Association[
    "Velocity" -> 5, "Lane" -> 1, "Time" -> 18, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.42089196157052555`, 0.4720901310387524, 0.05805731167498385]],
    19 -> Association[
    "Velocity" -> 5, "Lane" -> 0, "Time" -> 19, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.34805246031869275`, 0.34007688816465653`, 
       0.41484095987281466`]], 20 -> 
   Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 20, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.9427382950264815, 0.6070417331594247, 0.10832930048254319`]], 
   21 -> Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 21, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.9609289651815118, 0.09450239316026776, 0.4387196964000324]], 
   22 -> Association[
    "Velocity" -> 4, "Lane" -> 1, "Time" -> 22, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.19383760834398256`, 0.36699911416612774`, 
       0.013062608418174193`]], 23 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 1, "Time" -> 23, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.1818425836193338, 0.2945359081080716, 0.8475119144235901]], 
   24 -> Association[
    "Velocity" -> 3, "Lane" -> 1, "Time" -> 25, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.14120283110135645`, 0.19576166636117454`, 0.801612504254976]],
    25 -> Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 25, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.7556342595296011, 0.006806539440760817, 0.8277286582055507]], 
   26 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 26, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.20544581446440402`, 0.8449922995574022, 0.7883066718396279]], 
   27 -> Association[
    "Velocity" -> 4, "Lane" -> 0, "Time" -> 27, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.9124743251050587, 0.035439873830994006`, 
       0.03518018379175447]], 28 -> 
   Association[
    "Velocity" -> 2, "Lane" -> 0, "Time" -> 28, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.42224966020166743`, 0.019853340735601632`, 
       0.767515096740903]], 29 -> 
   Association[
    "Velocity" -> 3, "Lane" -> 0, "Time" -> 30, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.04794066480838044, 0.7371220179735265, 0.27757853880273453`]],
    30 -> Association[
    "Velocity" -> 1, "Lane" -> 1, "Time" -> 30, "Position" -> 0, "W" -> 
     0.41000000000000003`, "Color" -> 
     RGBColor[0.6518009713582968, 0.19850978444468415`, 0.9295150230848324]]],
   TwoLaneModelPackage`Private`lanePoints$$ = {{0, 1, 2, 3, 2, 2, 4, 3, 2, 2, 
  3, 3, 3, 5, 4, 3, 2, 1, 3, 3, 2, 1, 2, 1, 1, 2, 5, 5, 5, 5, 4, 2, 1, 0, 0, 
  0, 0, 0, 0, 0}, {1, 1, 1, 1, 2, 2, 0, 1, 2, 2, 1, 1, 1, 0, 1, 1, 1, 2, 1, 0,
   1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{TwoLaneModelPackage`Private`but$$ = Framed[
      Labeled[
       Legended[
        Graphics[{{}, 
          GraphicsComplex[CompressedData["
1:eJzt1D1qw0AQhuElVUoVKly4UEQwxhgh/0n+1zrxCXKEQOpcYa+SG+YIscl8
gnmb1AEJxPDwjVcra9in98+3j4cQwtftvtff67vzNUTvx+hrFn1fjnwEj9Ff
IC+x7jM8wXOmyGfI59hHhf4a/Qt4id+v4LVVvdcGbqyWVlureu8t+ndYf4/9
HJAf4RN8hjusF71TRP/FO8na74tVe58k6/99tWrfN8n6/lfZrn7ugu/j/OnK
4BwewWO4gEtY86fnT5BPkc+Qz+EKrmHNn9ZbIl/Ba3gDN3ALb+EdvIcP8BE+
wWe4g6N3gvv5Uw7386cc7udPOfzn/A3nofdwHjoP5yHy4Tz0/r/n4Q94enr6

           "], {{{}, {
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.2]], 
              GraphicsGroup[{
                
                Polygon[{{1, 81, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 
                 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 
                 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}}]}]}, {}, {
              EdgeForm[], 
              Directive[
               RGBColor[1, 0, 0], 
               Opacity[0.2]], 
              GraphicsGroup[{
                
                Polygon[{{56, 58, 57}, {51, 53, 52}, {49, 51, 50}, {41, 43, 
                 42}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
               33, 34, 35, 36, 37, 38, 39, 40}]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              Line[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
               55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
                71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}}, {{
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]]}, {
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]]}}, {{
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              
              Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
               17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
                33, 34, 35, 36, 37, 38, 39, 40}]}, {
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              
              Point[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
               55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
                71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}, {}, {}, {}}, {{
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]]}, {
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]]}, {}, {}, {}}}], {{}, {}}}, {
         DisplayFunction -> Identity, DisplayFunction -> Identity, 
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0.18749999999999997`, 0}, 
          DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:043d\:0430 \:043b\:0435\:0432\:043e\:0439 \
\:0438 \:043f\:0440\:0430\:0432\:043e\:0439 \:043f\:043e\:043b\:043e\:0441\
\:0435 \:0434\:043e \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\
\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
            GrayLevel[0]], 
          PlotRange -> {{0.18749999999999997`, 40.}, {0, 9.}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         LineLegend[{
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           Directive[
            PointSize[
             Rational[1, 60]], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}, {
          "\:041b\:0435\:0432\:0430\:044f \
\:043f\:043e\:043b\:043e\:0441\:0430", 
           "\:041f\:0440\:0430\:0432\:0430\:044f \:043f\:043e\:043b\:043e\
\:0441\:0430"}, LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
          Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> "Column"],
          After, Identity]], {
       "\:0412\:0440\:0435\:043c\:044f", 
        "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, {
       Bottom, Left}, RotateLabel -> True]], 
     TwoLaneModelPackage`Private`carsCount$$ = 30, 
     TwoLaneModelPackage`Private`coefficentOneTime$$ = 0.4, 
     TwoLaneModelPackage`Private`coefficentW$$ = 3, 
     TwoLaneModelPackage`Private`iterationLimit$$ = 40, 
     TwoLaneModelPackage`Private`maxVelocity$$ = 5, 
     TwoLaneModelPackage`Private`obstacleFinish$$ = 30, 
     TwoLaneModelPackage`Private`obstacleStart$$ = 15, 
     TwoLaneModelPackage`Private`pBreak$$ = Rational[1, 5], 
     TwoLaneModelPackage`Private`W$$ = 0.41000000000000003`, Typeset`show$$ = 
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[
        Style[
        "\:041f\:0430\:043d\:0435\:043b\:044c \:0443\:043f\:0440\:0430\:0432\
\:043b\:0435\:043d\:0438\:044f:", Bold, FontSize -> 24]], 
       Manipulate`Dump`ThisIsNotAControl}, {{
        Hold[TwoLaneModelPackage`Private`carsCount$$], 30, 
        "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, 
       30}, {{
        Hold[TwoLaneModelPackage`Private`iterationLimit$$], 40, 
        "\:041a\:043e\:043b-\:0432\:043e \:0438\:0442\:0435\:0440\:0430\:0446\
\:0438\:0439"}, 40}, {{
        Hold[TwoLaneModelPackage`Private`maxVelocity$$], 5, 
        "\:041c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:0430\
\:044f \:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c"}, 5}, {{
        Hold[TwoLaneModelPackage`Private`pBreak$$], 
        Rational[1, 5], 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
\:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0433\:043e \:0442\:043e\
\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:044f"}, 0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`W$$], 0.8, 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
W"}, 0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`coefficentW$$], 3, 
        "\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442 \
\:0434\:043b\:044f \:0432\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\
\:0442\:0438 W"}, 3}, {{
        Hold[TwoLaneModelPackage`Private`coefficentOneTime$$], 0.4, 
        "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c \
\:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:043e\:0432\:0430\:0442\:044c\
\:0441\:044f \:0432 \:043e\:0434\:043d\:043e \:0432\:0440\:0435\:043c\:044f"},
        0.1, 1}, {{
        Hold[TwoLaneModelPackage`Private`obstacleStart$$], 15, 
        "\:041d\:0430\:0447\:0430\:043b\:044c\:043d\:0430\:044f \:043f\:043e\
\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 1, 24, 1}, {{
        Hold[TwoLaneModelPackage`Private`obstacleFinish$$], 30, 
        "\:041a\:043e\:043d\:0435\:0447\:043d\:0430\:044f \:043f\:043e\:0437\
\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\
\:0432\:0438\:044f"}, 25, 60, 1}, {{
        Hold[TwoLaneModelPackage`Private`but$$], 
        Framed[
         Labeled[
          Legended[
           Graphics[{{}, 
             GraphicsComplex[CompressedData["
1:eJzt1D1qw0AQhuElVUoVKly4UEQwxhgh/0n+1zrxCXKEQOpcYa+SG+YIscl8
gnmb1AEJxPDwjVcra9in98+3j4cQwtftvtff67vzNUTvx+hrFn1fjnwEj9Ff
IC+x7jM8wXOmyGfI59hHhf4a/Qt4id+v4LVVvdcGbqyWVlureu8t+ndYf4/9
HJAf4RN8hjusF71TRP/FO8na74tVe58k6/99tWrfN8n6/lfZrn7ugu/j/OnK
4BwewWO4gEtY86fnT5BPkc+Qz+EKrmHNn9ZbIl/Ba3gDN3ALb+EdvIcP8BE+
wWe4g6N3gvv5Uw7386cc7udPOfzn/A3nofdwHjoP5yHy4Tz0/r/n4Q94enr6

              "], {{{}, {
                 EdgeForm[], 
                 Directive[
                  RGBColor[0, 0, 1], 
                  Opacity[0.2]], 
                 GraphicsGroup[{
                   
                   Polygon[{{1, 81, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                    30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {
                 EdgeForm[], 
                 Directive[
                  RGBColor[1, 0, 0], 
                  Opacity[0.2]], 
                 GraphicsGroup[{
                   
                   Polygon[{{56, 58, 57}, {51, 53, 52}, {49, 51, 50}, {41, 43,
                     42}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 
                 Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                  32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {
                 Hue[0.9060679774997897, 0.6, 0.6], 
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 
                 Line[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                   55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                   70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}}, {{
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]]}, {
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]]}}, {{
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 
                 Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                   17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
                   32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], 
                 
                 Point[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
                  54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                  69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
                  80}]}, {}, {}, {}}, {{
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]]}, {
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]]}, {}, {}, {}}}], {{}, {}}}, {
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
             AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
             AxesLabel -> {None, None}, 
             AxesOrigin -> {0.18749999999999997`, 0}, DisplayFunction :> 
             Identity, Frame -> {{False, False}, {False, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Large, 
             Method -> {
              "OptimizePlotMarkers" -> True, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
             Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:043d\:0430 \:043b\:0435\:0432\:043e\:0439 \
\:0438 \:043f\:0440\:0430\:0432\:043e\:0439 \:043f\:043e\:043b\:043e\:0441\
\:0435 \:0434\:043e \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\
\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
               GrayLevel[0]], 
             PlotRange -> {{0.18749999999999997`, 40.}, {0, 9.}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
           Placed[
            LineLegend[{
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              Directive[
               PointSize[
                Rational[1, 60]], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]]}, {
             "\:041b\:0435\:0432\:0430\:044f \:043f\:043e\:043b\:043e\:0441\
\:0430", "\:041f\:0440\:0430\:0432\:0430\:044f \:043f\:043e\:043b\:043e\:0441\
\:0430"}, LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
             Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
             "Column"], After, Identity]], {
          "\:0412\:0440\:0435\:043c\:044f", 
           "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, \
{Bottom, Left}, RotateLabel -> True]], ""}, 
       Dynamic[Button[
         Style[
         "\:0413\:0440\:0430\:0444\:0438\:043a \:0441 \
\:043d\:043e\:0432\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\
\:0438", 16, FontFamily -> "Cambria"], 
         TwoLaneModelPackage`Private`cars$$ = 
          TwoLaneModelPackage`carInitialization[
           TwoLaneModelPackage`Private`carsCount$$, 
            TwoLaneModelPackage`Private`maxVelocity$$, 2, 
            TwoLaneModelPackage`Private`coefficentOneTime$$, 
            TwoLaneModelPackage`Private`W$$]; 
         TwoLaneModelPackage`Private`obstacleCars$$ = 
          TwoLaneModelPackage`addObstacle[
           TwoLaneModelPackage`Private`cars$$, {
            TwoLaneModelPackage`Private`obstacleStart$$, 
             TwoLaneModelPackage`Private`obstacleFinish$$}]; 
         TwoLaneModelPackage`Private`lanePoints$$ = 
          TwoLaneModelPackage`lanesAnalysis[
           TwoLaneModelPackage`Private`obstacleCars$$, 
            TwoLaneModelPackage`Private`maxVelocity$$, 
            TwoLaneModelPackage`Private`pBreak$$, 
            TwoLaneModelPackage`Private`iterationLimit$$, 
            TwoLaneModelPackage`Private`coefficentW$$, 
            TwoLaneModelPackage`Private`W$$]; 
         TwoLaneModelPackage`Private`plot$$ = 
          TwoLaneModelPackage`lanesAnalysisPlot[
           TwoLaneModelPackage`Private`lanePoints$$]]& ]}}, Typeset`size$$ = {
     796., {240., 249.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, 
     TwoLaneModelPackage`Private`pBreak$57305$$ = 0, 
     TwoLaneModelPackage`Private`W$57306$$ = 0, 
     TwoLaneModelPackage`Private`coefficentOneTime$57307$$ = 0, 
     TwoLaneModelPackage`Private`obstacleStart$57308$$ = 0, 
     TwoLaneModelPackage`Private`obstacleFinish$57309$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {TwoLaneModelPackage`Private`but$$ = Framed[
           Labeled[
            Legended[
             Graphics[{{}, 
               GraphicsComplex[CompressedData["
1:eJzt1D1qw0AQhuElVUoVKly4UEQwxhgh/0n+1zrxCXKEQOpcYa+SG+YIscl8
gnmb1AEJxPDwjVcra9in98+3j4cQwtftvtff67vzNUTvx+hrFn1fjnwEj9Ff
IC+x7jM8wXOmyGfI59hHhf4a/Qt4id+v4LVVvdcGbqyWVlureu8t+ndYf4/9
HJAf4RN8hjusF71TRP/FO8na74tVe58k6/99tWrfN8n6/lfZrn7ugu/j/OnK
4BwewWO4gEtY86fnT5BPkc+Qz+EKrmHNn9ZbIl/Ba3gDN3ALb+EdvIcP8BE+
wWe4g6N3gvv5Uw7386cc7udPOfzn/A3nofdwHjoP5yHy4Tz0/r/n4Q94enr6

                "], {{{}, {
                   EdgeForm[], 
                   Directive[
                    RGBColor[0, 0, 1], 
                    Opacity[0.2]], 
                   GraphicsGroup[{
                    
                    Polygon[{{1, 81, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                    30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {
                   EdgeForm[], 
                   Directive[
                    RGBColor[1, 0, 0], 
                    Opacity[0.2]], 
                   GraphicsGroup[{
                    
                    Polygon[{{56, 58, 57}, {51, 53, 52}, {49, 51, 50}, {41, 
                    43, 42}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
                   Hue[0.67, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                   
                   Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {
                   Hue[0.9060679774997897, 0.6, 0.6], 
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                   
                   Line[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
                    54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
                    68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}}, {{
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, {
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}, {{
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                   
                   Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                   
                   Point[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
                    54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
                    68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
                    80}]}, {}, {}, {}}, {{
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, {
                   Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, {}, {}, {}}}], {{}, {}}}, {
              DisplayFunction -> Identity, DisplayFunction -> Identity, 
               AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
               AxesLabel -> {None, None}, 
               AxesOrigin -> {0.18749999999999997`, 0}, DisplayFunction :> 
               Identity, Frame -> {{False, False}, {False, False}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}},
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> Large, 
               Method -> {
                "OptimizePlotMarkers" -> True, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
               Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:043d\:0430 \:043b\:0435\:0432\:043e\:0439 \
\:0438 \:043f\:0440\:0430\:0432\:043e\:0439 \:043f\:043e\:043b\:043e\:0441\
\:0435 \:0434\:043e \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\
\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
                 GrayLevel[0]], 
               PlotRange -> {{0.18749999999999997`, 40.}, {0, 9.}}, 
               PlotRangeClipping -> True, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
             Placed[
              LineLegend[{
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 0, 1]], 
                Directive[
                 PointSize[
                  Rational[1, 60]], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}, {
               "\:041b\:0435\:0432\:0430\:044f \:043f\:043e\:043b\:043e\:0441\
\:0430", "\:041f\:0440\:0430\:0432\:0430\:044f \:043f\:043e\:043b\:043e\:0441\
\:0430"}, LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
               Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
               "Column"], After, Identity]], {
            "\:0412\:0440\:0435\:043c\:044f", 
             "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], 
         TwoLaneModelPackage`Private`carsCount$$ = 30, 
         TwoLaneModelPackage`Private`coefficentOneTime$$ = 0.4, 
         TwoLaneModelPackage`Private`coefficentW$$ = 3, 
         TwoLaneModelPackage`Private`iterationLimit$$ = 40, 
         TwoLaneModelPackage`Private`maxVelocity$$ = 5, 
         TwoLaneModelPackage`Private`obstacleFinish$$ = 30, 
         TwoLaneModelPackage`Private`obstacleStart$$ = 15, 
         TwoLaneModelPackage`Private`pBreak$$ = Rational[1, 5], 
         TwoLaneModelPackage`Private`W$$ = 0.8}, "ControllerVariables" :> {
         Hold[
         TwoLaneModelPackage`Private`pBreak$$, 
          TwoLaneModelPackage`Private`pBreak$57305$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`W$$, 
          TwoLaneModelPackage`Private`W$57306$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`coefficentOneTime$$, 
          TwoLaneModelPackage`Private`coefficentOneTime$57307$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`obstacleStart$$, 
          TwoLaneModelPackage`Private`obstacleStart$57308$$, 0], 
         Hold[
         TwoLaneModelPackage`Private`obstacleFinish$$, 
          TwoLaneModelPackage`Private`obstacleFinish$57309$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       TwoLaneModelPackage`Private`plot$$, "Specifications" :> {
         Style[
         "\:041f\:0430\:043d\:0435\:043b\:044c \:0443\:043f\:0440\:0430\:0432\
\:043b\:0435\:043d\:0438\:044f:", Bold, FontSize -> 24], 
         Delimiter, {{
          TwoLaneModelPackage`Private`carsCount$$, 30, 
           "\:041a\:043e\:043b-\:0432\:043e \:043c\:0430\:0448\:0438\:043d"}, 
          30}, {{TwoLaneModelPackage`Private`iterationLimit$$, 40, 
           "\:041a\:043e\:043b-\:0432\:043e \:0438\:0442\:0435\:0440\:0430\
\:0446\:0438\:0439"}, 40}, {{
          TwoLaneModelPackage`Private`maxVelocity$$, 5, 
           
           "\:041c\:0430\:043a\:0441\:0438\:043c\:0430\:043b\:044c\:043d\:0430\
\:044f \:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c"}, 5}, {{
          TwoLaneModelPackage`Private`pBreak$$, 
           Rational[1, 5], 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 \:0441\:043b\:0443\:0447\:0430\:0439\:043d\:043e\:0433\:043e \:0442\:043e\
\:0440\:043c\:043e\:0436\:0435\:043d\:0438\:044f"}, 0.1, 1, 
          AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`W$$, 0.8, 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 W"}, 0.1, 1, AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`coefficentW$$, 3, 
           "\:041a\:043e\:044d\:0444\:0444\:0438\:0446\:0438\:0435\:043d\:0442\
 \:0434\:043b\:044f \:0432\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\
\:0442\:0438 W"}, 3}, {{
          TwoLaneModelPackage`Private`coefficentOneTime$$, 0.4, 
           "\:0412\:0435\:0440\:043e\:044f\:0442\:043d\:043e\:0441\:0442\:044c\
 \:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:043e\:0432\:0430\:0442\
\:044c\:0441\:044f \:0432 \:043e\:0434\:043d\:043e \:0432\:0440\:0435\:043c\
\:044f"}, 0.1, 1, AppearanceElements -> All}, 
         Delimiter, {{
          TwoLaneModelPackage`Private`obstacleStart$$, 15, 
           "\:041d\:0430\:0447\:0430\:043b\:044c\:043d\:0430\:044f \:043f\
\:043e\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\
\:0441\:0442\:0432\:0438\:044f"}, 1, 24, 1, AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`obstacleFinish$$, 30, 
           "\:041a\:043e\:043d\:0435\:0447\:043d\:0430\:044f \:043f\:043e\
\:0437\:0438\:0446\:0438\:044f \:043f\:0440\:0435\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:044f"}, 25, 60, 1, AppearanceElements -> All}, {{
          TwoLaneModelPackage`Private`but$$, 
           Framed[
            Labeled[
             Legended[
              Graphics[{{}, 
                GraphicsComplex[CompressedData["
1:eJzt1D1qw0AQhuElVUoVKly4UEQwxhgh/0n+1zrxCXKEQOpcYa+SG+YIscl8
gnmb1AEJxPDwjVcra9in98+3j4cQwtftvtff67vzNUTvx+hrFn1fjnwEj9Ff
IC+x7jM8wXOmyGfI59hHhf4a/Qt4id+v4LVVvdcGbqyWVlureu8t+ndYf4/9
HJAf4RN8hjusF71TRP/FO8na74tVe58k6/99tWrfN8n6/lfZrn7ugu/j/OnK
4BwewWO4gEtY86fnT5BPkc+Qz+EKrmHNn9ZbIl/Ba3gDN3ALb+EdvIcP8BE+
wWe4g6N3gvv5Uw7386cc7udPOfzn/A3nofdwHjoP5yHy4Tz0/r/n4Q94enr6

                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0, 0, 1], 
                    Opacity[0.2]], 
                    GraphicsGroup[{
                    
                    Polygon[{{1, 81, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 
                    30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
                    2}}]}]}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[1, 0, 0], 
                    Opacity[0.2]], 
                    GraphicsGroup[{
                    
                    Polygon[{{56, 58, 57}, {51, 53, 52}, {49, 51, 50}, {41, 
                    43, 42}}]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    
                    Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    
                    Line[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
                    54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
                    68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}}, {{
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, {
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}}, {{
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    
                    Point[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
                    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40}]}, {
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    
                    Point[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
                     54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
                    68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
                    80}]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]]}, {
                    Directive[
                    PointSize[
                    Rational[1, 60]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]]}, {}, {}, {}}}], {{}, {}}}, {
               DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                AxesLabel -> {None, None}, 
                AxesOrigin -> {0.18749999999999997`, 0}, DisplayFunction :> 
                Identity, Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {None, None}, 
                GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> Large, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                Style["\:041f\:043b\:043e\:0442\:043d\:043e\:0441\:0442\:044c \
\:043c\:0430\:0448\:0438\:043d \:043d\:0430 \:043b\:0435\:0432\:043e\:0439 \
\:0438 \:043f\:0440\:0430\:0432\:043e\:0439 \:043f\:043e\:043b\:043e\:0441\
\:0435 \:0434\:043e \:043f\:0440\:0435\:043f\:044f\:0442\:0441\:0442\:0432\
\:0438\:044f", 16, Bold, FontFamily -> "Cambria Math", 
                  GrayLevel[0]], 
                PlotRange -> {{0.18749999999999997`, 40.}, {0, 9.}}, 
                PlotRangeClipping -> True, PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.02], 
                   Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
              Placed[
               LineLegend[{
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], 
                 Directive[
                  PointSize[
                   Rational[1, 60]], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]]}, {
                "\:041b\:0435\:0432\:0430\:044f \
\:043f\:043e\:043b\:043e\:0441\:0430", 
                 "\:041f\:0440\:0430\:0432\:0430\:044f \:043f\:043e\:043b\
\:043e\:0441\:0430"}, 
                LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
                Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
                "Column"], After, Identity]], {
             "\:0412\:0440\:0435\:043c\:044f", 
              "\:041a\:043e\:043b-\:0432\:043e \
\:043c\:0430\:0448\:0438\:043d"}, {Bottom, Left}, RotateLabel -> True]], ""}, 
          Dynamic[Button[
            Style[
            "\:0413\:0440\:0430\:0444\:0438\:043a \:0441 \:043d\:043e\:0432\
\:044b\:043c\:0438 \:0434\:0430\:043d\:043d\:044b\:043c\:0438", 16, 
             FontFamily -> "Cambria"], 
            TwoLaneModelPackage`Private`cars$$ = 
             TwoLaneModelPackage`carInitialization[
              TwoLaneModelPackage`Private`carsCount$$, 
               TwoLaneModelPackage`Private`maxVelocity$$, 2, 
               TwoLaneModelPackage`Private`coefficentOneTime$$, 
               TwoLaneModelPackage`Private`W$$]; 
            TwoLaneModelPackage`Private`obstacleCars$$ = 
             TwoLaneModelPackage`addObstacle[
              TwoLaneModelPackage`Private`cars$$, {
               TwoLaneModelPackage`Private`obstacleStart$$, 
                TwoLaneModelPackage`Private`obstacleFinish$$}]; 
            TwoLaneModelPackage`Private`lanePoints$$ = 
             TwoLaneModelPackage`lanesAnalysis[
              TwoLaneModelPackage`Private`obstacleCars$$, 
               TwoLaneModelPackage`Private`maxVelocity$$, 
               TwoLaneModelPackage`Private`pBreak$$, 
               TwoLaneModelPackage`Private`iterationLimit$$, 
               TwoLaneModelPackage`Private`coefficentW$$, 
               TwoLaneModelPackage`Private`W$$]; 
            TwoLaneModelPackage`Private`plot$$ = 
             TwoLaneModelPackage`lanesAnalysisPlot[
              TwoLaneModelPackage`Private`lanePoints$$]]& ]}}, 
       "Options" :> {
        ControlPlacement -> Right, AppearanceElements -> None, Paneled -> 
         False, Alignment -> Center, LabelStyle -> 
         Directive[FontSize -> 16, FontFamily -> "Cambria"], ContinuousAction -> 
         False}, "DefaultOptions" :> {}],
      ImageSizeCache->{1432., {250., 259.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7997612970270424`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3d84236b-8798-4abd-8cee-572432376831"]
}, Open  ]]
}, Closed]],

Cell["7", "Subsection",
 CellChangeTimes->{3.8000325823899927`*^9, 3.800034332930195*^9},
 TextAlignment->Right,ExpressionUUID->"42998945-52a0-4423-ac8d-84a176261a23"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellChangeTimes->{{3.799759981300598*^9, 3.799759981300598*^9}},
 CellTags->
  "SlideShowHeader",ExpressionUUID->"727c711c-2162-4a1b-ac5d-b1546a2cf4c8"],

Cell[CellGroupData[{

Cell["\:0417\:0430\:043a\:043b\:044e\:0447\:0435\:043d\:0438\:0435", "Section",
 CellChangeTimes->{{3.79942637152822*^9, 
  3.799426384942465*^9}},ExpressionUUID->"2b4693a3-63b5-4b0a-8134-\
32b2945be37d"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " ",
 StyleBox["\:041f\:0430\:043a\:0435\:0442 ",
  FontSize:>Dynamic[
   0.019999999999999997` FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]
}], "Subsection",
 CellChangeTimes->{{3.799503955169571*^9, 3.7995039582716465`*^9}, {
  3.799514295101522*^9, 
  3.799514304456111*^9}},ExpressionUUID->"d04e17b7-fd97-461d-b414-\
d4f6fe9cdc16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.799582922520111*^9, 3.7995829302979546`*^9}, 
   3.7995829939802284`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"a594e276-6810-44c9-b0f7-5224f7dcef72"],

Cell[BoxData[
 RowBox[{"<<", "\"\<TwoLaneModelPackage.m\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.799427078695771*^9, 3.7994270793988914`*^9}, 
   3.7994271857767625`*^9, {3.7995829498963823`*^9, 3.7995829659200077`*^9}, {
   3.7995887932073884`*^9, 3.799588796655488*^9}, {3.7998547506761847`*^9, 
   3.7998547530912495`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4be65b51-72de-4d0a-bec3-cc484c53edd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TwoLaneModelPackage`*"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.799427201579506*^9, {3.7994278340838184`*^9, 3.799427870569029*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e9dc72df-27d6-467c-8e87-b004a48dce8b"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["TwoLaneModelPackage`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {0., 10.}}], " ", 
              StyleBox["TwoLaneModelPackage`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["acceleration", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "acceleration", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["carInitialization", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "carInitialization", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["dataAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "dataAnalysis", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["driving", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "driving", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["lanesAnalysisPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "lanesAnalysisPlot", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["leftLaneCarFront", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "leftLaneCarFront", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["probabilityW", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "probabilityW", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["roadPicture", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "roadPicture", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["addObstacle", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "addObstacle", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["changeLaneToLeft", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "changeLaneToLeft", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["dataZonesAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "dataZonesAnalysis", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["frontCar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "frontCar", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["lanesInteractiveAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "lanesInteractiveAnalysis", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["modelInterations", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "modelInterations", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["probabilityW$", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "probabilityW$", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["selectFirstCarOnLane", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "selectFirstCarOnLane", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["barking", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "barking", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["currentCars", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "currentCars", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["densityZonesPlot", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "densityZonesPlot", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["lanesAnalysis", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "lanesAnalysis", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["leftLaneCarBehind", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "leftLaneCarBehind", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["pictureArray", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "pictureArray", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["randomization", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13", {
                   "randomization", "TwoLaneModelPackage`"}, False},
                 ButtonNote->"TwoLaneModelPackage`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.11875]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.7994272335200977`*^9, {3.7994278491710377`*^9, 3.7994278708933506`*^9}, 
   3.799582968576024*^9, 3.799583008064672*^9, 3.7995847470722075`*^9, {
   3.7995854978644485`*^9, 3.79958551674467*^9}, 3.7995887861522484`*^9, 
   3.799594177951049*^9, 3.799596375962616*^9, 3.7996717625796614`*^9, 
   3.799672100759905*^9, 3.799673848890043*^9, 3.799674607546043*^9, 
   3.7996750691126046`*^9, 3.7996852596273203`*^9, 3.7997592483307877`*^9, 
   3.8000780809913163`*^9, 3.8000814247440553`*^9, 3.800094495177848*^9, 
   3.8001128119281054`*^9, 3.800114678952772*^9, 3.8001184848062162`*^9},
 FontFamily->"Cambria",
 CellLabel->"Out[3]=",ExpressionUUID->"e70fb443-f8a9-41e4-bf7b-9bb887688b57"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"addObstacle[cars,{posStart, posFinish}] - \:0434\
\:043e\:0431\:0430\:0432\:043b\:044f\:0435\:0442 \:043a \:0438\:0441\:0445\
\:043e\:0434\:043d\:043e\:0439 \:0430\:0441\:0441\:043e\:0446\:0438\:0430\
\:0446\:0438\:0438 \:043c\:0430\:0448\:0438\:043d  - cars, \:043f\:0435\:0440\
\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435 \:0441 \:043d\:0430\:0447\
\:0430\:043b\:044c\:043d\:043e\:0439 \:043f\:043e\:0437\:0438\:0446\:0438\
\:0435\:0439 posStart \:0438 \:043a\:043e\:043d\:0435\:0447\:043d\:043e\:0439 \
\:043f\:043e\:0437\:0438\:0446\:0438\:0435\:0439 posFinish.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    RowBox[{"addObstacle", "[", 
                    RowBox[{
                    "TwoLaneModelPackage`Private`cars_Association", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "TwoLaneModelPackage`Private`posStart_Integer", "?", 
                    "Positive"}], ",", 
                    RowBox[{
                    "TwoLaneModelPackage`Private`posFinish_Integer", "?", 
                    "Positive"}]}], "}"}]}], "]"}], "/;", 
                    RowBox[{
                    "TwoLaneModelPackage`Private`posStart", "\[LessEqual]", 
                    "TwoLaneModelPackage`Private`posFinish"}]}], ":=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{"0", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\<\"Velocity\"\>", "\[Rule]", "0"}], ",", 
                    RowBox[{"\<\"Lane\"\>", "\[Rule]", "1"}], ",", 
                    RowBox[{"\<\"Time\"\>", "\[Rule]", "0"}], ",", 
                    RowBox[{"\<\"Position\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "TwoLaneModelPackage`Private`posStart", ",", 
                    "TwoLaneModelPackage`Private`posFinish"}], "}"}]}], ",", 
                    RowBox[{"\<\"W\"\>", "\[Rule]", "0"}], ",", 
                    RowBox[{"\<\"Color\"\>", "\[Rule]", "Red"}]}], "]"}]}], 
                    "]"}], ",", "TwoLaneModelPackage`Private`cars"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TwoLaneModelPackage`addObstacle\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"addObstacle[cars,{posStart, posFinish}] - \:0434\
\:043e\:0431\:0430\:0432\:043b\:044f\:0435\:0442 \:043a \:0438\:0441\:0445\
\:043e\:0434\:043d\:043e\:0439 \:0430\:0441\:0441\:043e\:0446\:0438\:0430\
\:0446\:0438\:0438 \:043c\:0430\:0448\:0438\:043d  - cars, \:043f\:0435\:0440\
\:043f\:044f\:0442\:0441\:0442\:0432\:0438\:0435 \:0441 \:043d\:0430\:0447\
\:0430\:043b\:044c\:043d\:043e\:0439 \:043f\:043e\:0437\:0438\:0446\:0438\
\:0435\:0439 posStart \:0438 \:043a\:043e\:043d\:0435\:0447\:043d\:043e\:0439 \
\:043f\:043e\:0437\:0438\:0446\:0438\:0435\:0439 posFinish.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{8., {2., 6.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{8., {2., 6.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "addObstacle[cars,{posStart, posFinish}] - \:0434\:043e\:0431\:0430\:0432\
\:043b\:044f\:0435\:0442 \:043a \:0438\:0441\:0445\:043e\:0434\:043d\:043e\
\:0439 \:0430\:0441\:0441\:043e\:0446\:0438\:0430\:0446\:0438\:0438 \:043c\
\:0430\:0448\:0438\:043d  - cars, \:043f\:0435\:0440\:043f\:044f\:0442\:0441\
\:0442\:0432\:0438\:0435 \:0441 \:043d\:0430\:0447\:0430\:043b\:044c\:043d\
\:043e\:0439 \:043f\:043e\:0437\:0438\:0446\:0438\:0435\:0439 posStart \:0438 \
\:043a\:043e\:043d\:0435\:0447\:043d\:043e\:0439 \:043f\:043e\:0437\:0438\
\:0446\:0438\:0435\:0439 posFinish.", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, TwoLaneModelPackage`addObstacle, {Condition[
         TwoLaneModelPackage`addObstacle[
          Pattern[TwoLaneModelPackage`Private`cars, 
           Blank[Association]], {
           PatternTest[
            Pattern[TwoLaneModelPackage`Private`posStart, 
             Blank[Integer]], Positive], 
           PatternTest[
            Pattern[TwoLaneModelPackage`Private`posFinish, 
             Blank[Integer]], Positive]}], 
         TwoLaneModelPackage`Private`posStart <= 
         TwoLaneModelPackage`Private`posFinish] :> Join[
         Association[
         0 -> Association[
           "Velocity" -> 0, "Lane" -> 1, "Time" -> 0, 
            "Position" -> {
             TwoLaneModelPackage`Private`posStart, 
              TwoLaneModelPackage`Private`posFinish}, "W" -> 0, "Color" -> 
            Red]], TwoLaneModelPackage`Private`cars]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TwoLaneModelPackage`addObstacle"], False]]], "Print",
 CellTags->
  "Info-d2707fec-2f75-4e1b-9c0d-526594081d13",ExpressionUUID->"ae3356f2-a0f4-\
42c1-b204-186c5d3cb38f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:041f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:044b\:0435 \:0434\:043b\
\:044f \:043f\:0440\:0438\:043c\:0435\:0440\:043e\:0432 "
}], "Subsection",
 CellChangeTimes->{{3.7995039626479435`*^9, 3.799503986933036*^9}, 
   3.799514305153921*^9},ExpressionUUID->"eccc9b91-0585-455f-a29a-\
aa5e132f7e1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"carsDataSample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<Velocity\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<Lane\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<Time\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<Position\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"15", ",", "30"}], "}"}]}], ",", 
        RowBox[{"\"\<W\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<Color\>\"", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
             False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<Velocity\>\"", "\[Rule]", "3"}], ",", 
        RowBox[{"\"\<Lane\>\"", "\[Rule]", "0"}], ",", 
        RowBox[{"\"\<Time\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<Position\>\"", "\[Rule]", "13"}], ",", 
        RowBox[{"\"\<W\>\"", "\[Rule]", "0.8`"}], ",", 
        RowBox[{"\"\<Color\>\"", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.8906958929762998, 0.5051437214797432, 0.6424161122946281], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             
             FrameStyle->RGBColor[
              0.5937972619841999, 0.33676248098649547`, 0.4282774081964188],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               
               RowBox[{
                "0.8906958929762998`", ",", "0.5051437214797432`", ",", 
                 "0.6424161122946281`"}], "]"}], NumberMarks -> False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.8906958929762998, 0.5051437214797432, 0.6424161122946281]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[0.8906958929762998, 0.5051437214797432, 0.6424161122946281],
          Editable->False,
          Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<Velocity\>\"", "\[Rule]", "4"}], ",", 
        RowBox[{"\"\<Lane\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<Time\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<Position\>\"", "\[Rule]", "11"}], ",", 
        RowBox[{"\"\<W\>\"", "\[Rule]", "0.8`"}], ",", 
        RowBox[{"\"\<Color\>\"", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.09801677786861474, 0.8187457131905267, 0.6319659087405958], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->RGBColor[
              0.0653445185790765, 0.5458304754603511, 0.42131060582706387`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               
               RowBox[{
                "0.09801677786861474`", ",", "0.8187457131905267`", ",", 
                 "0.6319659087405958`"}], "]"}], NumberMarks -> False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.09801677786861474, 0.8187457131905267, 0.6319659087405958]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.09801677786861474, 0.8187457131905267, 0.6319659087405958],
          Editable->False,
          Selectable->False]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"3", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\"\<Velocity\>\"", "\[Rule]", "3"}], ",", 
        RowBox[{"\"\<Lane\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<Time\>\"", "\[Rule]", "3"}], ",", 
        RowBox[{"\"\<Position\>\"", "\[Rule]", "9"}], ",", 
        RowBox[{"\"\<W\>\"", "\[Rule]", "0.2`"}], ",", 
        RowBox[{"\"\<Color\>\"", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.019775700775839677`, 0.7220085726897336, 0.8521202048380176],
                RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             
             FrameStyle->RGBColor[
              0.013183800517226452`, 0.48133904845982245`, 0.5680801365586785],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               
               RowBox[{
                "0.019775700775839677`", ",", "0.7220085726897336`", ",", 
                 "0.8521202048380176`"}], "]"}], NumberMarks -> False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.019775700775839677`, 0.7220085726897336, 
                 0.8521202048380176]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.019775700775839677`, 0.7220085726897336, 0.8521202048380176],
          Editable->False,
          Selectable->False]}]}], "\[RightAssociation]"}]}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7995039905683193`*^9, 3.79950403082936*^9}, {
   3.799504177381583*^9, 3.7995042255164204`*^9}, 3.799507024581367*^9, {
   3.7995071216241207`*^9, 3.799507124094962*^9}, {3.7995075176854715`*^9, 
   3.7995075177642603`*^9}, {3.7995079479013615`*^9, 
   3.7995079480778046`*^9}, {3.7995966157672033`*^9, 3.799596641847185*^9}, {
   3.8000781072417526`*^9, 3.8000781288333015`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"abb2cca1-397b-4fd4-aabd-e7c892256df8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[FilledVerySmallSquare]",
  FontSize:>Dynamic[0.015 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]],
 " \:0424\:0443\:043d\:043a\:0446\:0438\:0438 \:0434\:043b\:044f \:043f\:0440\
\:0435\:0437\:0435\:043d\:0442\:0430\:0446\:0438\:0438"
}], "Subsection",
 CellChangeTimes->{{3.799504270065303*^9, 3.7995042783620296`*^9}, 
   3.7995129771966963`*^9, 
   3.799514305808468*^9},ExpressionUUID->"2b30d2ae-946b-4639-8a97-\
7b7657eeaa76"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "showExample", "]"}], "\[IndentingNewLine]", 
 RowBox[{"showExample", ":=", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Baskerville\>\""}]}], "]"}], 
         "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\:0412\:0445\:043e\:0434\:043d\:044b\:0435 \:0434\:0430\:043d\
\:043d\:044b\:0435: \>\"", " ", ",", 
          "\"\<\:0420\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442 \:043f\
\:0440\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f\
: \>\""}], "}"}]}], ")"}], "~", "Riffle", "~", 
      RowBox[{"(", 
       RowBox[{"Dataset", "/@", 
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{"#2", "[", "#1", "]"}]}], "}"}]}], ")"}]}], ",", 
     RowBox[{"Spacer", "[", "20", "]"}]}], "]"}], "&"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7995042846584277`*^9, 3.799504329364457*^9}, {
  3.799504417887809*^9, 3.799504453220872*^9}, {3.799504495127329*^9, 
  3.7995045076650753`*^9}, {3.7995045499143963`*^9, 3.799504607601562*^9}, {
  3.799504719383685*^9, 3.7995047425275865`*^9}, {3.799508327744814*^9, 
  3.7995083662677383`*^9}, {3.799508470687145*^9, 3.7995085146749215`*^9}, {
  3.799508545082692*^9, 3.799508606801794*^9}, {3.7995086635038595`*^9, 
  3.7995086951512604`*^9}, {3.799508854458828*^9, 3.7995089624003134`*^9}, {
  3.7995089986570206`*^9, 3.799509071217614*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"bc301d70-f36e-4e39-8e36-d2922d6c64a5"]
}, Closed]],

Cell["8", "Subsection",
 CellChangeTimes->{{3.800032595899544*^9, 3.8000325976830025`*^9}, 
   3.800034493507332*^9},
 TextAlignment->Right,ExpressionUUID->"703c36b8-a5bb-4fbc-b1a2-0a23793ea741"]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Slideshow Working",
Evaluator->"Local",
WindowSize->{1920, 1007},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
TaggingRules->{
 "PresenterSettings" -> {
   "ShowNavigationBar" -> True, "SlideBreakStyles" -> {"Title"}, 
    "ShowSlideBreaks" -> True, 
    "Theme" -> {
     "ThemeName" -> "Facet", "FontSetName" -> "Garnet", "ColorSetName" -> 
      "Garnet"}, 
    "UserModifications" -> {{
      "Subsection", FontSize :> 
       Dynamic[0.02 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]}}, 
    "WindowSize" -> {1904, 1007}, "WindowMargins" -> {{-8, -8}, {-16, 0}}, 
    "Dialogs" -> {"SlideBreakDefaults" -> 0}, "LastColorUsed" -> Dynamic[
      CurrentValue[{StyleHints, "ColorSet", "Display2"}]]}},
SpellingDictionaries->{"CorrectWords"->{
 "then", "if", "gap", "\[CapitalDelta]v", 
  "\:0428\:0440\:0435\:043a\:0435\:043d\:0431\:0435\:0440\:0433\:0430", 
  "\:0411\:0440\:043e\:043d\:043d\:0438\:043a\:043e\:0432", "\:041f\:041c", 
  "rnd", "\:043e\:0442\:0440\:0438\:0441\:043e\:0432\:043a\:0430", 
  "\:0420\:0430\:043d\:0434\:043e\:043c\:0438\:0437\:0430\:0446\:0438\:044f"}},
Magnification:>0.8 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"PresenterTools"}, "Facet.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], 
    StyleHints -> {
     ParentList, "CodeFont" -> "Consolas", 
      "ColorSet" -> {
       "Display1" -> RGBColor[0.588235, 0.0470588, 0.164706], "Display2" -> 
        RGBColor[0.741176, 0.141176, 0.231373], "Display3" -> 
        RGBColor[1, 0.729412, 0.768627], "Text1" -> GrayLevel[0.317647], 
        "Text2" -> GrayLevel[1], "Text3" -> GrayLevel[0], "Text1Reverse" -> 
        GrayLevel[0.75], "Text2Reverse" -> GrayLevel[0.75], "Text3Reverse" -> 
        GrayLevel[0.75], "Dingbat" -> RGBColor[0.588235, 0.0470588, 0.164706],
         "Default" -> GrayLevel[0.317647], "Background" -> 
        RGBColor[0.588235, 0.0470588, 0.164706]}, 
      "FontSet" -> {
       "Display1" -> "Baskerville", "Display2" -> "Baskerville", "Display3" -> 
        "Baskerville", "Text1" -> "Baskerville", "Text2" -> "Baskerville", 
        "Text3" -> "Baskerville", "Dingbat" -> "Baskerville", "Default" -> 
        "Baskerville"}, "SlideBreakStyles" -> {}}], 
   Cell[
    StyleData["FirstSlide"], 
    PrivateCellOptions -> {
     "PagewiseNotebookBaseStyle" -> {
       BackgroundAppearance -> 
        FrontEnd`FileName[{"PresenterTools"}, 
          "Background-Facet-Garnet.png"]}}, Background -> None], 
   Cell[
    StyleData["Input"], ShowCellLabel -> False, FontFamily -> "Consolas", 
    FontSize -> 13, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    FontColor -> RGBColor[0., 0., 0.]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Output"], CellMargins -> {{50, 10}, {12, 5}}, ShowCellLabel -> 
       False, FontFamily -> "Times New Roman", FontSize -> 13, FontWeight -> 
       "Plain", FontSlant -> "Plain", 
       FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
       Magnification -> 1.], 
      Cell[
       StyleData["Subsection", "Slideshow Working"], MenuSortingValue -> 
       10000, FontSize :> 
       Dynamic[0.02 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
      Cell[
       StyleData[
       "Subsection", "Slideshow Presentation", StyleDefinitions -> 
        StyleData["Subsection", "Slideshow Working"]], MenuSortingValue -> 
       10000], 
      Cell[
       StyleData[
       "Subsection", "Scrolling Presentation", StyleDefinitions -> 
        StyleData["Subsection", "Slideshow Working"]], MenuSortingValue -> 
       10000], 
      Cell[
       StyleData["Input", "Slideshow Working"], MenuSortingValue -> 10000, 
       FontSize :> 
       Dynamic[0.013999999999999999` 
         FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
      Cell[
       StyleData[
       "Input", "Slideshow Presentation", StyleDefinitions -> 
        StyleData["Input", "Slideshow Working"]], MenuSortingValue -> 10000], 
      Cell[
       StyleData[
       "Input", "Scrolling Presentation", StyleDefinitions -> 
        StyleData["Input", "Slideshow Working"]], MenuSortingValue -> 10000], 
      Cell[
       StyleData["Output", "Slideshow Working"], MenuSortingValue -> 10000, 
       FontSize :> 
       Dynamic[0.01 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
      Cell[
       StyleData[
       "Output", "Slideshow Presentation", StyleDefinitions -> 
        StyleData["Output", "Slideshow Working"]], MenuSortingValue -> 10000], 
      Cell[
       StyleData[
       "Output", "Scrolling Presentation", StyleDefinitions -> 
        StyleData["Output", "Slideshow Working"]], MenuSortingValue -> 
       10000]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
       "OutsideFrame"], 
      Cell[
       StyleData["Text", "Slideshow Working"], MenuSortingValue -> 10000, 
       FontSize :> 
       Dynamic[0.0162 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
      Cell[
       StyleData[
       "Text", "Slideshow Presentation", StyleDefinitions -> 
        StyleData["Text", "Slideshow Working"]], MenuSortingValue -> 10000], 
      Cell[
       StyleData[
       "Text", "Scrolling Presentation", StyleDefinitions -> 
        StyleData["Text", "Slideshow Working"]], MenuSortingValue -> 10000], 
      Cell[
       StyleData["Subsubsection", "Slideshow Working"], MenuSortingValue -> 
       10000, FontSize :> 
       Dynamic[0.018999999999999993` 
         FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowGroupOpener -> "OutsideFrame", 
       CellMargins -> {{120, Inherited}, {2, 10}}, MenuSortingValue -> 10000, 
       FontSlant -> "Italic"], 
      Cell[
       StyleData[
       "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
        StyleData["Subsubsection", "Slideshow Working"]], MenuSortingValue -> 
       10000], 
      Cell[
       StyleData[
       "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
        StyleData["Subsubsection", "Slideshow Working"]], MenuSortingValue -> 
       10000]}, Open]], 
   Cell[
    StyleData["InitializationCell"], Background -> GrayLevel[1]]}, Visible -> 
  False, FrontEndVersion -> 
  "12.0 for Microsoft Windows (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
"Theme" -> "Facet"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 136, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"982cb8d0-e30a-4511-88ca-6ef11be3fb3c",
   CellTags->"SlideShowHeader"],
  Cell[1854, 51, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"b8146cd2-dcdf-483c-8d10-1a6d0c30904d",
   CellTags->"SlideShowHeader"],
  Cell[520312, 8570, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"ba3d6aee-0d33-47b8-adc7-2b985cbfbc12",
   CellTags->"SlideShowHeader"],
  Cell[613252, 10591, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"40739e40-e35b-41d7-9798-cda2d4d25c98",
   CellTags->"SlideShowHeader"],
  Cell[1010331, 18785, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"03fa509f-b039-4b57-b209-18bf721937b8",
   CellTags->"SlideShowHeader"],
  Cell[1247765, 23743, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"8c19f260-0780-4b38-8d49-0f61ac0af1c6",
   CellTags->"SlideShowHeader"],
  Cell[1509301, 29084, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"5defa854-936f-4f31-8d0f-cc7f38c25f57",
   CellTags->"SlideShowHeader"],
  Cell[1654690, 32116, 188, 3, 63, "SlideShowNavigationBar",ExpressionUUID->"727c711c-2162-4a1b-ac5d-b1546a2cf4c8",
   CellTags->"SlideShowHeader"]},
 "Info-d2707fec-2f75-4e1b-9c0d-526594081d13"->{
  Cell[1670120, 32470, 13145, 301, 126, "Print",ExpressionUUID->"ae3356f2-a0f4-42c1-b204-186c5d3cb38f",
   CellTags->"Info-d2707fec-2f75-4e1b-9c0d-526594081d13"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1704206, 33269},
 {"Info-d2707fec-2f75-4e1b-9c0d-526594081d13", 1705431, 33286}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 136, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"982cb8d0-e30a-4511-88ca-6ef11be3fb3c",
 CellTags->"SlideShowHeader"],
Cell[719, 26, 538, 10, 495, "Title",ExpressionUUID->"d3477319-66e7-4716-a08c-038b8ae61f84"],
Cell[1260, 38, 557, 8, 362, "Title",ExpressionUUID->"7857bd94-c60f-4f41-b86e-d965aac597a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854, 51, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"b8146cd2-dcdf-483c-8d10-1a6d0c30904d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2001, 57, 263, 4, 134, "Section",ExpressionUUID->"e210ba14-65eb-465e-b025-a3ffac59d11c"],
Cell[CellGroupData[{
Cell[2289, 65, 1385, 21, 199, "Subsection",ExpressionUUID->"f582ff7d-eb2f-4fb6-835a-0f08e71ad5bc"],
Cell[3677, 88, 225, 4, 92, "Text",ExpressionUUID->"317eb84d-6d55-482c-9362-009c03c1b21f"],
Cell[3905, 94, 516172, 8465, 407, "Input",ExpressionUUID->"835457d1-7ffe-40eb-a801-8c683a5053d2"]
}, Open  ]],
Cell[520092, 8562, 171, 2, 72, "Subsection",ExpressionUUID->"9569da8b-6ca6-43dc-92e8-56e52240f4a7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[520312, 8570, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"ba3d6aee-0d33-47b8-adc7-2b985cbfbc12",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[520459, 8576, 369, 6, 134, "Section",ExpressionUUID->"60dd1757-a634-4c44-bbbe-ac63e83797de"],
Cell[CellGroupData[{
Cell[520853, 8586, 525, 10, 79, "Subsection",ExpressionUUID->"076e352a-3a7e-4a00-8317-8f18640c7022"],
Cell[CellGroupData[{
Cell[521403, 8600, 2419, 58, 51, "Input",ExpressionUUID->"64149950-e78e-4d5f-bc75-c6fe73c42454"],
Cell[523825, 8660, 13696, 320, 110, "Output",ExpressionUUID->"08925bb9-4870-4416-a4be-6cc315233eb8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[537570, 8986, 487, 9, 59, "Subsection",ExpressionUUID->"a4a692fd-fbd2-405e-aef6-914239330626"],
Cell[CellGroupData[{
Cell[538082, 8999, 1018, 24, 83, "Input",ExpressionUUID->"cf2308df-5e17-49e4-865a-3e4a51fdb82d"],
Cell[539103, 9025, 15755, 372, 108, "Output",ExpressionUUID->"d80582e2-c0f6-441c-88f2-9320389556eb"],
Cell[554861, 9399, 58120, 1179, 224, "Output",ExpressionUUID->"0620642e-ccec-4f6e-9a55-a66d11b63925"]
}, Open  ]]
}, Closed]],
Cell[613008, 10582, 195, 3, 52, "Subsection",ExpressionUUID->"76235a15-f1be-4098-ad62-d543e9c63dc3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[613252, 10591, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"40739e40-e35b-41d7-9798-cda2d4d25c98",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[613399, 10597, 419, 7, 134, "Section",ExpressionUUID->"6e42b1fe-0822-4d30-b33f-6cdbf9e0e374"],
Cell[CellGroupData[{
Cell[613843, 10608, 410, 8, 72, "Subsection",ExpressionUUID->"d8b16b6a-21a5-40ec-9557-523103432a7b"],
Cell[614256, 10618, 1527, 47, 52, "Text",ExpressionUUID->"2545ee46-7de5-4b56-8566-e72e3a88dd58"],
Cell[CellGroupData[{
Cell[615808, 10669, 2488, 58, 151, "Input",ExpressionUUID->"72461aed-3600-4943-878f-646c759d0a8b"],
Cell[618299, 10729, 95233, 1925, 176, "Output",ExpressionUUID->"484bcff1-570e-4677-a532-780bf69ec475",
 Magnification->1.]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[713581, 12660, 644, 14, 52, "Subsection",ExpressionUUID->"3a1968a3-e24d-4fd2-91bc-20567c06cba7"],
Cell[714228, 12676, 1912, 62, 89, "Text",ExpressionUUID->"fbe3b4f2-f0b7-4d21-b51b-a30067f740a1"],
Cell[CellGroupData[{
Cell[716165, 12742, 1581, 34, 151, "Input",ExpressionUUID->"1ba024a5-6c91-42af-a357-5555241b6d96"],
Cell[717749, 12778, 94878, 1927, 176, "Output",ExpressionUUID->"388b865b-1fdd-47f0-bcfe-32c9b820c32c",
 Magnification->1.]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[812676, 14711, 544, 12, 52, "Subsection",ExpressionUUID->"ba894d4e-5193-4129-b418-cb63e7ede403"],
Cell[813223, 14725, 2327, 65, 52, "Text",ExpressionUUID->"26cefe77-7750-4b5b-96a3-c8cc254e6667"],
Cell[CellGroupData[{
Cell[815575, 14794, 2884, 70, 151, "Input",ExpressionUUID->"eed37445-df75-4d19-af2e-49ce4b286886"],
Cell[818462, 14866, 94856, 1926, 176, "Output",ExpressionUUID->"77f829de-91a9-447a-95f9-47715d51ee53",
 Magnification->1.]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[913367, 16798, 514, 11, 52, "Subsection",ExpressionUUID->"2990ba79-4e6a-4c39-ace8-dedb6fd2a23c"],
Cell[913884, 16811, 405, 12, 52, "Text",ExpressionUUID->"184e9987-e55e-43ac-9e5b-974be399ffa0"],
Cell[CellGroupData[{
Cell[914314, 16827, 871, 18, 151, "Input",ExpressionUUID->"3337a26c-a704-4e3d-bbb1-75f76d1f2c50"],
Cell[915188, 16847, 94900, 1926, 176, "Output",ExpressionUUID->"53bd5909-351a-4be1-a21c-8ba9dd22e484",
 Magnification->1.]
}, Open  ]]
}, Closed]],
Cell[1010115, 18777, 167, 2, 52, "Subsection",ExpressionUUID->"082027ba-6783-48fb-927c-35b2620e92a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010331, 18785, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"03fa509f-b039-4b57-b209-18bf721937b8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1010478, 18791, 258, 4, 127, "Section",ExpressionUUID->"56487bab-7338-4801-8a13-35a6a68bf173"],
Cell[CellGroupData[{
Cell[1010761, 18799, 493, 11, 72, "Subsection",ExpressionUUID->"cb1cf172-92a3-4773-ae5f-42d3f4622603"],
Cell[1011257, 18812, 7503, 226, 355, "Text",ExpressionUUID->"226582ce-22ab-4adb-a49e-209162c0c35a"],
Cell[CellGroupData[{
Cell[1018785, 19042, 3583, 89, 151, "Input",ExpressionUUID->"e72bed7e-650f-463b-8689-f5aacffbdb2d"],
Cell[1022371, 19133, 94928, 1927, 176, "Output",ExpressionUUID->"fef933a3-de4d-4c37-86a0-40f1e21b7320",
 Magnification->1.]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1117348, 21066, 521, 10, 52, "Subsection",ExpressionUUID->"b2d1331e-1cab-402f-9033-d8839857b2d0"],
Cell[CellGroupData[{
Cell[1117894, 21080, 194, 3, 53, "Subsubsection",ExpressionUUID->"cbed7216-ea04-4c9e-84b2-0f55ede74e2e"],
Cell[1118091, 21085, 1163, 39, 55, "Text",ExpressionUUID->"27089457-bce4-47d5-9ce2-901766f3a8e9"],
Cell[1119257, 21126, 11252, 203, 316, "Input",ExpressionUUID->"ca8b3e48-1cdc-4e9c-adf5-b22cd182e6f5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1130546, 21334, 219, 3, 41, "Subsubsection",ExpressionUUID->"316c99bf-4061-4816-9a9e-486537611041"],
Cell[1130768, 21339, 1173, 41, 52, "Text",ExpressionUUID->"0bb94367-f1be-4ca4-88a9-f9d650d6a562"],
Cell[1131944, 21382, 9147, 169, 315, "Input",ExpressionUUID->"a85bf312-acf0-4d25-8bfd-16e3c9326c51"]
}, Closed]],
Cell[CellGroupData[{
Cell[1141128, 21556, 245, 4, 41, "Subsubsection",ExpressionUUID->"4555e9f8-1143-4dec-9ebf-e14079d9a6ff"],
Cell[1141376, 21562, 1070, 40, 55, "Text",ExpressionUUID->"cec0586c-313f-4df0-8ab6-04d08d75f417"],
Cell[1142449, 21604, 8930, 165, 317, "Input",ExpressionUUID->"541ad5b7-f690-417c-a928-218f10e1caaa"]
}, Closed]],
Cell[CellGroupData[{
Cell[1151416, 21774, 405, 6, 41, "Subsubsection",ExpressionUUID->"f8115de7-348f-4ea7-9a56-a77479315004"],
Cell[CellGroupData[{
Cell[1151846, 21784, 932, 20, 151, "Input",ExpressionUUID->"5c72cefd-ee81-4097-a036-7ae5d754afa4"],
Cell[1152781, 21806, 94729, 1924, 176, "Output",ExpressionUUID->"8db9fad2-b55b-4902-bfd2-a017ccab80ec",
 Magnification->1.]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[1247549, 23735, 167, 2, 52, "Subsection",ExpressionUUID->"4d6bd209-d072-4188-a723-dd650d54f6e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247765, 23743, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"8c19f260-0780-4b38-8d49-0f61ac0af1c6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1247912, 23749, 365, 6, 127, "Section",ExpressionUUID->"bfbd91e5-2557-47d3-91de-00fb853ce052"],
Cell[CellGroupData[{
Cell[1248302, 23759, 330, 7, 72, "Subsection",ExpressionUUID->"7aef017c-4a70-4b82-87fb-109cc65f3bbc"],
Cell[1248635, 23768, 528, 9, 52, "Text",ExpressionUUID->"8e20791d-652a-4c04-824f-e6a5801dc16d"],
Cell[CellGroupData[{
Cell[1249188, 23781, 2062, 53, 88, "Input",ExpressionUUID->"b6102497-77d1-48b4-9f26-6c3d691d9240"],
Cell[1251253, 23836, 138664, 2807, 226, "Output",ExpressionUUID->"3017c9b2-c185-4f7c-a603-d5a42c22d67b",
 Magnification->1.]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1389966, 26649, 393, 8, 52, "Subsection",ExpressionUUID->"4e009a08-5d90-4ba9-b8e0-2e89f30b2e2a"],
Cell[CellGroupData[{
Cell[1390384, 26661, 338, 4, 49, "Input",ExpressionUUID->"6d0c421e-98f7-43da-9314-6ffcecf6aa3c"],
Cell[1390725, 26667, 118335, 2405, 772, "Output",ExpressionUUID->"1c808ade-aa15-4bc0-b1fa-2db39cc250a4"]
}, Open  ]]
}, Closed]],
Cell[1509087, 29076, 165, 2, 52, "Subsection",ExpressionUUID->"b5cfa526-da14-4f9d-bf5e-b08a161ad1ea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1509301, 29084, 122, 2, 63, "SlideShowNavigationBar",ExpressionUUID->"5defa854-936f-4f31-8d0f-cc7f38c25f57",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1509448, 29090, 221, 4, 127, "Section",ExpressionUUID->"5992bfcd-df20-44c5-bcca-47c67948498a"],
Cell[CellGroupData[{
Cell[1509694, 29098, 756, 12, 72, "Subsection",ExpressionUUID->"d05768f3-f880-4a07-8665-5e4adac23905"],
Cell[CellGroupData[{
Cell[1510475, 29114, 191, 2, 51, "Input",ExpressionUUID->"deeefeef-1358-479e-b5d7-0e6334e5e03f"],
Cell[1510669, 29118, 86373, 1783, 628, "Output",ExpressionUUID->"21fd3de9-156b-4272-a9e5-5b4ac3a134cb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1597091, 30907, 662, 12, 52, "Subsection",ExpressionUUID->"71e8d94c-a4bf-497b-94e4-3fec6cf693c6"],
Cell[CellGroupData[{
Cell[1597778, 30923, 198, 2, 49, "Input",ExpressionUUID->"658635c7-bb5f-4977-9cea-a52a662e3256"],
Cell[1597979, 30927, 56468, 1177, 540, "Output",ExpressionUUID->"3d84236b-8798-4abd-8cee-572432376831"]
}, Open  ]]
}, Closed]],
Cell[1654474, 32108, 167, 2, 52, "Subsection",ExpressionUUID->"42998945-52a0-4423-ac8d-84a176261a23"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1654690, 32116, 188, 3, 63, "SlideShowNavigationBar",ExpressionUUID->"727c711c-2162-4a1b-ac5d-b1546a2cf4c8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1654903, 32123, 204, 3, 127, "Section",ExpressionUUID->"2b4693a3-63b5-4b0a-8134-32b2945be37d"],
Cell[CellGroupData[{
Cell[1655132, 32130, 470, 11, 72, "Subsection",ExpressionUUID->"d04e17b7-fd97-461d-b414-d4f6fe9cdc16"],
Cell[1655605, 32143, 324, 7, 51, "Input",ExpressionUUID->"a594e276-6810-44c9-b0f7-5224f7dcef72",
 InitializationCell->True],
Cell[1655932, 32152, 430, 7, 51, "Input",ExpressionUUID->"4be65b51-72de-4d0a-bec3-cc484c53edd0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1656387, 32163, 262, 5, 51, "Input",ExpressionUUID->"e9dc72df-27d6-467c-8e87-b004a48dce8b",
 InitializationCell->True],
Cell[1656652, 32170, 13465, 298, 213, "Output",ExpressionUUID->"e70fb443-f8a9-41e4-bf7b-9bb887688b57"],
Cell[1670120, 32470, 13145, 301, 126, "Print",ExpressionUUID->"ae3356f2-a0f4-42c1-b204-186c5d3cb38f",
 CellTags->"Info-d2707fec-2f75-4e1b-9c0d-526594081d13"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1683314, 32777, 434, 8, 52, "Subsection",ExpressionUUID->"eccc9b91-0585-455f-a29a-aa5e132f7e1d"],
Cell[1683751, 32787, 11267, 261, 104, "Input",ExpressionUUID->"abb2cca1-397b-4fd4-aabd-e7c892256df8",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1695055, 33053, 461, 9, 52, "Subsection",ExpressionUUID->"2b30d2ae-946b-4639-8a97-7b7657eeaa76"],
Cell[1695519, 33064, 1667, 36, 104, "Input",ExpressionUUID->"bc301d70-f36e-4e39-8e36-d2922d6c64a5",
 InitializationCell->True]
}, Closed]],
Cell[1697201, 33103, 195, 3, 52, "Subsection",ExpressionUUID->"703c36b8-a5bb-4fbc-b1a2-0a23793ea741"]
}, Open  ]]
}, Open  ]]
}
]
*)

